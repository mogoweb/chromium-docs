<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/WebPage">
<head>
<meta http-equiv="X-UA-Compatible" content="chrome=1" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var e="wtsrt_",g="tbsd_",h="tbnd_",k="start",l="_wtsrt",m="_tbnd",n="CSI/";(function(){function f(a){this.t={};this.tick=function(a,c,b){this.t[a]=[void 0!=b?b:(new Date).getTime(),c];if(void 0==b)try{window.console.timeStamp(n+a)}catch(d){}};this.tick(k,null,a)}var a;window.performance&&(a=window.performance.timing);var p=a?new f(a.responseStart):new f;window.jstiming={Timer:f,load:p};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick(l,void 0,c),b.tick(e,l,d),b.tick(g,e))}try{a=null,
window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick(m,void 0,window.chrome.csi().startE),b.tick(h,m,c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick(m,void 0,window.external.startE),b.tick(h,m,c))),a&&(window.jstiming.pt=a)}catch(q){}})(); })()
</script>
<link rel="shortcut icon" href="/_/rsrc/1354323194313/favicon.ico" type="image/x-icon" />
<link rel="apple-touch-icon" href="https://ssl.gstatic.com/sites/p/56e332/system/app/images/apple-touch-icon.png" type="image/png" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var d="",g="__duration__",h="function";function k(c){return document.getElementById(c)}window.byId=k;function l(c){return c.replace(/^\s+|\s+$/g,d)}window.trim=l;var m=[],n=0;window.JOT_addListener=function(c,a,b){var e=new String(n++);c={eventName:c,handler:a,compId:b,key:e};m.push(c);return e};window.JOT_removeListenerByKey=function(c){for(var a=0;a<m.length;a++)if(m[a].key==c){m.splice(a,1);break}};
window.JOT_removeAllListenersForName=function(c){for(var a=0;a<m.length;a++)m[a].eventName==c&&m.splice(a,1)};window.JOT_postEvent=function(c,a,b){var e={eventName:c,eventSrc:a||{},payload:b||{}};if(window.JOT_fullyLoaded)for(a=m.length,b=0;b<a&&b<m.length;b++){var f=m[b];f&&f.eventName==c&&(e.listenerCompId=f.compId||d,(f=typeof f.handler==h?f.handler:window[f.handler])&&f(e))}else window.JOT_delayedEvents.push({eventName:c,eventSrc:a,payload:b})};window.JOT_delayedEvents=[];
window.JOT_fullyLoaded=!1;window.JOT_formatRelativeToNow=function(c,a){var b=((new Date).getTime()-c)/6E4;if(1440<=b||0>b)return null;var e=0;60<=b&&(b/=60,e=2);2<=b&&e++;return a?window.JOT_siteRelTimeStrs[e].replace(g,Math.floor(b)):window.JOT_userRelTimeStrs[e].replace(g,Math.floor(b))}; })()
</script>
<script>

  

  var breadcrumbs = [{"path":"/blink","deleted":false,"title":"Blink","dir":"ltr"},{"path":"/blink/blink-gc","deleted":false,"title":"Garbage Collection for Blink C++ objects (a.k.a. Oilpan)","dir":"ltr"}];
  var JOT_clearDotPath = 'https://ssl.gstatic.com/sites/p/56e332/system/app/images/cleardot.gif';

  
  var JOT_userRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

  
  

  

  var webspace = {"enableAnalytics":true,"pageSharingId":"jotspot_page","enableUniversalAnalytics":false,"sharingPolicy":"OPENED_WITH_INDICATOR","siteTitle":"The Chromium Projects","isStartPageEnabled":true,"adsensePublisherId":null,"features":{"languageSelectDefaultTextSetToDefault":true,"validateClientGvizDataSourceUrls":true,"moreMobileStyleImprovements":true,"newInsertMenuIcons":true,"accessibleSortingButtons":true,"domainAnalyticsInGAOnly":true,"noCaptcha":true,"fileCabinetScreenReaderFix":true,"updatedTosAndPrivacyLinks":null,"pageDrafts":false,"mobileOrientationFix":true,"plusBadge":false,"pdfEmbedSupport":false,"jsClickFix":true},"isPublic":true,"isConsumer":false,"serverFlags":{"cajaBaseUrl":"//www.gstatic.com/caja","cajaDebugMode":false},"onepickBaseUrl":"https://docs.google.com","domainAnalyticsAccountId":"","plusPageId":"","signInUrl":"https://www.google.com/a/SelectSession?continue\u003dhttps://sites.google.com/a/chromium.org/dev/blink/blink-gc\u0026service\u003djotspot","analyticsAccountId":"UA-5484340-1","scottyUrl":"/_/upload","homePath":"/","siteNoticeUrlEnabled":null,"plusPageUrl":"","adsensePromoClickedOrSiteIneligible":true,"csiReportUri":"https://gg.google.com/csi","sharingId":"jotspot","termsUrl":"//www.google.com/intl/en/policies/terms/","gvizVersion":1,"editorResources":{"sitelayout":["https://ssl.gstatic.com/sites/p/56e332/system/app/css/sitelayouteditor.css"],"text":["https://ssl.gstatic.com/sites/p/56e332/system/js/codemirror.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codemirror_css.css","https://ssl.gstatic.com/sites/p/56e332/system/js/trog_edit__en.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/trogedit.css","/_/rsrc/1441580320000/system/app/css/editor.css","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codeeditor.css","/_/rsrc/1441580320000/system/app/css/camelot/editor-jfk-wlb.css"]},"sharingUrlPrefix":"/_/sharing","isAdsenseEnabled":true,"domain":"chromium.org","baseUri":"","name":"dev","siteTemplateId":false,"siteNoticeRevision":null,"siteNoticeUrlAddress":null,"siteNoticeMessage":null,"page":{"isRtlLocale":false,"canDeleteWebspace":null,"isPageDraft":null,"parentPath":"/blink","parentWuid":"wuid:gx:1c15db3ef1df1880","siteLocale":"en","timeZone":"America/Los_Angeles","type":"text","title":"Garbage Collection for Blink C++ objects (a.k.a. Oilpan)","locale":"en","wuid":"wuid:gx:24c2f953c72d15a6","revision":39,"path":"/blink/blink-gc","isSiteRtlLocale":false,"pageInheritsPermissions":null,"name":"blink-gc","canChangePath":true,"state":"","properties":{},"bidiEnabled":false,"currentTemplate":{"path":"/system/app/pagetemplates/text","title":"Web Page"}},"canPublishScriptToAnyone":true,"user":{"keyboardShortcuts":true,"sessionIndex":"","guest_":true,"displayNameOrEmail":"guest","userName":"guest","uid":"","renderMobile":false,"domain":"","namespace":"","hasWriteAccess":false,"namespaceUser":false,"primaryEmail":"guest","hasAdminAccess":false},"gadgets":{"baseUri":"/system/app/pages/gadgets"}};
  webspace.page.breadcrumbs = breadcrumbs;

  
  var JOT_siteRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

</script>
<script type="text/javascript">
                window.jstiming.load.tick('scl');
              </script>
<meta name="title" content="Garbage Collection for Blink C++ objects (a.k.a. Oilpan) - The Chromium Projects" />
<meta itemprop="name" content="Garbage Collection for Blink C++ objects (a.k.a. Oilpan) - The Chromium Projects" />
<meta property="og:title" content="Garbage Collection for Blink C++ objects (a.k.a. Oilpan) - The Chromium Projects" />
<meta name="description" content="Home of the Chromium Open Source Project" />
<meta itemprop="description" content="Home of the Chromium Open Source Project" />
<meta id="meta-tag-description" property="og:description" content="Home of the Chromium Open Source Project" />
<style type="text/css">
</style>
<link rel="stylesheet" type="text/css" href="https://ssl.gstatic.com/sites/p/56e332/system/app/themes/beigeandblue/standard-css-beigeandblue-ltr-ltr.css" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/overlay.css?cb=beigeandblueundefineda100%25%25150goog-ws-leftthemedefaultstandard" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/camelot/allthemes-view.css" />
<!--[if IE]>
          <link rel="stylesheet" type="text/css" href="/system/app/css/camelot/allthemes%2die.css" />
        <![endif]-->
<title>Garbage Collection for Blink C++ objects (a.k.a. Oilpan) - The Chromium Projects</title>
<meta itemprop="image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<meta property="og:image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<script type="text/javascript">
                window.jstiming.load.tick('cl');
              </script>
</head>
<body xmlns="http://www.google.com/ns/jotspot" id="body" class=" en            ">
<div id="sites-page-toolbar" class="sites-header-divider">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-status" class="sites-status" style="display:none;"><div id="sites-notice" class="sites-notice" role="status" aria-live="assertive"> </div></div>
</div>
<div id="sites-chrome-everything-scrollbar">
<div id="sites-chrome-everything" class="">
<div id="sites-chrome-page-wrapper" style="direction: ltr">
<div id="sites-chrome-page-wrapper-inside">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-chrome-header-wrapper" style="height:auto;">
<table id="sites-chrome-header" class="sites-layout-hbox" cellspacing="0" style="height:auto;">
<tr class="sites-header-primary-row" id="sites-chrome-userheader">
<td id="sites-header-title" class="" role="banner"><div class="sites-header-cell-buffer-wrapper"><a href="https://www.chromium.org/" id="sites-chrome-userheader-logo"><img id="logo-img-id" src="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" alt="The Chromium Projects" class="sites-logo  " /></a><h2><a href="https://www.chromium.org/" dir="ltr" id="sites-chrome-userheader-title">The Chromium Projects</a></h2></div></td><td class="sites-layout-searchbox  "><div class="sites-header-cell-buffer-wrapper"><form id="sites-searchbox-form" action="/system/app/pages/search" role="search"><input type="hidden" id="sites-searchbox-scope" name="scope" value="search-site" /><input type="text" id="jot-ui-searchInput" name="q" size="20" value="" aria-label="Search this site" /><div id="sites-searchbox-button-set" class="goog-inline-block"><div role="button" id="sites-searchbox-search-button" class="goog-inline-block jfk-button jfk-button-standard" tabindex="0">Search this site</div></div></form></div></td>
</tr>
<tr class="sites-header-secondary-row" id="sites-chrome-horizontal-nav">
<td colspan="2" id="sites-chrome-header-horizontal-nav-container" role="navigation">
</td>
</tr>
</table>
</div>
<div id="sites-chrome-main-wrapper">
<div id="sites-chrome-main-wrapper-inside">
<table id="sites-chrome-main" class="sites-layout-hbox" cellspacing="0" cellpadding="{scmCellpadding}" border="0">
<tr>
<td id="sites-chrome-sidebar-left" class="sites-layout-sidebar-left initial" style="width:150px">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_7648876402527094" class="sites-embed" role="navigation"><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-projects" jotId="wuid:gx:10ae433dadbbab13" class="sites-navigation-link">Home</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/Home" jotId="wuid:gx:43582b9d2029d3af" class="sites-navigation-link">Chromium</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-os" jotId="wuid:gx:83df2ab1f8880ba" class="sites-navigation-link">Chromium OS</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_14720868319272995" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Quick links</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/for-testers/bug-reporting-guidelines" class="sites-navigation-link">Report bugs</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/developers/discussion-groups" class="sites-navigation-link">Discuss</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/system/app/pages/sitemap/hierarchy" jotId="wuid:gx:4b58a9a350ad12f" class="sites-navigation-link">网站地图</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19690813310444355" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Other sites</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://blog.chromium.org/" class="sites-navigation-link">Chromium Blog</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://code.google.com/chrome/extensions/" class="sites-navigation-link">Google Chrome Extensions</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="https://developers.google.com/chrome/chrome-frame/" class="sites-navigation-link">Google Chrome Frame</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19695218559354544" class="sites-embed" role="complementary"><h4 class="sites-embed-title"></h4><div class="sites-embed-content sites-embed-content-sidebar-textbox"><div dir="ltr"><span style="font-size:x-small">Except as otherwise </span><a href="http://developers.google.com/site-policies.html#restrictions"><span style="font-size:x-small">noted</span></a><span style="font-size:x-small">, the content of this page is licensed under a </span><a href="http://creativecommons.org/licenses/by/2.5/"><span style="font-size:x-small">Creative Commons Attribution 2.5 license</span></a><span style="font-size:x-small">, and examples are licensed under the </span><a href="http://src.chromium.org/viewvc/chrome/trunk/src/LICENSE" target="_blank"><span style="font-size:x-small">BSD License</span></a><span style="font-size:x-small">.<br /></span></div></div></div>
</td>
<td id="sites-canvas-wrapper">
<div id="sites-canvas" role="main">
<div id="goog-ws-editor-toolbar-container"> </div>
<div xmlns="http://www.w3.org/1999/xhtml" id="title-crumbs" style="">
<A href="/blink" dir="ltr">Blink</A>‎ &gt; ‎
  </div>
<h3 xmlns="http://www.w3.org/1999/xhtml" id="sites-page-title-header" style="" align="left">
<span id="sites-page-title" dir="ltr" tabindex="-1" style="outline: none">Garbage Collection for Blink C++ objects (a.k.a. Oilpan)</span>
</h3>
<div id="sites-canvas-main" class="sites-canvas-main">
<div id="sites-canvas-main-content">
<table xmlns="http://www.w3.org/1999/xhtml" cellspacing="0" class="sites-layout-name-one-column sites-layout-hbox"><tbody><tr><td class="sites-layout-tile sites-tile-name-content-1"><div dir="ltr"><div>
<div><div class="sites-embed-align-left-wrapping-off"><div class="sites-embed-border-off sites-embed" style="width:512px;"><div class="sites-embed-content sites-embed-type-toc"><div class="goog-toc sites-embed-toc-maxdepth-6"><p>Contents</p><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Introduction"><strong>1 </strong>Introduction</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Terminology"><strong>1.1 </strong>Terminology</a></li></ol></li><li class="goog-toc"><a href="#TOC-How-to-write-code-with-GC-objects"><strong>2 </strong>How to write code with GC objects</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Basic-rules"><strong>2.1 </strong>Basic rules</a></li><li class="goog-toc"><a href="#TOC-Destructor"><strong>2.2 </strong>Destructor</a></li><li class="goog-toc"><a href="#TOC-Part-classes"><strong>2.3 </strong>Part classes</a></li><li class="goog-toc"><a href="#TOC-Stack-only-classes"><strong>2.4 </strong>Stack-only classes</a></li><li class="goog-toc"><a href="#TOC-WeakMember-"><strong>2.5 </strong>WeakMember&lt;&gt;</a></li><li class="goog-toc"><a href="#TOC-Multiple-inheritance-of-garbage-collected-classes-and-USING_GARBAGE_COLLECTED_MIXIN-type-"><strong>2.6 </strong>Multiple inheritance of garbage-collected classes, and USING_GARBAGE_COLLECTED_MIXIN(type)</a></li><li class="goog-toc"><a href="#TOC-Collections-and-ALLOW_ONLY_INLINE_ALLOCATION-"><strong>2.7 </strong>Collections, and ALLOW_ONLY_INLINE_ALLOCATION()</a></li><li class="goog-toc"><a href="#TOC-Trivially-constructible-classes-do-not-need-the-trait-specialization.-If-your-class-isn-t-trivial-in-that-sense-you-ll-run-into-a-static-assert-when-compiling-saying-something-like:"><strong>2.8 </strong>Trivially constructible classes do not need the trait specialization. If your class isn't trivial in that sense, you'll run into a static assert when compiling, saying something like:</a></li><li class="goog-toc"><a href="#TOC-Threading"><strong>2.9 </strong>Threading</a></li><li class="goog-toc"><a href="#TOC-DEFINE_TRACE-macros"><strong>2.10 </strong>DEFINE_TRACE macros</a></li></ol></li><li class="goog-toc"><a href="#TOC-Transition-to-GC-from-reference-counting"><strong>3 </strong>Transition to GC from reference counting</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Transition-table"><strong>3.1 </strong>Transition table</a></li></ol></li></ol></div></div></div></div></div>
</div>
<div><br />
</div>
<h2><a name="TOC-Introduction"></a>Introduction</h2>
<div>See <a href="https://docs.google.com/a/google.com/document/d/1y7_0ni0E_kxvrah-QtnreMlzCDKN3QP4BN1Aw7eSLfY/edit" target="_blank">Oilpan Design Document</a>.</div>
<h3><a name="TOC-Terminology"></a>Terminology</h3>
<div>
<ul><li><b>Heap</b><br />
In Oilpan context, "heap" means memory to store objects which support garbage collection.</li></ul>
</div>
<hr />
<h2><a name="TOC-How-to-write-code-with-GC-objects"></a>How to write code with GC objects</h2>
<h3><a name="TOC-Basic-rules"></a>Basic rules</h3>
<div>If you'd like to make a class T garbage-collected, you should do</div>
<div>
<ol><li>Include <code>platform/heap/Handle.h</code>. (We just include <span style="color:rgb(0,96,0);font-family:monospace;font-size:13.3333330154419px">Handle.h</span> instead of including other header files in platform/heap/.)</li><li>Inherit <code>GarbageCollected&lt;T&gt;</code> or <code>GarbageCollectedFinalized&lt;T&gt;</code> as the first base class.</li><ol><li><div style="font-size:13.3333330154419px">If, and only if, the destructor <span style="color:rgb(0,96,0);font-family:monospace;font-size:13.3333330154419px;background-color:transparent">T::~T </span><span style="font-size:13.3333330154419px;background-color:transparent">must be called, use </span><span style="font-size:13.3333330154419px;background-color:transparent"><span style="color:rgb(0,96,0);font-family:monospace;font-size:13.3333330154419px">GarbageCollectedFinalized&lt;T&gt;</span>.</span></div></li></ol>
<li>Members of <span style="color:rgb(0,96,0);font-family:monospace;font-size:13.3333330154419px">T</span>:</li><ol><li>Garbage-collected data members: Use <code>Member&lt;U&gt; m_name</code>, and must be traced. </li><li>References to non-garbage-collected objects use OwnPtr, RefPtr, etc. require <span style="color:rgb(0,96,0);font-family:monospace;font-size:13.3333330154419px">T</span> to be <span style="color:rgb(0,96,0);font-family:monospace;font-size:13.3333330154419px">GarbageCollectedFinalized&lt;T&gt;</span><span style="font-size:13.3333330154419px">.</span></li></ol><ul><li><span style="font-size:13.3333330154419px;background-color:transparent">(See <a href="https://www.chromium.org/blink/blink-gc#TOC-Transition-to-GC-from-reference-counting">Transition Table</a> below for details.)</span></li></ul>
<li>Define <code>T::trace(Visitor*) <font color="#000000" face="arial, sans-serif">methods using {DEFINE,DECLARE}_TRACE macros</font></code>, and trace the garbage-collected data members.</li>
<li>Update references to instances of <span style="color:rgb(0,96,0);font-family:monospace">T</span><span style="font-size:13.3333330154419px">:</span></li><ol><li>If it is a data member of</li><ol><li>A garbage-collected class, e.g. <span style="color:rgb(0,96,0);font-family:monospace">Composer</span>: Add <code>Member&lt;T&gt;</code> to it and trace it in <code>Composer::trace(Visitor*)</code>.</li><li><span style="font-size:13.3333330154419px">A non-garbage-collected class: </span>Use <code>Persistent&lt;T&gt;</code>.</li></ol><li>Use <code>T*</code> if it is a local variable or a function argument.</li></ol></ol></div>
<h3><a name="TOC-Destructor"></a>Destructor</h3>
<div>Destructors are called for <code>GarbageCollectedFinalized</code>. However we can't access other garbage-collected objects in destructors. We can't manage destruction order of objects, and we can't know when collectable objects are destructed.</div>
<div>We recommend to make destructor implementations empty.</div>
<h3><a name="TOC-Part-classes"></a>Part classes</h3>
<div>If a class P is always used as a data member of another class O, P can't be garbage-collected. If P has a data member of a garbage-collected class, we should do the followings:</div>
<div>
<ul><li>Make the data member <code>Persistent&lt;&gt;</code> if O is not garbage-collected</li>
<li>If O is garbage-collected,</li>
<ul><li>Make the data member <code>Member&lt;&gt;</code></li>
<li>Mark P <code>DISALLOW_ALLOCATION()</code></li>
<li>Add <code>P::trace()</code></li>
<li>Trace P in <code>O::trace()</code></li></ul></ul>
<div style="border:1px solid #888;padding:8px;background:#cee;font-family:monospace;white-space:pre-wrap">class P {
    DISALLOW_ALLOCATION();
public:
    DEFINE_INLINE_TRACE() { visitor-&gt;trace(m_data); }

private:
    Member&lt;T&gt; m_data;
};

class O : public GarbageCollected&lt;O&gt; {
public:
    DEFINE_INLINE_TRACE { visitor-&gt;trace(m_p); }

private:
    P m_p;
};
</div>
<font face="courier new, monospace" style="background-color:rgb(255,255,255)">
<div><br />
</div>
</font></div>
<h3><a name="TOC-Stack-only-classes"></a>Stack-only classes</h3>
<div>If a class S is always allocated on a stack, and S has a data member of a garbage-collected class, we should do</div>
<div>
<ul><li>Mark S <code>STACK_ALLOCATED()</code></li>
<li>Make the data member <code>Member&lt;&gt;</code></li>
<li>Not add <code>S::trace()</code></li></ul>
</div>
<h3><a name="TOC-WeakMember-"></a>WeakMember&lt;&gt;</h3>
<div>It becomes nullptr when garbage collection is executed and the pointed object can be collectable.</div><div><br /></div><div><code>HeapHashSet&lt;WeakMember&lt;T&gt;&gt;</code> and <code>HeapHashMap&lt;WeakMember&lt;T&gt;, U&gt;</code> have special behavior. When a T object stored in them is collected, HashSet/HashMap entry for it is automatically removed.</div>
<h3><a name="TOC-Multiple-inheritance-of-garbage-collected-classes-and-USING_GARBAGE_COLLECTED_MIXIN-type-"></a>Multiple inheritance of garbage-collected classes, and USING_GARBAGE_COLLECTED_MIXIN(type)</h3>
<div>A class can't inherit multiple classes which inherit <code>GarbageCollected</code> or <code>GarbageCollectedFinalized</code>. In such case, one of the base classes should inherit <code>GarbageCollected</code> or <code>GarbageCollectedFinalized</code>, and other base classes should inherit <code>GarbageCollectedMixin</code>. The derived class should have <code>USING_GARBAGE_COLLECTED_MIXIN(</code><i><code>DerivedClass</code></i><code>)</code>.</div>
<div><br />
</div>
<div style="border:1px solid #888;padding:8px;background:#cee;font-family:monospace;white-space:pre-wrap">
class Base1 : public GarbageCollected&lt;Base1&gt; {
    DECLARE_VIRTUAL_TRACE();
};

class Interface : public GarbageCollectedMixin {
<span style="font-size:13.3333330154419px">    DECLARE_VIRTUAL_TRACE();
</span>};

class DerivedClass : public Base1, public Interface {
    USING_GARBAGE_COLLECTED_MIXIN(DerivedClass);
public:
    DEFINE_INLINE_VIRTUAL_TRACE()
    {
        Base1::trace(visitor);
        Interface::trace(visitor);
    }
};
</div>
<h3><a name="TOC-Collections-and-ALLOW_ONLY_INLINE_ALLOCATION-"></a>Collections, and ALLOW_ONLY_INLINE_ALLOCATION()</h3>
<div>Collections of references to garbage-collected class T should be</div>
<div><ul><li><span style="font-size:10pt;background-color:transparent">"Heap" version of collection classes.  e.g. HeapVector, HeapHashSet, HeapHashMap</span></li><li><span style="font-size:10pt;background-color:transparent">Component type should be <code>Member&lt;T&gt;</code> or <code>WeakMember&lt;T&gt;</code>.  Do not use <code>T*</code>.</span></li></ul></div>
<div><br />
</div>
<div>Stack-allocated heap collections are automatically traced.  Data members of heap collections needs to be traced in <code>trace(Visitor*)</code>.</div>
<div><br />
</div>
<div>Collections of class T which contains references to garbage-collected classes should be</div>
<div><ul><li><span style="font-size:10pt;background-color:transparent">Normal collection of T, and T contains <code>Persistent&lt;&gt;</code>.</span></li></ul></div>
<div>It works.  But we'd like to avoid <code>Persistent&lt;&gt;</code>. We recommend:</div>
<div><ul><li><span style="font-size:10pt;background-color:transparent">"Heap" version of collection classes</span></li><li><span style="font-size:10pt;background-color:transparent">Component type should be T as is.</span></li><li><span style="font-size:10pt;background-color:transparent">T should have <code>ALLOW_ONLY_INLINE_ALLOCATION()</code>, <code>Member&lt;&gt;</code>s, and <code>trace()</code> function.</span></li></ul><code>ALLOW_ONLY_INLINE_ALLOCATION()</code> means the class can't be used outside of collections. If T has <span style="color:rgb(0,96,0);font-family:monospace;font-size:13.3333330154419px;background-color:transparent">ALLOW_ONLY_INLINE_ALLOCATION()</span><span style="font-size:10pt;background-color:transparent"> and T is put in HeapVector, then T may additionally need a custom vector trait specialization using <code>WTF_ALLOW_INIT_WITH_MEM_FUNCTIONS()</code> and similar.</span></div>
<div><br />
</div>
<div style="border:1px solid #888;padding:8px;background:#cee;font-family:monospace;white-space:pre-wrap">
<b>// Not recommended:</b>
class T {
private:
    Persistent&lt;G&gt; m_t;
};

Vector&lt;T&gt; list;

<b>// Recommended:<br /></b>
namespace blink {<br /><br />class Component {
    ALLOW_ONLY_INLINE_ALLOCATION();
public:
    DEFINE_INLINE_TRACE() { visitor-&gt;trace(m_g); }
private:
    Member&lt;G&gt; m_g;
};<br /><br />} // namespace blink<br /></div><div style="border:1px solid #888;padding:8px;background:#cee;font-family:monospace;white-space:pre-wrap"><span style="font-size:10pt">WTF_ALLOW_INIT_WITH_MEM_FUNCTIONS(blink::Component);</span></div><div style="border:1px solid #888;padding:8px;background:#cee;font-family:monospace;white-space:pre-wrap"><span style="font-size:10pt">HeapVector&lt;T&gt; list;</span> </div><h3><a name="TOC-Trivially-constructible-classes-do-not-need-the-trait-specialization.-If-your-class-isn-t-trivial-in-that-sense-you-ll-run-into-a-static-assert-when-compiling-saying-something-like:"></a><span style="font-weight:normal"><font size="2">Trivially constructible classes do not need the trait specialization. If your class isn't trivial in that sense, you'll run into a static assert when compiling, saying something like:</font></span></h3><div><div class="sites-codeblock sites-codesnippet-block"><span style="font-weight:normal"><font size="2"><code> </code></font></span><span style="background-color:transparent"><font size="2"><code>HeapVectorBacking doesn't support objects that cannot be initialized with memset.</code></font></span></div></div><div><span style="background-color:transparent"><font size="2"><br /></font></span></div><h3><a name="TOC-Threading"></a>Threading</h3>
<div>A garbage-collected object is owned by a thread which allocated it, and the object is destructed in the owner thread.  Objects in other threads can have references to the object.  All of references to the object must be cleared before the owner thread termination, and the object can't outlive the owner thread.</div>
<div><br />
</div>
<div>A <code>Persistent&lt;T&gt;</code> object is also owned by a thread which allocate it. It must be destructed in the owner thread.  We can destruct <code>CrossThreadPersistent&lt;T&gt;</code> in non-owner thread.  However it doesn't mean we can transfer the ownership of an object pointed by a <code>CrossThreadPersistent&lt;T&gt;</code> to another thread.</div><div><br /></div><h3><a name="TOC-DEFINE_TRACE-macros"></a>DEFINE_TRACE macros</h3><div><div><font color="#274e13" face="courier new, monospace">T::trace() </font>methods are defined via <span style="font-size:10pt;background-color:transparent">DEFINE_TRACE helper macros.</span></div><div><br /></div><div><span style="font-size:10pt;background-color:transparent">By using DEFINE_TRACE macros, we can define the two variants of trace() methods (the fast path T::trace(InlinedGlobalMarkingVisitor), and slow path T::trace(Visitor*)) at once.</span></div><div><br /></div><div><div style="font-size:13.3333330154419px"><table border="1" bordercolor="#888" cellspacing="0" style="border-collapse:collapse;border-color:rgb(136,136,136);border-width:1px"><tbody><tr><td style="width:360px;height:14px"> <b>Macro<span> </span></b></td><td style="width:356px;height:14px"><b>Expansion </b></td></tr><tr><td style="width:360px;height:81px"><span style="font-size:13.3333330154419px">class X : public GarbageCollected {<br /></span>public:<br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">    <b>DECLARE_TRACE</b>();<br />};</span></td><td style="width:356px;height:81px"><span style="font-size:13.3333330154419px">class X : public GarbageCollected {<br /></span><span style="font-size:13.3333330154419px">public:</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">    void trace(Visitor*);</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">    void trace(Visitor);</span><span style="font-size:13.3333330154419px"><br />};</span></td></tr><tr><td style="width:360px;height:14px"><span style="font-size:13.3333330154419px">class X : public GarbageCollected {<br /></span><span style="font-size:13.3333330154419px">public:</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">    <b>DECLARE_VIRTUAL_TRACE</b>();<br />};</span></td><td style="width:356px;height:14px"><span style="font-size:13.3333330154419px">class X : public GarbageCollected {<br /></span><span style="font-size:13.3333330154419px">public:</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">    virtual void trace(Visitor*);</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">    virtual void trace(InlinedGlobalMarkingVisitor);</span><span style="font-size:13.3333330154419px"><br />};</span></td></tr><tr><td style="width:360px;height:14px"><span style="font-size:13.3333330154419px">class X : public GarbageCollected {<br /></span><span style="font-size:13.3333330154419px">public:</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">    <b>DEFINE_INLINE_TRACE</b>() { visitor-&gt;trace(m_a); }<br /><br />private:<br />    Member&lt;Y&gt; m_a;<br />};</span></td><td style="width:356px;height:14px"><span style="font-size:13.3333330154419px">class X : public GarbageCollected {<br /></span><span style="font-size:13.3333330154419px">public:</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">    void trace</span><span style="font-size:13.3333330154419px">(Visitor* visitor) { visitor-&gt;trace(m_a); }</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">    void trace</span><span style="font-size:13.3333330154419px">(InlinedGlobalMarkingVisitor visitor) { visitor-&gt;trace(m_a); }</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px"><br />private:<br />    Member&lt;Y&gt; m_a;<br />};</span></td></tr><tr><td><span style="font-size:13.3333330154419px">class X : public GarbageCollected {<br /></span><span style="font-size:13.3333330154419px">public:</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">    <b>DEFINE_INLINE_VIRTUAL_TRACE</b>()<br />    { visitor-&gt;trace(m_a); }<br /><br />private:<br />    Member&lt;Y&gt; m_a;<br />};</span></td><td><span style="font-size:13.3333330154419px">class X : public GarbageCollected {<br /></span><span style="font-size:13.3333330154419px">public:</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">    virtual void trace</span><span style="font-size:13.3333330154419px">(Visitor* visitor)<br />    { visitor-&gt;trace(m_a); }</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">    virtual void trace</span><span style="font-size:13.3333330154419px">(InlinedGlobalMarkingVisitor visitor)<br />    { visitor-&gt;trace(m_a); }</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px"><br />private:<br />    Member&lt;Y&gt; m_a;<br />};</span></td></tr><tr><td><b>DEFINE_TRACE</b>(X)<br />{<br />  visitor-&gt;trace(m_a);<br />}</td><td><span style="font-size:13.3333330154419px">void X::trace(Visitor* visitor)</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">{</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">  visitor-&gt;trace(m_a);</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">}<br /></span><span style="font-size:13.3333330154419px"><br />void X::trace(InlinedGlobalMarkingVisitor visitor)</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">{</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">  visitor-&gt;trace(m_a);</span><br style="font-size:13.3333330154419px" /><span style="font-size:13.3333330154419px">}</span></td></tr></tbody></table><br /></div><div style="font-size:13.3333330154419px">After: class X { DECLARE_TRACE(); }</div></div><div>Before: class X { virtual void trace(Visitor*); }</div><div><br /></div><div>Before: class X { virtual void trace(Visitor*) {...} };</div><div>After: class X { DEFINE_INLINE_VIRTUAL_TRACE() { ... } };</div><div><br /></div><div>Before: void X::trace(Visitor* visitor) { ... }</div><div>After: DEFINE_TRACE(X) { ... }</div></div><div><br /></div><div><br /></div>
<hr />
<h2><a name="TOC-Transition-to-GC-from-reference-counting"></a>Transition to GC from reference counting</h2>
<h3><a name="TOC-Transition-table"></a>Transition table</h3>
<div>
<table border="1" bordercolor="#888" style="border-collapse:collapse;border-color:rgb(136,136,136);border-width:1px">
<tbody>
<tr>
<td>Old</td>
<td>New</td>
<td>Transition</td>
<td> </td>
</tr>
<tr>
<td>class Foo : public ScriptWrappable, public RefCounted&lt;Foo&gt; {</td>
<td>class Foo : public <b>GarbageCollectedFinalized</b>&lt;Foo&gt;, public ScriptWrappable {<br />
</td>
<td>RefCountedWillBeGarbageCollectedFinalized</td>
<td>If we need to run the destructor of one of the parent classes, we should  make this class "Finalized."<br />
We should put GarbageCollected(Finalized) first if the class uses multiple inheritance.</td>
</tr>
<tr>
<td>class Foo : public RefCounted&lt;Foo&gt; {<br />
public:<br />
    ~Foo() { /* meaningful code here */ }<br />
<br />
</td>
<td style="width:202.39999997615814px;height:106.39999997615814px">class Foo : public <b>GarbageCollectedFinalized</b>&lt;Foo&gt; {<br />
public:<br />
    ~Foo() { ... }</td>
<td style="width:268.39999997615814px;height:106.39999997615814px">RefCountedWillBeGarbageCollectedFinalized</td>
<td style="width:170.39999997615814px;height:106.39999997615814px">If we need to run the destructor of this class, we should make this class "Finalized."</td>
</tr>
<tr>
<td style="width:206.39999997615814px;height:106.39999997615814px">class Foo : public RefCounted&lt;Foo&gt; {<br />
public:<br />
    ~Foo() { }<br />
    OwnPtr&lt;Bar&gt; m_bar;<br />
<br />
</td>
<td style="width:202.39999997615814px;height:106.39999997615814px">class Foo : public <b>GarbageCollectedFinalized</b>&lt;Foo&gt; {<br />
public:<br />
    ~Foo() { }<br />
    OwnPtr&lt;Bar&gt; m_bar;</td>
<td style="width:268.39999997615814px;height:106.39999997615814px">RefCountedWillBeGarbageCollectedFinalized</td>
<td style="width:170.39999997615814px;height:106.39999997615814px">If we need to run destructors of data members, we should make this class "Finalized."</td>
</tr>
<tr>
<td style="width:206.39999997615814px;height:62.39999997615814px">class Foo : public RefCounted&lt;Foo&gt; {
</td>
<td style="width:202.39999997615814px;height:62.39999997615814px">class Foo : public <b>GarbageCollected</b>&lt;Foo&gt; {<br />
</td>
<td style="width:268.39999997615814px;height:62.39999997615814px">RefCountedWillBeGarbageCollected</td>
<td style="width:170.39999997615814px;height:62.39999997615814px">If we don't need to run the destructor at all, we should make this class "GarbageCollected."</td>
</tr>
<tr>
<td>class Foo : public RefCounted&lt;Foo&gt; { ... };<br />
class Bar : public Foo { ... };</td>
<td>class Foo : public GarbageCollected&lt;Foo&gt; { ... };<br />
class Bar : public Foo { ... };</td>
<td> </td>
<td>We don't need to make derived classes GarbageCollected.</td>
</tr>
</tbody>
</table>
<br />
</div>
<div>
<table border="1" bordercolor="#888" cellspacing="0" style="border-collapse:collapse;border-color:rgb(136,136,136);border-width:1px">
<tbody>
<tr>
<td style="width:221.18181824684143px;height:14.18181824684143px">Old</td>
<td style="width:325.18181824684143px;height:14.18181824684143px">New</td>
<td style="width:231.18181824684143px;height:14.18181824684143px">Transition</td>
<td style="width:289.18181824684143px;height:14.18181824684143px"> </td>
</tr>
<tr>
<td style="width:221.18181824684143px;height:154.18181824684143px">class Foo {<br />
    RefPtr&lt;Bar&gt; m_bar;<br />
};<br />
class Bar : RefCounted&lt;Bar&gt; { ... };</td>
<td style="width:325.18181824684143px;height:154.18181824684143px">class Foo {<br />
    <b>Persistent</b>&lt;Bar&gt; m_bar;<br />
};<br />
class Bar : GarbageCollected&lt;Bar&gt; { ... };<br />
<br />
</td>
<td style="width:231.18181824684143px;height:154.18181824684143px">RefPtrWillBePersistent</td>
<td style="width:289.18181824684143px;height:154.18181824684143px">A data member pointing an on-heap object from off-heap object should be Persistent.</td>
</tr>
<tr>
<td style="width:221.18181824684143px;height:155.18181824684143px">class Foo : RefCounted&lt;Foo&gt;<span style="background-color:transparent;font-size:10pt"> {</span><br />
    RefPtr&lt;Bar&gt; m_bar;<br />
};<br />
class Bar : RefCounted&lt;Bar&gt;<span style="background-color:transparent;font-size:10pt"> { ... };</span></td>
<td style="width:325.18181824684143px;height:155.18181824684143px">class Foo : GarbageCollectedFinalized&lt;Foo&gt;<span style="font-size:10pt;background-color:transparent"> {</span><br />
    <b>RefPtr</b>&lt;Bar&gt; m_bar;<br />
};<br />
class Bar : RefCounted&lt;Bar&gt;<span style="font-size:10pt;background-color:transparent"> { ... };</span></td>
<td style="width:231.18181824684143px;height:155.18181824684143px"> </td>
<td style="width:289.18181824684143px;height:155.18181824684143px">No changes for data members pointing off-heap objects from on-heap objects.</td>
</tr>
<tr>
<td style="width:221.18181824684143px;height:250.18181824684143px">class Foo : RefCounted&lt;Foo&gt;<span style="font-size:10pt;background-color:transparent"> {</span><br />
    RefPtr&lt;Bar&gt; m_bar;<br />
};<br />
class Bar : RefCounted&lt;Bar&gt;<span style="font-size:10pt;background-color:transparent"> { ... };</span></td>
<td style="width:325.18181824684143px;height:250.18181824684143px">class Foo : GarbageCollected&lt;Foo&gt;<span style="font-size:10pt;background-color:transparent"> {</span><br />
    <b>Member</b>&lt;Bar&gt; m_bar;<br />    <b>DEFINE_INLINE_TRACE() { visitor-&gt;trace(m_bar); }</b><br />
};<br />
class Bar : GarbageCollected&lt;Bar&gt;<span style="font-size:10pt;background-color:transparent"> { ... };</span></td>
<td style="width:231.18181824684143px;height:250.18181824684143px">RefPtrWillBeMember</td>
<td style="width:289.18181824684143px;height:250.18181824684143px">A data member pointing an on-heap object from another on-heap object should be a Member.<br />
Also, the data member should be traced.</td>
</tr>
<tr>
<td style="width:221.18181824684143px;height:135.18181824684143px">class Foo {<br />
    Vector&lt;RefPtr&lt;Bar&gt;&gt; m_bar;<br />
};<br />
class Bar : RefCounted&lt;Bar&gt; { ... };</td>
<td style="width:325.18181824684143px;height:135.18181824684143px">class Foo {<br />
    <b>PersistentHeapVector</b>&lt;<b>Member</b>&lt;Bar&gt; &gt; m_bar;<br />
};<br />
class Bar : GarbageCollected&lt;Bar&gt; { ... };<br />
</td>
<td style="width:231.18181824684143px;height:135.18181824684143px"> WillBePersistentHeapVector&lt; RefPtrWillBeMember&lt;&gt;&gt;</td>
<td style="width:289.18181824684143px;height:135.18181824684143px">Collections of on-heap objects must be either of HeapFoo or PersistentHeapFoo. PersistentHeapVector should be used in this case because the field is a member of an off-heap object.</td>
</tr>
<tr>
<td style="width:221.18181824684143px;height:137.18181824684143px">class Foo : RefCounted&lt;Foo&gt;<span style="font-size:10pt;background-color:transparent"> {</span><br />
    HashSet&lt;RefPtr&lt;Bar&gt; &gt; m_bar;<br />
    HashSet&lt;Baz&gt; m_baz;<br />
};<br />
class Bar : RefCounted&lt;Bar&gt;<span style="font-size:10pt;background-color:transparent"> { ... };</span></td>
<td style="width:325.18181824684143px;height:137.18181824684143px">class Foo : GarbageCollected&lt;Foo&gt;<span style="font-size:10pt;background-color:transparent"> {</span><br />
    <b>HeapHashSet</b>&lt;<b>Member</b>&lt;Bar&gt; &gt; m_bar;<br />
    HashSet&lt;Baz&gt; m_baz;<br />
    <b>void trace(Visitor* visitor) { visitor-&gt;trace(m_bar); }</b><br />
};<br />
class Bar : GarbageCollected&lt;Bar&gt;<span style="font-size:10pt;background-color:transparent"> { ... };</span></td>
<td style="width:231.18181824684143px;height:137.18181824684143px">WillBeHeapHashSet&lt; RefPtrWillBeMember&lt;&gt;&gt;</td>
<td style="width:289.18181824684143px;height:137.18181824684143px">Collections of on-heap objects must be either of HeapFoo or PersistentHeapFoo. HeapHashSet should be used in this case because the field is a member of an on-heap object.</td>
</tr>
</tbody>
</table>
<br />
</div>
<table border="1" bordercolor="#888" cellspacing="0" style="border-collapse:collapse;border-color:rgb(136,136,136);border-width:1px">
<tbody>
<tr>
<td style="width:198.18181824684143px;height:14.18181824684143px">Old</td>
<td style="width:249.18181824684143px;height:14.18181824684143px">New</td>
<td style="width:157.18181824684143px;height:14.18181824684143px">Transition</td>
<td style="width:462.18181824684143px;height:14.18181824684143px"> </td>
</tr>
<tr>
<td style="width:198.18181824684143px;height:71.18181824684143px">void f()<br />
{<br />
    RefPtr&lt;Foo&gt; protector(this);<br />
    ....</td>
<td style="width:249.18181824684143px;height:71.18181824684143px">void f()<br />
{<br />
    ....</td>
<td style="width:157.18181824684143px;height:71.18181824684143px">RefPtrWillBeRawPtr</td>
<td style="width:462.18181824684143px;height:71.18181824684143px">Local pointers are automatically traced.</td>
</tr>
<tr>
<td style="width:198.18181824684143px;height:100.18181824684143px">PassRefPtr&lt;Foo&gt; create()<br />
{<br />
    return adoptRef(new Foo);<br />
}<br />
<br />
</td>
<td style="width:249.18181824684143px;height:100.18181824684143px">Foo* create() {<br />
    return new Foo;<br />
}<br />
<br />
</td>
<td style="width:157.18181824684143px;height:100.18181824684143px">RefPtrWillBeRawPtr, adoptRefWillBeNoop</td>
<td style="width:462.18181824684143px;height:100.18181824684143px">Return values and arguments of functions are automatically traced.<br />
<br />
</td>
</tr>
<tr>
<td style="width:198.18181824684143px;height:90.18181824684143px">void f()<br />
{<br />
    Vector&lt;RefPtr&lt;Foo&gt; &gt; fooList;<br />
<br />
</td>
<td style="width:249.18181824684143px;height:90.18181824684143px">void f()<br />
{<br />
    <b>HeapVector</b>&lt;<b>Member</b>&lt;Foo&gt; &gt; fooList;<br />
<br />
</td>
<td style="width:157.18181824684143px;height:90.18181824684143px">WillBeHeapVector&lt; RefPtrWillBeMember&lt;&gt;&gt;</td>
<td style="width:462.18181824684143px;height:90.18181824684143px">Collections of on-heap objects must be either of HeapFoo or PersistentHeapFoo. HeapVector should be used in this case because local variables are never persistent.</td>
</tr>
</tbody>
</table>
<br /></div></td></tr></tbody></table>
</div> 
</div> 
<div id="sites-canvas-bottom-panel">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-subpages"> </div>
<div id="sites-attachments-container">
</div>
<a xmlns="http://www.w3.org/1999/xhtml" name="page-comments"></a>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-comments"><div class="sites-comment-docos-wrapper"><div class="sites-comment-docos"><div class="sites-comment-docos-background"></div><div class="sites-comment-docos-header"><div class="sites-comment-docos-header-title">Comments</div></div><div id="sites-comment-docos-pane" class="sites-comment-docos-pane"></div></div></div></div>
</div>
</div> 
</td> 
</tr>
</table> 
</div> 
</div> 
<div id="sites-chrome-footer-wrapper">
<div id="sites-chrome-footer-wrapper-inside">
<div id="sites-chrome-footer">
</div>
</div>
</div>
</div> 
</div> 
<div id="sites-chrome-adminfooter-container">
<div xmlns="http://www.w3.org/1999/xhtml" class="sites-adminfooter" role="navigation"><p><a class="sites-system-link" href="https://www.google.com/a/UniversalLogin?service=jotspot&amp;continue=https://sites.google.com/a/chromium.org/dev/blink/blink-gc">Sign in</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/recentChanges">Recent Site Activity</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/reportAbuse" target="_blank">Report Abuse</a><span aria-hidden="true">|</span><a class="sites-system-link" href="javascript:;" onclick="window.open(webspace.printUrl)">Print Page</a><span aria-hidden="true">|</span><span class="sites-system-link">Powered By</span> <b class="powered-by"><a href="http://sites.google.com">Google Sites</a></b></p></div>
</div>
</div> 
</div> 
<div id="sites-chrome-onebar-footer">
</div>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('sjl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" src="https://ssl.gstatic.com/sites/p/56e332/system/js/jot_min_view__en.js"></script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('jl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml">
      
          sites.core.Analytics.createTracker();
          sites.core.Analytics.trackPageview();
        
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
                    sites.Searchbox.initialize(
                        'sites-searchbox-search-button',
                        {"object":[]}['object'],
                        'search-site',
                        {"label":"Configure search options...","url":"/system/app/pages/admin/settings"});
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
      gsites.HoverPopupMenu.createSiteDropdownMenus('sites-header-nav-dropdown', false);
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("7648876402527094", "Navigation", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_7648876402527094');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("14720868319272995", "Quick links", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_14720868319272995');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("19690813310444355", "Other sites", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_19690813310444355');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
              new sites.CommentPane('//docs.google.com/comments/d/AAHRpnXvrAwjAfmld0ObrebBiGRq9x3SuOFm6X-KIeYyysfezQVErsf4RnwVPBNJRhC1OjALsT-EWRyzvLP8WdiAIwTX0TwrG7s8pBklfBspCrGpkjI5Eb4dDCwjlhRV6YNuzhUANG_6X/api/js?anon=true',
                  false, false);
            </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
  setTimeout(function() {
    var fingerprint = gsites.date.TimeZone.getFingerprint([]);
    gsites.Xhr.send('https://www.chromium.org/_/tz', null, null, 'GET', null, null, { afjstz: fingerprint });
  }, 500);
</script>
<script xmlns="http://www.w3.org/1999/xhtml">
                    window.onload = function() {
                      if (false) {
                        JOT_setMobilePreview();
                      }
                      var loadTimer = window.jstiming.load;
                      loadTimer.tick("ol");
                      loadTimer["name"] = "load," + webspace.page.type + ",user_page";
                      window.jstiming.report(loadTimer, {}, 'https://gg.google.com/csi');
                    }
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
        JOT_insertAnalyticsCode(false,
            false);
      </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    var maestroRunner = new gsites.pages.view.SitesMaestroRunner(
        webspace, "en");
    maestroRunner.initListeners();
    maestroRunner.installEditRender();
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
  //<![CDATA[
    // Decorate any fastUI buttons on the page with a class of 'goog-button'.
    if (webspace.user.hasWriteAccess) {
      JOT_decorateButtons();
    }

    // Fires delayed events.
    (function() {
      JOT_fullyLoaded = true;
      var delayedEvents = JOT_delayedEvents;
      for (var x = 0; x < delayedEvents.length; x++) {
        var event = delayedEvents[x];
        JOT_postEvent(event.eventName, event.eventSrc, event.payload);
      }
      JOT_delayedEvents = null;
      JOT_postEvent('pageLoaded');
    })();
  //]]>
</script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    JOT_postEvent('decorateGvizCharts');
  </script>
<script type="text/javascript">
          JOT_setupPostRenderingManager();
        </script>
<script type="text/javascript">
          JOT_postEvent('renderPlus', null, 'sites-chrome-main');
        </script>
<div id="server-timer-div" style="display:none"> </div>
<script type="text/javascript">
          window.jstiming.load.tick('render');
          JOT_postEvent('usercontentrendered', this);
        </script>
</body>
</html>
