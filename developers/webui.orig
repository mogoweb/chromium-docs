<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/WebPage">
<head>
<meta http-equiv="X-UA-Compatible" content="chrome=1" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var e="wtsrt_",g="tbsd_",h="tbnd_",k="start",l="_wtsrt",m="_tbnd",n="CSI/";(function(){function f(a){this.t={};this.tick=function(a,c,b){this.t[a]=[void 0!=b?b:(new Date).getTime(),c];if(void 0==b)try{window.console.timeStamp(n+a)}catch(d){}};this.tick(k,null,a)}var a;window.performance&&(a=window.performance.timing);var p=a?new f(a.responseStart):new f;window.jstiming={Timer:f,load:p};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick(l,void 0,c),b.tick(e,l,d),b.tick(g,e))}try{a=null,
window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick(m,void 0,window.chrome.csi().startE),b.tick(h,m,c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick(m,void 0,window.external.startE),b.tick(h,m,c))),a&&(window.jstiming.pt=a)}catch(q){}})(); })()
</script>
<link rel="shortcut icon" href="/_/rsrc/1354323194313/favicon.ico" type="image/x-icon" />
<link rel="apple-touch-icon" href="https://ssl.gstatic.com/sites/p/56e332/system/app/images/apple-touch-icon.png" type="image/png" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var d="",g="__duration__",h="function";function k(c){return document.getElementById(c)}window.byId=k;function l(c){return c.replace(/^\s+|\s+$/g,d)}window.trim=l;var m=[],n=0;window.JOT_addListener=function(c,a,b){var e=new String(n++);c={eventName:c,handler:a,compId:b,key:e};m.push(c);return e};window.JOT_removeListenerByKey=function(c){for(var a=0;a<m.length;a++)if(m[a].key==c){m.splice(a,1);break}};
window.JOT_removeAllListenersForName=function(c){for(var a=0;a<m.length;a++)m[a].eventName==c&&m.splice(a,1)};window.JOT_postEvent=function(c,a,b){var e={eventName:c,eventSrc:a||{},payload:b||{}};if(window.JOT_fullyLoaded)for(a=m.length,b=0;b<a&&b<m.length;b++){var f=m[b];f&&f.eventName==c&&(e.listenerCompId=f.compId||d,(f=typeof f.handler==h?f.handler:window[f.handler])&&f(e))}else window.JOT_delayedEvents.push({eventName:c,eventSrc:a,payload:b})};window.JOT_delayedEvents=[];
window.JOT_fullyLoaded=!1;window.JOT_formatRelativeToNow=function(c,a){var b=((new Date).getTime()-c)/6E4;if(1440<=b||0>b)return null;var e=0;60<=b&&(b/=60,e=2);2<=b&&e++;return a?window.JOT_siteRelTimeStrs[e].replace(g,Math.floor(b)):window.JOT_userRelTimeStrs[e].replace(g,Math.floor(b))}; })()
</script>
<script>

  

  var breadcrumbs = [{"path":"/developers","deleted":false,"title":"For Developers","dir":"ltr"},{"path":"/developers/webui","deleted":false,"title":"Creating Chrome WebUI Interfaces","dir":"ltr"}];
  var JOT_clearDotPath = 'https://ssl.gstatic.com/sites/p/56e332/system/app/images/cleardot.gif';

  
  var JOT_userRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

  
  

  

  var webspace = {"enableAnalytics":true,"pageSharingId":"jotspot_page","enableUniversalAnalytics":false,"sharingPolicy":"OPENED_WITH_INDICATOR","siteTitle":"The Chromium Projects","isStartPageEnabled":true,"adsensePublisherId":null,"features":{"languageSelectDefaultTextSetToDefault":true,"validateClientGvizDataSourceUrls":true,"moreMobileStyleImprovements":true,"newInsertMenuIcons":true,"accessibleSortingButtons":true,"domainAnalyticsInGAOnly":true,"noCaptcha":true,"fileCabinetScreenReaderFix":true,"updatedTosAndPrivacyLinks":null,"pageDrafts":false,"mobileOrientationFix":true,"plusBadge":false,"pdfEmbedSupport":false,"jsClickFix":true},"isPublic":true,"isConsumer":false,"serverFlags":{"cajaBaseUrl":"//www.gstatic.com/caja","cajaDebugMode":false},"onepickBaseUrl":"https://docs.google.com","domainAnalyticsAccountId":"","plusPageId":"","signInUrl":"https://www.google.com/a/SelectSession?continue\u003dhttps://sites.google.com/a/chromium.org/dev/developers/webui\u0026service\u003djotspot","analyticsAccountId":"UA-5484340-1","scottyUrl":"/_/upload","homePath":"/","siteNoticeUrlEnabled":null,"plusPageUrl":"","adsensePromoClickedOrSiteIneligible":true,"csiReportUri":"https://gg.google.com/csi","sharingId":"jotspot","termsUrl":"//www.google.com/intl/en/policies/terms/","gvizVersion":1,"editorResources":{"sitelayout":["https://ssl.gstatic.com/sites/p/56e332/system/app/css/sitelayouteditor.css"],"text":["https://ssl.gstatic.com/sites/p/56e332/system/js/codemirror.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codemirror_css.css","https://ssl.gstatic.com/sites/p/56e332/system/js/trog_edit__en.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/trogedit.css","/_/rsrc/1441580320000/system/app/css/editor.css","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codeeditor.css","/_/rsrc/1441580320000/system/app/css/camelot/editor-jfk-wlb.css"]},"sharingUrlPrefix":"/_/sharing","isAdsenseEnabled":true,"domain":"chromium.org","baseUri":"","name":"dev","siteTemplateId":false,"siteNoticeRevision":null,"siteNoticeUrlAddress":null,"siteNoticeMessage":null,"page":{"isRtlLocale":false,"canDeleteWebspace":null,"isPageDraft":null,"parentPath":"/developers","parentWuid":"wuid:gx:982466121d9f2cd","siteLocale":"en","timeZone":"America/Los_Angeles","type":"text","title":"Creating Chrome WebUI Interfaces","locale":"en","wuid":"wuid:gx:5d86253130813b55","revision":34,"path":"/developers/webui","isSiteRtlLocale":false,"pageInheritsPermissions":null,"name":"webui","canChangePath":true,"state":"","properties":{},"bidiEnabled":false,"currentTemplate":{"path":"/system/app/pagetemplates/text","title":"Web Page"}},"canPublishScriptToAnyone":true,"user":{"keyboardShortcuts":true,"sessionIndex":"","guest_":true,"displayNameOrEmail":"guest","userName":"guest","uid":"","renderMobile":false,"domain":"","namespace":"","hasWriteAccess":false,"namespaceUser":false,"primaryEmail":"guest","hasAdminAccess":false},"gadgets":{"baseUri":"/system/app/pages/gadgets"}};
  webspace.page.breadcrumbs = breadcrumbs;

  
  var JOT_siteRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

</script>
<script type="text/javascript">
                window.jstiming.load.tick('scl');
              </script>
<meta name="title" content="Creating Chrome WebUI Interfaces - The Chromium Projects" />
<meta itemprop="name" content="Creating Chrome WebUI Interfaces - The Chromium Projects" />
<meta property="og:title" content="Creating Chrome WebUI Interfaces - The Chromium Projects" />
<meta name="description" content="Home of the Chromium Open Source Project" />
<meta itemprop="description" content="Home of the Chromium Open Source Project" />
<meta id="meta-tag-description" property="og:description" content="Home of the Chromium Open Source Project" />
<style type="text/css">
</style>
<link rel="stylesheet" type="text/css" href="https://ssl.gstatic.com/sites/p/56e332/system/app/themes/beigeandblue/standard-css-beigeandblue-ltr-ltr.css" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/overlay.css?cb=beigeandblueundefineda100%25%25150goog-ws-leftthemedefaultstandard" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/camelot/allthemes-view.css" />
<!--[if IE]>
          <link rel="stylesheet" type="text/css" href="/system/app/css/camelot/allthemes%2die.css" />
        <![endif]-->
<title>Creating Chrome WebUI Interfaces - The Chromium Projects</title>
<meta itemprop="image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<meta property="og:image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<script type="text/javascript">
                window.jstiming.load.tick('cl');
              </script>
</head>
<body xmlns="http://www.google.com/ns/jotspot" id="body" class=" en            ">
<div id="sites-page-toolbar" class="sites-header-divider">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-status" class="sites-status" style="display:none;"><div id="sites-notice" class="sites-notice" role="status" aria-live="assertive"> </div></div>
</div>
<div id="sites-chrome-everything-scrollbar">
<div id="sites-chrome-everything" class="">
<div id="sites-chrome-page-wrapper" style="direction: ltr">
<div id="sites-chrome-page-wrapper-inside">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-chrome-header-wrapper" style="height:auto;">
<table id="sites-chrome-header" class="sites-layout-hbox" cellspacing="0" style="height:auto;">
<tr class="sites-header-primary-row" id="sites-chrome-userheader">
<td id="sites-header-title" class="" role="banner"><div class="sites-header-cell-buffer-wrapper"><a href="https://www.chromium.org/" id="sites-chrome-userheader-logo"><img id="logo-img-id" src="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" alt="The Chromium Projects" class="sites-logo  " /></a><h2><a href="https://www.chromium.org/" dir="ltr" id="sites-chrome-userheader-title">The Chromium Projects</a></h2></div></td><td class="sites-layout-searchbox  "><div class="sites-header-cell-buffer-wrapper"><form id="sites-searchbox-form" action="/system/app/pages/search" role="search"><input type="hidden" id="sites-searchbox-scope" name="scope" value="search-site" /><input type="text" id="jot-ui-searchInput" name="q" size="20" value="" aria-label="Search this site" /><div id="sites-searchbox-button-set" class="goog-inline-block"><div role="button" id="sites-searchbox-search-button" class="goog-inline-block jfk-button jfk-button-standard" tabindex="0">Search this site</div></div></form></div></td>
</tr>
<tr class="sites-header-secondary-row" id="sites-chrome-horizontal-nav">
<td colspan="2" id="sites-chrome-header-horizontal-nav-container" role="navigation">
</td>
</tr>
</table>
</div>
<div id="sites-chrome-main-wrapper">
<div id="sites-chrome-main-wrapper-inside">
<table id="sites-chrome-main" class="sites-layout-hbox" cellspacing="0" cellpadding="{scmCellpadding}" border="0">
<tr>
<td id="sites-chrome-sidebar-left" class="sites-layout-sidebar-left initial" style="width:150px">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_7648876402527094" class="sites-embed" role="navigation"><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-projects" jotId="wuid:gx:10ae433dadbbab13" class="sites-navigation-link">Home</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/Home" jotId="wuid:gx:43582b9d2029d3af" class="sites-navigation-link">Chromium</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-os" jotId="wuid:gx:83df2ab1f8880ba" class="sites-navigation-link">Chromium OS</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_14720868319272995" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Quick links</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/for-testers/bug-reporting-guidelines" class="sites-navigation-link">Report bugs</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/developers/discussion-groups" class="sites-navigation-link">Discuss</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/system/app/pages/sitemap/hierarchy" jotId="wuid:gx:4b58a9a350ad12f" class="sites-navigation-link">网站地图</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19690813310444355" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Other sites</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://blog.chromium.org/" class="sites-navigation-link">Chromium Blog</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://code.google.com/chrome/extensions/" class="sites-navigation-link">Google Chrome Extensions</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="https://developers.google.com/chrome/chrome-frame/" class="sites-navigation-link">Google Chrome Frame</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19695218559354544" class="sites-embed" role="complementary"><h4 class="sites-embed-title"></h4><div class="sites-embed-content sites-embed-content-sidebar-textbox"><div dir="ltr"><span style="font-size:x-small">Except as otherwise </span><a href="http://developers.google.com/site-policies.html#restrictions"><span style="font-size:x-small">noted</span></a><span style="font-size:x-small">, the content of this page is licensed under a </span><a href="http://creativecommons.org/licenses/by/2.5/"><span style="font-size:x-small">Creative Commons Attribution 2.5 license</span></a><span style="font-size:x-small">, and examples are licensed under the </span><a href="http://src.chromium.org/viewvc/chrome/trunk/src/LICENSE" target="_blank"><span style="font-size:x-small">BSD License</span></a><span style="font-size:x-small">.<br /></span></div></div></div>
</td>
<td id="sites-canvas-wrapper">
<div id="sites-canvas" role="main">
<div id="goog-ws-editor-toolbar-container"> </div>
<div xmlns="http://www.w3.org/1999/xhtml" id="title-crumbs" style="">
<A href="/developers" dir="ltr">For Developers</A>‎ &gt; ‎
  </div>
<h3 xmlns="http://www.w3.org/1999/xhtml" id="sites-page-title-header" style="" align="left">
<span id="sites-page-title" dir="ltr" tabindex="-1" style="outline: none">Creating Chrome WebUI Interfaces</span>
</h3>
<div id="sites-canvas-main" class="sites-canvas-main">
<div id="sites-canvas-main-content">
<table xmlns="http://www.w3.org/1999/xhtml" cellspacing="0" class="sites-layout-name-one-column sites-layout-hbox"><tbody><tr><td class="sites-layout-tile sites-tile-name-content-1"><div dir="ltr">Creating a Chrome WebUI interface is simple yet involves changing a number of files. This guide briefly steps over the process. For brevity, copyright notices are not placed at the beginning of the new files but in practice do not forget to add these.<h3><a name="TOC-Creating-the-WebUI-page"></a>Creating the WebUI page</h3><div>WebUI resources are located in the resources folder, <code>src/chrome/browser/resources</code>. When creating WebUI resources, follow the <a href="https://www.chromium.org/developers/web-development-style-guide">Web Development Style Guide</a>. For a sample WebUI page you could start with the following files:</div><div><br /></div><div>src/chrome/browser/resources/hello_world.html:</div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><font size="2"><font color="#006000" face="monospace"><span style="font-family:Courier New;color:rgb(0,0,0);background-color:transparent;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap"><code>&lt;!DOCTYPE HTML&gt;</code><br /><code>&lt;html i18n-values="dir:textdirection"&gt;</code><br /><code>&lt;head&gt;</code><br /><code>  &lt;meta charset="utf-8"&gt;</code><br /><code>  &lt;title i18n-content="helloWorldTitle"&gt;&lt;/title&gt;</code><br /></span></font></font><font size="2"><font color="#006000" face="monospace"><span style="font-family:Courier New;color:rgb(0,0,0);background-color:transparent;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap"><code>  &lt;link rel="stylesheet" href="hello_world.css"&gt;</code><br /></span></font></font><span style="color:rgb(0,96,0);font-family:monospace;font-size:small;line-height:12px;white-space:pre-wrap">  &lt;script src="chrome://resources/js/cr.js"&gt;&lt;/script&gt;</span></div><div><font color="#006000" face="monospace" size="2"><span style="line-height:12px;white-space:pre-wrap">  &lt;script src="chrome://resources/js/load_time_data.js"&gt;&lt;/script&gt;</span></font></div><div><font color="#006000" face="monospace" size="2"><span style="line-height:12px;white-space:pre-wrap">  &lt;script src="</span><span style="line-height:11.98148250579834px;white-space:pre-wrap">chrome://resources/js/util.js"&gt;&lt;/script&gt;</span></font></div><div></div><div><font size="2"><font color="#006000" face="monospace"><span style="font-family:Courier New;color:rgb(0,0,0);background-color:transparent;vertical-align:baseline;white-space:pre-wrap"><code>  &lt;script src="strings.js"&gt;&lt;/script&gt;</code></span></font></font></div><div><font size="2"><font color="#006000" face="monospace"><span style="font-family:Courier New;color:rgb(0,0,0);background-color:transparent;vertical-align:baseline;white-space:pre-wrap"><code>  &lt;script src="hello_world.js"&gt;&lt;/script&gt;</code></span></font></font></div><div><span style="background-color:transparent;color:rgb(0,96,0);font-family:arial,sans-serif;font-size:small;line-height:1;white-space:pre-wrap">&lt;/head&gt;</span></div><div></div><div></div><div></div><div><font color="#006000" face="monospace" size="2"><span style="white-space:pre-wrap">&lt;body i18n-values=".style.fontFamily:fontfamily;.style.fontSize:fontsize"&gt;<br /></span><span style="font-family:Courier New;color:rgb(0,0,0);background-color:transparent;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap"><code><span>  &lt;h1 i18n-content="helloWorldTitle"&gt;&lt;/h1&gt;</span><br /></code></span></font></div><div><font color="#006000" face="monospace" size="2"><span style="font-family:Courier New;color:rgb(0,0,0);background-color:transparent;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap"><code><span><span>  &lt;p id="welcome-message"&gt;&lt;/p&gt;</span><br /></span></code></span></font></div><div><div><font size="2"><font color="#006000" face="monospace"><span style="font-family:Courier New;color:rgb(0,0,0);background-color:transparent;vertical-align:baseline;white-space:pre-wrap"><code> </code></span></font></font><font color="#006000" face="monospace" size="2"><span style="line-height:10.909090995788574px;white-space:pre-wrap">&lt;script src="chrome://resources/js/i18n_template2.js"&gt;&lt;/script&gt;</span></font></div></div><div><font color="#006000" face="monospace" size="2"><span style="font-family:Courier New;color:rgb(0,0,0);background-color:transparent;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap"><code>&lt;/body&gt;</code></span></font></div><div></div><div><font color="#006000" face="monospace" size="2"><span style="font-family:Courier New;color:rgb(0,0,0);background-color:transparent;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap"><code>&lt;/html&gt;</code></span></font></div></div><div><br /></div><div>src/chrome/browser/resources/hello_world.css:</div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code><font size="2">p {</font></code></div><div><code><font size="2">  white-space: pre-wrap;</font></code></div><div><code><font size="2">}</font></code></div><div></div></div><br /><div>src/chrome/browser/resources/hello_world.js:</div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code><font size="2">cr.define('hello_world', function() {</font></code></div><div><code><font size="2">  'use strict';</font></code></div><div><br /></div><div><code><font size="2">  /**</font></code></div><div><code><font size="2">   * Be polite and insert translated hello world strings for the user on loading.</font></code></div><div><code><font size="2">   */</font></code></div><div><code><font size="2">  function initialize() {</font></code></div><div><code><font size="2"><div>    $('welcome-message').textContent = loadTimeData.getStringF('welcomeMessage',</div><div>        loadTimeData.getString('userName'));</div></font></code></div><div><code><font size="2">  }</font></code></div><div><code><font size="2"><br /></font></code></div><div><code><font size="2">  // Return an object with all of the exports.</font></code></div><div><code><font size="2">  return {</font></code></div><div><code><font size="2">    initialize: initialize,</font></code></div><div><code><font size="2">  };</font></code></div><div><code><font size="2">});</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">document.addEventListener('DOMContentLoaded', hello_world.initialize);</font></code></div></div><h3><a name="TOC-Adding-the-resources-to-Chrome"></a>Adding the resources to Chrome</h3>Resources files are added to Chrome using the <code>src/chrome/browser/browser_resources.grd</code> file. The following additions add our hello_world files:<div><br /></div><div>src/chrome/browser/browser_resources.grd:<br /><div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code><font size="2">+ &lt;include name="IDR_HELLO_WORLD_HTML" file="resources\hello_world.html" type="BINDATA" /&gt;</font></code></div><div><div><code><font size="2">+ &lt;include name="IDR_HELLO_WORLD_CSS" file="resources\hello_world.css" type="BINDATA" /&gt;</font></code></div></div><div><div><code><font size="2">+ &lt;include name="IDR_HELLO_WORLD_JS" file="resources\hello_world.js" type="BINDATA" /&gt;</font></code></div></div></div><div><span style="font-size:16px;font-weight:bold"><br /></span></div><div><span style="font-size:16px;font-weight:bold">Adding URL constants for new chrome URL</span></div><div><br /></div><div>URL constants are stored in the files <code>src/chrome/common/url_constants.*</code>. This is where you will add the URL or URL's which will be directed to your new resources.</div><div><br /></div><div>src/chrome/common/url_constants.h:</div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code><font size="2">+ extern const char kChromeUIHelloWorldURL[];</font></code></div><div><code><font size="2">...</font></code></div><div><code><font size="2">+ extern const char kChromeUIHelloWorldHost[];</font></code></div></div><div><br /></div><div>src/chrome/common/url_constants.cc:</div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code><font size="2">+ const char kChromeUIHelloWorldURL[] = "chrome://hello-world/";</font></code></div><div><code><font size="2">...</font></code></div><div><code><font size="2">+ const char kChromeUIHelloWorldHost[] = "hello-world";</font></code></div></div><div><font size="3"><b><br /></b></font></div><div><span style="font-size:16px;font-weight:bold">Adding localized strings</span></div><div><br />We need a few string resources for translated strings to work on the new resource. The welcome message contains a variable with a sample value so that it can be accurately translated.</div><div><br /></div><div>src/chrome/app/generated_resources.grd:</div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code><font size="2">+ &lt;message name="IDS_HELLO_WORLD_TITLE" desc="A happy message saying hello to the world"&gt;</font></code></div><div><code><font size="2">+   Hello World!</font></code></div><div><font size="2"><code>+ &lt;/message&gt;</code><br /></font><div><code><font size="2">+ &lt;message name="IDS_HELLO_WORLD_WELCOME_TEXT" desc="Message welcoming the user to the hello world page"&gt;</font></code></div><div><code><font size="2">+   Welcome to this fancy Hello World page &lt;ph name="WELCOME_NAME"&gt;$1&lt;ex&gt;Chromium User&lt;/ex&gt;&lt;/ph&gt;!</font></code></div><div><code><font size="2">+ &lt;/message&gt;</font></code></div></div></div><br /><div><br /></div><span style="font-size:16px;font-weight:bold">Adding a WebUI class for handling requests to the chrome://hello-world/ URL</span><div><br /></div><div>Next we need a class to handle requests to this new resource URL. Typically this will subclass ChromeWebUI (but WebUI dialogs should subclass HtmlDialogUI instead).</div><div><br /></div><div>src/chrome/browser/ui/webui/hello_world_ui.h:</div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code><font size="2">#ifndef CHROME_BROWSER_UI_WEBUI_HELLO_WORLD_UI_H_</font></code></div><div><font size="2"><code>#define </code><code>CHROME_BROWSER_UI_WEBUI_HELLO_WORLD_UI_H_</code></font></div><div><code><font size="2">#pragma once</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">#include "content/public/browser/web_ui_controller.h"</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">// The WebUI for chrome://hello-world</font></code></div><div><code><font size="2">class HelloWorldUI : public content::WebUIController {</font></code></div><div><code><font size="2"> public:</font></code></div><div><code><font size="2">  explicit HelloWorldUI(content::WebUI* web_ui);</font></code></div><div><code><font size="2">  virtual ~HelloWorldUI();</font></code></div><div><span style="color:rgb(0,96,0);font-family:monospace;line-height:12px;font-size:small"> private:</span><font size="2"> </font></div><div><code><font size="2">  DISALLOW_COPY_AND_ASSIGN(HelloWorldUI);</font></code></div><div><code><font size="2">};</font></code></div><div><font size="2"><br /></font></div><div><font size="2"><code>#endif  // </code><code>CHROME_BROWSER_UI_WEBUI_HELLO_WORLD_UI_H_</code></font></div></div><div><br /></div></div></div><div>src/chrome/browser/ui/webui/hello_world_ui.cc:</div><div></div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><font size="2"><code>#include "chrome/browser/ui/webui/hello_world_ui.h"</code></font></div><div><font size="2"><div><br /></div><div><code><font face="courier new, monospace">#include "chrome/browser/profiles/profile.h"</font></code></div><div><span style="color:rgb(0,96,0);line-height:1"><font face="courier new, monospace">#include "chrome/common/url_constants.h"</font></span></div><div><font color="#006000" face="courier new, monospace">#include "content/public/browser/web_ui_data_source.h"</font></div></font><span style="color:rgb(0,96,0);line-height:12px;font-size:small"><code><font face="courier new, monospace">#include "grit/browser_resources.h"</font></code></span></div><div><font face="courier new, monospace" size="2"><div><code>#include "grit/generated_resources.h"</code></div><div><br /></div></font></div><div><font face="courier new, monospace" size="2"><code>HelloWorldUI::HelloWorldUI(content::WebUI* web_ui)</code></font></div><div><font face="courier new, monospace" size="2"><code>    : content::WebUIController(web_ui) {</code></font></div><div><font face="courier new, monospace" size="2"><code>  // Set up the chrome://hello-world source.</code></font></div><div><font face="courier new, monospace"><font size="2"><code>  </code></font><font color="#006000" size="2"><span style="line-height:12px">content::WebUIDataSource</span></font><span style="color:rgb(0,96,0);font-size:small;line-height:1">* html_source =</span></font></div><div><font face="courier new, monospace"><font size="2"><code>  </code><span><code>    </code></span></font><font color="#006000" size="2"><span style="line-height:12px">content::WebUIDataSource::Create</span></font><span style="color:rgb(0,96,0);font-size:small;line-height:1">(chrome::kChromeUIHelloWorldHost);</span></font></div><div><font face="courier new, monospace"><font size="2"><span><code>  html_source-&gt;</code></span></font><font color="#006000" size="2"><span style="line-height:12px">SetUseJsonJSFormatV2()</span></font><span style="color:rgb(0,96,0);font-size:small;line-height:1">;</span></font></div><div><span><font face="courier new, monospace" size="2"><br /></font></span></div><div><span><font face="courier new, monospace" size="2"><code>  // Localized strings.</code></font></span></div><div><span><font face="courier new, monospace" size="2"><code>  html_source-&gt;AddLocalizedString("helloWorldTitle", IDS_HELLO_WORLD_TITLE);</code></font></span></div><div><span><font face="courier new, monospace" size="2"><code>  html_source-&gt;AddLocalizedString("welcomeMessage", IDS_HELLO_WORLD_WELCOME_TEXT);</code></font></span></div><div><span><font face="courier new, monospace" size="2"><code><br /></code></font></span></div><div><span><font face="courier new, monospace" size="2"><code>  // As a demonstration of passing a variable for JS to use we pass in the name "Bob".</code></font></span></div><div><span><font face="courier new, monospace" size="2"><code>  html_source-&gt;AddString("userName", "Bob");</code></font></span></div><div><font face="courier new, monospace"><span><font size="2"><code>  html_source-&gt;</code></font></span><font color="#006000" size="2"><span style="line-height:12px">SetJsonPath</span></font><span style="color:rgb(0,96,0);font-size:small;line-height:1">("strings.js");</span></font></div><div><span><font face="courier new, monospace" size="2"><br /></font></span></div><div><span><font face="courier new, monospace" size="2"><code>  // Add required resources.</code></font></span></div><div><font face="courier new, monospace"><span><font size="2"><code>  html_source-&gt;</code></font></span><font color="#006000" size="2"><span style="line-height:12px">AddResourcePath</span></font><span style="color:rgb(0,96,0);font-size:small;line-height:1">("hello_world.css", IDR_HELLO_WORLD_CSS);</span></font></div><div><font face="courier new, monospace"><span><font size="2"><code>  html_source-&gt;</code></font></span><font color="#006000" size="2"><span style="line-height:12px">AddResourcePath</span></font><span style="color:rgb(0,96,0);font-size:small;line-height:1">("hello_world.js", IDR_HELLO_WORLD_JS);</span></font></div><div><font face="courier new, monospace"><font size="2"><code>  html_source-&gt;</code></font><font color="#006000" size="2"><span style="line-height:12px">SetDefaultResource</span></font><span style="color:rgb(0,96,0);font-size:small;line-height:1">(IDR_HELLO_WORLD_HTML);</span></font></div><div><font face="courier new, monospace" size="2"><div><br /></div><div><code>  Profile* profile = Profile::FromWebUI(web_ui);</code></div><div><code>  content::WebUIDataSource::Add(profile, html_source);</code></div></font></div><div><font face="courier new, monospace" size="2"><code>}</code></font></div><div><font size="2"><br /></font></div><div><font size="2"><code>HelloWorldUI::~HelloWorldUI() {</code></font></div><div><font size="2"><code>}</code></font></div></div><div><span style="font-size:15px;font-weight:bold"><br /></span></div><div><span style="font-size:15px;font-weight:bold">Adding new sources to Chrome</span></div><div><span style="font-weight:bold"><span style="font-weight:normal"><div style="font-size:13px"><br /></div><div style="font-size:13px">In order for your new class to be built and linked in it needs to be added to the project gypi file.</div><div style="font-size:13px"><br /></div><div style="font-size:13px">src/chrome/chrome_browser_ui.gypi:</div><div style="font-size:13px"></div><div class="sites-codeblock sites-codesnippet-block"><div><code><font size="2">'sources': [</font></code></div><div><code><font size="2">...</font></code></div><div><code><font size="2">+   'browser/ui/webui/hello_world_ui.cc',</font></code></div><div><code><font size="2">+   'browser/ui/webui/hello_world_ui.h',</font></code></div></div><div style="font-size:13px"><br /></div></span></span></div><div><span style="font-size:16px;font-weight:bold">Adding your WebUI request handler to the Chrome WebUI factory</span></div><div><br /></div><div>The Chrome WebUI factory is where you setup your new request handler.</div><div><br /></div><div>src/chrome/browser/ui/webui/chrome_web_ui_controller_factory.cc:</div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code><font size="2">+ #include "chrome/browser/ui/webui/hello_world_ui.h"</font></code></div><div><span style="font-size:small;color:rgb(0,96,0);line-height:1">...</span></div><div><code><font size="2">+ if (url.host() == chrome::kChromeUIHelloWorldHost)</font></code></div><div><code><font size="2">+   return &amp;NewWebUI&lt;HelloWorldUI&gt;;</font></code></div></div><div><span style="font-size:16px;font-weight:bold"><br /></span></div><div><span style="font-size:16px;font-weight:bold">Testing</span></div><div><br /></div><div>You're done! Assuming no errors (because everyone gets their code perfect the first time) you should be able to compile and run chrome and navigate to chrome://hello-world/ and see your nifty welcome text!</div><div><br /></div><h3><a name="TOC-Adding-a-callback-handler"></a>Adding a callback handler</h3><div>You probably want your new WebUI page to be able to do something or get information from the C++ world. For this, we use message callback handlers. Let's say that we don't trust the Javascript engine to be able to add two integers together (since we know that it uses floating point values internally). We could add a callback handler to perform integer arithmetic for us.</div><div><br /></div><div>src/chrome/browser/ui/webui/hello_world_ui.h:</div><div><div style="line-height:13px;background-color:rgb(239,239,239)"></div><div class="sites-codeblock sites-codesnippet-block"><div><code><font size="2">#include "chrome/browser/ui/webui/chrome_web_ui.h"</font></code></div><div><code><font size="2">+</font></code></div><div><code><font size="2">+ namespace base {</font></code></div><div style="line-height:13px;background-color:rgb(239,239,239)"><span style="color:rgb(0,96,0);font-family:monospace;font-size:small">+   class ListValue;</span></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+ }  // namespace base</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font color="#006000" face="monospace" size="2"><br /></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><div><span style="color:rgb(0,96,0);font-family:monospace;line-height:12px;font-size:small">// The WebUI for chrome://hello-world</span></div><div><font size="2"><code>...</code></font></div><div><div><font size="2"><code>    // Set up the chrome://hello-world source.</code></font></div><div><font size="2"><code>    ChromeWebUIDataSource* html_source =</code></font></div><div><font size="2"><code>    </code><code>    new ChromeWebUIDataSource(chrome::kChromeUIHelloWorldHost);</code></font></div><div><font size="2"><code>+</code></font></div><div><font size="2"><code>+   // Register callback handler.</code></font></div><div><font size="2"><code>+   RegisterMessageCallback("addNumbers",</code></font></div><div><font size="2"><code><div>+       base::Bind(&amp;HelloWorldUI::AddNumbers,</div><div>+                  base::Unretained(this)));</div></code></font></div><div><font color="#006000" face="monospace" size="2"><br /></font></div><div><font size="2"><code>    // Localized strings.</code></font></div></div><div><font size="2"><code>...</code></font></div></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>    virtual ~HelloWorldUI();</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+  private:</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+   // Add two numbers together using integer arithmetic.</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+   void AddNumbers(const base::ListValue* args);</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code><br /></code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>    DISALLOW_COPY_AND_ASSIGN(HelloWorldUI);</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>  };</code></font></div></div></div><div><code><font size="2"><br /></font></code></div><div><br /></div><div>src/chrome/browser/ui/webui/hello_world_ui.cc:</div><div><div style="line-height:13px;background-color:rgb(239,239,239)"></div><div class="sites-codeblock sites-codesnippet-block"><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>  #include "chrome/browser/ui/webui/hello_world_ui.h"</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+ #include "base/values.h"</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><div><code>  #include "chrome/browser/profiles/profile.h"</code></div><div><code>...</code></div><div><span style="color:rgb(0,96,0);font-family:monospace">  HelloWorldUI::~HelloWorldUI() {</span></div></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>  }</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+ void HelloWorldUI::AddNumbers(const base::ListValue* args) {</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+   int term1, term2;</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+   if (!args-&gt;GetInteger(0, &amp;term1) || !args-&gt;GetInteger(1, &amp;term2))</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+     return;</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+   base::FundamentalValue result(term1 + term2);</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+   CallJavascriptFunction("hello_world.addResult", result);</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+ }</code></font></div></div></div><div><br /></div><div>src/chrome/browser/resources/hello_world.js:</div><div><div style="line-height:13px;background-color:rgb(239,239,239)"></div><div class="sites-codeblock sites-codesnippet-block"><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>    function initialize() {</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+     chrome.send('addNumbers', [2, 2]);</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>    }</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+   function addResult(result) {</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+     alert('The result of our C++ arithmetic: 2 + 2 = ' + result);</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+   }</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><br /></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>    return {</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>+     addResult: addResult,</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>      initialize: initialize,</code></font></div><div style="line-height:13px;background-color:rgb(239,239,239)"><font size="2"><code>    };</code></font></div></div></div><div><br /></div><div>You'll notice that the call is asynchronous. We must wait for the C++ side to call our Javascript function to get the result.</div><h2><a name="TOC-Creating-a-WebUI-Dialog"></a>Creating a WebUI Dialog</h2><div>Once you've created a WebUI resource following the above instructions, there are two changes necessary to make it a dialog. You must subclass the HtmlDialogUI class instead of ChromeWebUI and create an HtmlDialogUIDelegate class which will be responsible for running the dialog.</div><div><br /></div><div>1. Instead of subclassing the ChromeWebUI class as above you will need an instance of HtmlDialogUI.</div><div><div><br /></div><div>src/chrome/browser/ui/webui/hello_world_ui.h:</div><div><span style="background-color:rgb(239,239,239)"><div style="line-height:13px"></div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><font color="#660000" size="2"><code>- #include "#chrome/browser/ui/webui/chrome_web_ui.h"</code></font></div><div style="line-height:13px"><span style="font-family:monospace;line-height:12px"><font color="#38761d" size="2"><code>+ #include "#chrome/browser/ui/webui/html_dialog_ui.h"</code></font></span></div><div style="line-height:13px"><span style="font-family:monospace;line-height:12px"><font color="#38761d" size="2"><code><br /></code></font></span></div><div style="line-height:13px"><span style="font-family:monospace;line-height:12px"><font color="#660000" size="2"><code>- class HelloWorldUI : public ChromeWebUI {</code></font></span></div><div style="line-height:13px"><span style="color:rgb(0,96,0);font-family:monospace;line-height:12px"><code><font size="2">+ class HelloWorldUI : public HtmlDialogUI {</font></code></span></div></div></span></div><div><span style="background-color:rgb(239,239,239)"><div><font color="#006000" face="monospace" size="2"><span style="line-height:12px"><br /></span></font></div><div style="line-height:13px"></div></span></div></div><div>2. Create an HtmlDialogUIDelegate class which is used to instantiate the dialog. For brevity each of these functions are stubbed out with the minimal code possible.</div><div><br /></div><div>src/chrome/browser/ui/webui/hello_world.h</div><div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code><font size="2">#ifndef CHROME_BROWSER_UI_WEBUI_HELLO_WORLD_H_</font></code></div><div><code><font size="2">#define </font></code><span style="color:rgb(0,96,0);font-family:monospace;line-height:12px;font-size:small">CHROME_BROWSER_UI_WEBUI_HELLO_WORLD_H_</span></div><div><span style="color:rgb(0,96,0);font-family:monospace;line-height:12px;font-size:small">#pragma once</span></div><div><span style="color:rgb(0,96,0);font-family:monospace;line-height:12px;font-size:small"><br /></span></div><div><code><font size="2">#include "chrome/browser/ui/webui/html_dialog_ui.h"</font></code></div><div><code><font size="2"><br /></font></code></div><div><code><font size="2">class HelloWorldDialog : private HtmlDialogUIDelegate {</font></code></div><div><code><font size="2"> public:</font></code></div><div><code><font size="2">  // Shows the Hello World dialog.</font></code></div><div><font size="2"><code>  static void ShowDialog(</code><code>);</code></font></div><div><code><font size="2">  virtual ~HelloWorldDialog();</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2"> private:</font></code></div><div><code><font size="2">  // Construct a Hello World dialog</font></code></div><div><font size="2"><code>  explicit HelloWorldDialog(</code><code>);</code></font></div><div><font size="2"><br /></font></div><div><code><font size="2">  // Overridden from HtmlDialogUI::Delegate:</font></code></div><div><code><font size="2">  virtual bool IsDialogModal() const OVERRIDE;</font></code></div><div><code><font size="2">  virtual string16 GetDialogTitle() const OVERRIDE;</font></code></div><div><code><font size="2">  virtual GURL GetDialogContentURL() const OVERRIDE;</font></code></div><div><code><font size="2">  virtual void GetWebUIMessageHandlers(</font></code></div><div><code><font size="2">      std::vector&lt;WebUIMessageHandler*&gt;* handlers) const OVERRIDE;</font></code></div><div><code><font size="2">  virtual void GetDialogSize(gfx::Size* size) const OVERRIDE;</font></code></div><div><code><font size="2">  virtual std::string GetDialogArgs() const OVERRIDE;</font></code></div><div><code><font size="2">  virtual void OnDialogClosed(const std::string&amp; json_retval) OVERRIDE;</font></code></div><div><code><font size="2">  virtual void OnCloseContents(</font></code></div><div><code><font size="2">      TabContents* source, bool* out_close_dialog) OVERRIDE;</font></code></div><div><code><font size="2">  virtual bool ShouldShowDialogTitle() const OVERRIDE;</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">  DISALLOW_COPY_AND_ASSIGN(HelloWorldDialog);</font></code></div><div><code><font size="2">};</font></code></div><div><code><font size="2"><br /></font></code></div><div><code><font size="2">#endif  // </font></code><span style="color:rgb(0,96,0);font-family:monospace;line-height:12px;font-size:small">CHROME_BROWSER_UI_WEBUI_HELLO_WORLD_H_</span></div></div></div><div><br /></div><div>src/chrome/browser/ui/webui/hello_world.cc</div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code><font size="2"><div>#include "base/utf_string_conversions.h"</div><div>#include "chrome/browser/ui/browser.h"</div></font></code><span style="color:rgb(0,96,0);font-family:monospace;line-height:12px;font-size:small">#include "chrome/browser/ui/browser_list.h"</span></div><div><code><font size="2">#include "chrome/browser/ui/webui/hello_world.h"</font></code></div><div><code><font size="2">#include "chrome/common/url_constants.h"</font></code></div><div><font color="#006000" face="monospace" size="2"><span style="line-height:12px"><br /></span></font></div><div><code><font size="2">void HelloWorldDialog::ShowDialog() {</font></code></div><div><code><font size="2">  Browser* browser = BrowserList::GetLastActive();</font></code></div><div><code><font size="2">  DCHECK(browser);</font></code></div><div><code><font size="2">  browser-&gt;BrowserShowHtmlDialog(new HelloWorldDialog(), NULL);</font></code></div><div><code><font size="2">}</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">HelloWorldDialog::HelloWorldDialog() {</font></code></div><div><code><font size="2">}</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">HelloWorldDialog::~HelloWorldDialog() {</font></code></div><div><code><font size="2">}</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">bool HelloWorldDialog::IsDialogModal() {</font></code></div><div><code><font size="2">  return false;</font></code></div><div><code><font size="2">}</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">string16 HelloWorldDialog::GetDialogTitle() {</font></code></div><div><code><font size="2">  return UTF8ToUTF16("Hello World");</font></code></div><div><code><font size="2">}</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">GURL HelloWorldDialog::GetDialogContentURL() const {</font></code></div><div><code><font size="2">  return GURL(chrome::kChromeUIHelloWorldURL);</font></code></div><div><code><font size="2">}</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">void HelloWorldDialog::GetWebUIMessageHandlers(</font></code></div><div><code><font size="2">    std::vector&lt;WebUIMessageHandler*&gt;* handlers) const {</font></code></div><div><code><font size="2">}</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">void HelloWorldDialog::GetDialogSize(gfx::Size* size) const {</font></code></div><div><code><font size="2">  size-&gt;SetSize(600, 400);</font></code></div><div><code><font size="2">}</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">std::string HelloWorldDialog::GetDialogArgs() const {</font></code></div><div><code><font size="2">  return std::string();</font></code></div><div><code><font size="2">}</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">void HelloWorldDialog::OnDialogClosed(const std::string&amp; json_retval) {</font></code></div><div><code><font size="2">  delete this;</font></code></div><div><code><font size="2">}</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">void HelloWorldDialog::OnCloseContents(TabContents* source,</font></code></div><div><code><font size="2">    bool* out_close_dialog) {</font></code></div><div><code><font size="2">  if (out_close_dialog)</font></code></div><div><code><font size="2">    *out_close_dialog = true;</font></code></div><div><code><font size="2">}</font></code></div><div><font size="2"><br /></font></div><div><code><font size="2">bool HelloWorldDialog::ShouldShowDialogTitle() const {</font></code></div><div><code><font size="2">  return true;</font></code></div><div><code><font size="2">}</font></code></div></div><div><br /></div><div>You can invoke this new dialog by calling HelloWorldDialog::ShowDialog().</div><h3><a name="TOC-Passing-arguments-to-the-WebUI"></a>Passing arguments to the WebUI</h3><div>As you may have guessed, the HtmlDialogUIDelegate::GetDialogArgs() function call is used for passing arguments to a dialog page. For example, if we wanted to have a custom message displayed to the user depending on some argument known only at dialog creation we could pass that argument in during construction, return it from GetDialogArgs, and access it in Javascript from chrome.dialogArguments as follows:</div><div><br /></div><div><div>src/chrome/browser/ui/webui/hello_world.h</div><div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><font size="2"><code>-   static void ShowDialog(</code><code>);</code></font></div><div><font size="2"><code>+   static void ShowDialog(std::string message</code><code>);</code></font></div><div><font size="2"><code><br /></code></font></div><div><font size="2"><code>+   // The message to be displayed to the user.</code></font></div><div><font size="2"><code>+   std::string message_;</code></font></div><div><font size="2"><code>+</code></font></div><div><div><code><font size="2">    DISALLOW_COPY_AND_ASSIGN(HelloWorldDialog);</font></code></div><div><code><font size="2">  };</font></code></div></div></div></div><div><br /></div><div>src/chrome/browser/ui/webui/hello_world.cc</div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code><font size="2"><div>- HelloWorldDialog::HelloWorldDialog() {</div></font></code></div><div><span style="color:rgb(0,96,0);font-family:monospace;line-height:12px;font-size:small">+ HelloWorldDialog::HelloWorldDialog(std::string message)</span></div><div><div><code><font size="2">+     : message_(message) {</font></code></div><div><code><font size="2">  }</font></code></div></div><div><span style="color:rgb(0,96,0);font-family:monospace;line-height:12px;font-size:small"><br /></span></div><div><span style="color:rgb(0,96,0);font-family:monospace;line-height:12px;font-size:small">  std::string HelloWorldDialog::GetDialogArgs() const {</span></div><div><code><font size="2">-   return std::string();</font></code></div><div><code><font size="2">+   return message_;</font></code></div><div><code><font size="2">  }</font></code></div></div><div><br /></div><div><div>src/chrome/browser/resources/hello_world.js:</div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><span style="color:rgb(0,96,0);font-family:monospace;line-height:12px;font-size:small">    function initialize() {</span></div><div><code><font size="2">+     document.getElementsByTagName('p')[0].textContent = chrome.dialogArguments;</font></code></div><div><code><font size="2">    }</font></code></div></div></div><div><br /></div><div>In practice you will probably be passing structured data to your WebUI for which you can use the class base::JSONWriter to produce a JSON string which can be parsed in javascript using JSON.parse(chrome.dialogArguments). TODO: Provide example of this.</div></div><h3><a name="TOC-Adding-dialog-callback-handlers"></a>Adding dialog callback handlers</h3><div>Sometimes there are resources or objects that you have available at the time of dialog creation which will not be available from the context of the HtmlDialogUI class. You can add callbacks to your HtmlDialogUIDelegate class which Javascript can then call directly. This is done from the overridden HtmlDialogUIDelegate::GetWebUIMessageHandlers. The actual handlers are then written the same as for regular WebUI. TODO: Provide example.</div></div></td></tr></tbody></table>
</div> 
</div> 
<div id="sites-canvas-bottom-panel">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-subpages"> </div>
<div id="sites-attachments-container">
</div>
<a xmlns="http://www.w3.org/1999/xhtml" name="page-comments"></a>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-comments"><div class="sites-comment-docos-wrapper"><div class="sites-comment-docos"><div class="sites-comment-docos-background"></div><div class="sites-comment-docos-header"><div class="sites-comment-docos-header-title">Comments</div></div><div id="sites-comment-docos-pane" class="sites-comment-docos-pane"></div></div></div></div>
</div>
</div> 
</td> 
</tr>
</table> 
</div> 
</div> 
<div id="sites-chrome-footer-wrapper">
<div id="sites-chrome-footer-wrapper-inside">
<div id="sites-chrome-footer">
</div>
</div>
</div>
</div> 
</div> 
<div id="sites-chrome-adminfooter-container">
<div xmlns="http://www.w3.org/1999/xhtml" class="sites-adminfooter" role="navigation"><p><a class="sites-system-link" href="https://www.google.com/a/UniversalLogin?service=jotspot&amp;continue=https://sites.google.com/a/chromium.org/dev/developers/webui">Sign in</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/recentChanges">Recent Site Activity</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/reportAbuse" target="_blank">Report Abuse</a><span aria-hidden="true">|</span><a class="sites-system-link" href="javascript:;" onclick="window.open(webspace.printUrl)">Print Page</a><span aria-hidden="true">|</span><span class="sites-system-link">Powered By</span> <b class="powered-by"><a href="http://sites.google.com">Google Sites</a></b></p></div>
</div>
</div> 
</div> 
<div id="sites-chrome-onebar-footer">
</div>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('sjl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" src="https://ssl.gstatic.com/sites/p/56e332/system/js/jot_min_view__en.js"></script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('jl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml">
      
          sites.core.Analytics.createTracker();
          sites.core.Analytics.trackPageview();
        
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
                    sites.Searchbox.initialize(
                        'sites-searchbox-search-button',
                        {"object":[]}['object'],
                        'search-site',
                        {"label":"Configure search options...","url":"/system/app/pages/admin/settings"});
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
      gsites.HoverPopupMenu.createSiteDropdownMenus('sites-header-nav-dropdown', false);
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("7648876402527094", "Navigation", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_7648876402527094');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("14720868319272995", "Quick links", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_14720868319272995');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("19690813310444355", "Other sites", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_19690813310444355');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
              new sites.CommentPane('//docs.google.com/comments/d/AAHRpnXvrAwjAfmld0ObrebBiGRq9vvLYIVKLSSVdcq4GXcoK2wLt3LmiEtFmH-5gO2vTMeLJ2lvWqu6KK69SxwHcjfNvyAIkpVdgLUwAYXOuiNiciwqE2AzjcTnU5qoDTp_B9Vr23cnE/api/js?anon=true',
                  false, false);
            </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
  setTimeout(function() {
    var fingerprint = gsites.date.TimeZone.getFingerprint([]);
    gsites.Xhr.send('https://www.chromium.org/_/tz', null, null, 'GET', null, null, { afjstz: fingerprint });
  }, 500);
</script>
<script xmlns="http://www.w3.org/1999/xhtml">
                    window.onload = function() {
                      if (false) {
                        JOT_setMobilePreview();
                      }
                      var loadTimer = window.jstiming.load;
                      loadTimer.tick("ol");
                      loadTimer["name"] = "load," + webspace.page.type + ",user_page";
                      window.jstiming.report(loadTimer, {}, 'https://gg.google.com/csi');
                    }
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
        JOT_insertAnalyticsCode(false,
            false);
      </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    var maestroRunner = new gsites.pages.view.SitesMaestroRunner(
        webspace, "en");
    maestroRunner.initListeners();
    maestroRunner.installEditRender();
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
  //<![CDATA[
    // Decorate any fastUI buttons on the page with a class of 'goog-button'.
    if (webspace.user.hasWriteAccess) {
      JOT_decorateButtons();
    }

    // Fires delayed events.
    (function() {
      JOT_fullyLoaded = true;
      var delayedEvents = JOT_delayedEvents;
      for (var x = 0; x < delayedEvents.length; x++) {
        var event = delayedEvents[x];
        JOT_postEvent(event.eventName, event.eventSrc, event.payload);
      }
      JOT_delayedEvents = null;
      JOT_postEvent('pageLoaded');
    })();
  //]]>
</script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    JOT_postEvent('decorateGvizCharts');
  </script>
<script type="text/javascript">
          JOT_setupPostRenderingManager();
        </script>
<script type="text/javascript">
          JOT_postEvent('renderPlus', null, 'sites-chrome-main');
        </script>
<div id="server-timer-div" style="display:none"> </div>
<script type="text/javascript">
          window.jstiming.load.tick('render');
          JOT_postEvent('usercontentrendered', this);
        </script>
</body>
</html>
