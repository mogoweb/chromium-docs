<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/WebPage">
<head>
<meta http-equiv="X-UA-Compatible" content="chrome=1" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var e="wtsrt_",g="tbsd_",h="tbnd_",k="start",l="_wtsrt",m="_tbnd",n="CSI/";(function(){function f(a){this.t={};this.tick=function(a,c,b){this.t[a]=[void 0!=b?b:(new Date).getTime(),c];if(void 0==b)try{window.console.timeStamp(n+a)}catch(d){}};this.tick(k,null,a)}var a;window.performance&&(a=window.performance.timing);var p=a?new f(a.responseStart):new f;window.jstiming={Timer:f,load:p};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick(l,void 0,c),b.tick(e,l,d),b.tick(g,e))}try{a=null,
window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick(m,void 0,window.chrome.csi().startE),b.tick(h,m,c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick(m,void 0,window.external.startE),b.tick(h,m,c))),a&&(window.jstiming.pt=a)}catch(q){}})(); })()
</script>
<link rel="shortcut icon" href="/_/rsrc/1354323194313/favicon.ico" type="image/x-icon" />
<link rel="apple-touch-icon" href="https://ssl.gstatic.com/sites/p/56e332/system/app/images/apple-touch-icon.png" type="image/png" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var d="",g="__duration__",h="function";function k(c){return document.getElementById(c)}window.byId=k;function l(c){return c.replace(/^\s+|\s+$/g,d)}window.trim=l;var m=[],n=0;window.JOT_addListener=function(c,a,b){var e=new String(n++);c={eventName:c,handler:a,compId:b,key:e};m.push(c);return e};window.JOT_removeListenerByKey=function(c){for(var a=0;a<m.length;a++)if(m[a].key==c){m.splice(a,1);break}};
window.JOT_removeAllListenersForName=function(c){for(var a=0;a<m.length;a++)m[a].eventName==c&&m.splice(a,1)};window.JOT_postEvent=function(c,a,b){var e={eventName:c,eventSrc:a||{},payload:b||{}};if(window.JOT_fullyLoaded)for(a=m.length,b=0;b<a&&b<m.length;b++){var f=m[b];f&&f.eventName==c&&(e.listenerCompId=f.compId||d,(f=typeof f.handler==h?f.handler:window[f.handler])&&f(e))}else window.JOT_delayedEvents.push({eventName:c,eventSrc:a,payload:b})};window.JOT_delayedEvents=[];
window.JOT_fullyLoaded=!1;window.JOT_formatRelativeToNow=function(c,a){var b=((new Date).getTime()-c)/6E4;if(1440<=b||0>b)return null;var e=0;60<=b&&(b/=60,e=2);2<=b&&e++;return a?window.JOT_siteRelTimeStrs[e].replace(g,Math.floor(b)):window.JOT_userRelTimeStrs[e].replace(g,Math.floor(b))}; })()
</script>
<script>

  

  var breadcrumbs = [{"path":"/developers","deleted":false,"title":"For Developers","dir":"ltr"},{"path":"/developers/testing","deleted":false,"title":"Testing and infrastructure","dir":"ltr"},{"path":"/developers/testing/addresssanitizer","deleted":false,"title":"AddressSanitizer (ASan)","dir":"ltr"}];
  var JOT_clearDotPath = 'https://ssl.gstatic.com/sites/p/56e332/system/app/images/cleardot.gif';

  
  var JOT_userRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

  
  

  

  var webspace = {"enableAnalytics":true,"pageSharingId":"jotspot_page","enableUniversalAnalytics":false,"sharingPolicy":"OPENED_WITH_INDICATOR","siteTitle":"The Chromium Projects","isStartPageEnabled":true,"adsensePublisherId":null,"features":{"languageSelectDefaultTextSetToDefault":true,"validateClientGvizDataSourceUrls":true,"moreMobileStyleImprovements":true,"newInsertMenuIcons":true,"accessibleSortingButtons":true,"domainAnalyticsInGAOnly":true,"noCaptcha":true,"fileCabinetScreenReaderFix":true,"updatedTosAndPrivacyLinks":null,"pageDrafts":false,"mobileOrientationFix":true,"plusBadge":false,"pdfEmbedSupport":false,"jsClickFix":true},"isPublic":true,"isConsumer":false,"serverFlags":{"cajaBaseUrl":"//www.gstatic.com/caja","cajaDebugMode":false},"onepickBaseUrl":"https://docs.google.com","domainAnalyticsAccountId":"","plusPageId":"","signInUrl":"https://www.google.com/a/SelectSession?continue\u003dhttps://sites.google.com/a/chromium.org/dev/developers/testing/addresssanitizer\u0026service\u003djotspot","analyticsAccountId":"UA-5484340-1","scottyUrl":"/_/upload","homePath":"/","siteNoticeUrlEnabled":null,"plusPageUrl":"","adsensePromoClickedOrSiteIneligible":true,"csiReportUri":"https://gg.google.com/csi","sharingId":"jotspot","termsUrl":"//www.google.com/intl/en/policies/terms/","gvizVersion":1,"editorResources":{"sitelayout":["https://ssl.gstatic.com/sites/p/56e332/system/app/css/sitelayouteditor.css"],"text":["https://ssl.gstatic.com/sites/p/56e332/system/js/codemirror.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codemirror_css.css","https://ssl.gstatic.com/sites/p/56e332/system/js/trog_edit__en.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/trogedit.css","/_/rsrc/1441580320000/system/app/css/editor.css","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codeeditor.css","/_/rsrc/1441580320000/system/app/css/camelot/editor-jfk-wlb.css"]},"sharingUrlPrefix":"/_/sharing","isAdsenseEnabled":true,"domain":"chromium.org","baseUri":"","name":"dev","siteTemplateId":false,"siteNoticeRevision":null,"siteNoticeUrlAddress":null,"siteNoticeMessage":null,"page":{"isRtlLocale":false,"canDeleteWebspace":null,"isPageDraft":null,"parentPath":"/developers/testing","parentWuid":"wuid:gx:1415bd4fdab62446","siteLocale":"en","timeZone":"America/Los_Angeles","type":"text","title":"AddressSanitizer (ASan)","locale":"en","wuid":"wuid:gx:15585e6c9779b0da","revision":198,"path":"/developers/testing/addresssanitizer","isSiteRtlLocale":false,"pageInheritsPermissions":null,"name":"addresssanitizer","canChangePath":true,"state":"","properties":{},"bidiEnabled":false,"currentTemplate":{"path":"/system/app/pagetemplates/text","title":"Web Page"}},"canPublishScriptToAnyone":true,"user":{"keyboardShortcuts":true,"sessionIndex":"","guest_":true,"displayNameOrEmail":"guest","userName":"guest","uid":"","renderMobile":false,"domain":"","namespace":"","hasWriteAccess":false,"namespaceUser":false,"primaryEmail":"guest","hasAdminAccess":false},"gadgets":{"baseUri":"/system/app/pages/gadgets"}};
  webspace.page.breadcrumbs = breadcrumbs;

  
  var JOT_siteRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

</script>
<script type="text/javascript">
                window.jstiming.load.tick('scl');
              </script>
<meta name="title" content="AddressSanitizer (ASan) - The Chromium Projects" />
<meta itemprop="name" content="AddressSanitizer (ASan) - The Chromium Projects" />
<meta property="og:title" content="AddressSanitizer (ASan) - The Chromium Projects" />
<meta name="description" content="Home of the Chromium Open Source Project" />
<meta itemprop="description" content="Home of the Chromium Open Source Project" />
<meta id="meta-tag-description" property="og:description" content="Home of the Chromium Open Source Project" />
<style type="text/css">
</style>
<link rel="stylesheet" type="text/css" href="https://ssl.gstatic.com/sites/p/56e332/system/app/themes/beigeandblue/standard-css-beigeandblue-ltr-ltr.css" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/overlay.css?cb=beigeandblueundefineda100%25%25150goog-ws-leftthemedefaultstandard" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/camelot/allthemes-view.css" />
<!--[if IE]>
          <link rel="stylesheet" type="text/css" href="/system/app/css/camelot/allthemes%2die.css" />
        <![endif]-->
<title>AddressSanitizer (ASan) - The Chromium Projects</title>
<meta itemprop="image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<meta property="og:image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<script type="text/javascript">
                window.jstiming.load.tick('cl');
              </script>
</head>
<body xmlns="http://www.google.com/ns/jotspot" id="body" class=" en            ">
<div id="sites-page-toolbar" class="sites-header-divider">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-status" class="sites-status" style="display:none;"><div id="sites-notice" class="sites-notice" role="status" aria-live="assertive"> </div></div>
</div>
<div id="sites-chrome-everything-scrollbar">
<div id="sites-chrome-everything" class="">
<div id="sites-chrome-page-wrapper" style="direction: ltr">
<div id="sites-chrome-page-wrapper-inside">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-chrome-header-wrapper" style="height:auto;">
<table id="sites-chrome-header" class="sites-layout-hbox" cellspacing="0" style="height:auto;">
<tr class="sites-header-primary-row" id="sites-chrome-userheader">
<td id="sites-header-title" class="" role="banner"><div class="sites-header-cell-buffer-wrapper"><a href="https://www.chromium.org/" id="sites-chrome-userheader-logo"><img id="logo-img-id" src="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" alt="The Chromium Projects" class="sites-logo  " /></a><h2><a href="https://www.chromium.org/" dir="ltr" id="sites-chrome-userheader-title">The Chromium Projects</a></h2></div></td><td class="sites-layout-searchbox  "><div class="sites-header-cell-buffer-wrapper"><form id="sites-searchbox-form" action="/system/app/pages/search" role="search"><input type="hidden" id="sites-searchbox-scope" name="scope" value="search-site" /><input type="text" id="jot-ui-searchInput" name="q" size="20" value="" aria-label="Search this site" /><div id="sites-searchbox-button-set" class="goog-inline-block"><div role="button" id="sites-searchbox-search-button" class="goog-inline-block jfk-button jfk-button-standard" tabindex="0">Search this site</div></div></form></div></td>
</tr>
<tr class="sites-header-secondary-row" id="sites-chrome-horizontal-nav">
<td colspan="2" id="sites-chrome-header-horizontal-nav-container" role="navigation">
</td>
</tr>
</table>
</div>
<div id="sites-chrome-main-wrapper">
<div id="sites-chrome-main-wrapper-inside">
<table id="sites-chrome-main" class="sites-layout-hbox" cellspacing="0" cellpadding="{scmCellpadding}" border="0">
<tr>
<td id="sites-chrome-sidebar-left" class="sites-layout-sidebar-left initial" style="width:150px">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_7648876402527094" class="sites-embed" role="navigation"><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-projects" jotId="wuid:gx:10ae433dadbbab13" class="sites-navigation-link">Home</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/Home" jotId="wuid:gx:43582b9d2029d3af" class="sites-navigation-link">Chromium</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-os" jotId="wuid:gx:83df2ab1f8880ba" class="sites-navigation-link">Chromium OS</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_14720868319272995" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Quick links</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/for-testers/bug-reporting-guidelines" class="sites-navigation-link">Report bugs</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/developers/discussion-groups" class="sites-navigation-link">Discuss</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/system/app/pages/sitemap/hierarchy" jotId="wuid:gx:4b58a9a350ad12f" class="sites-navigation-link">网站地图</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19690813310444355" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Other sites</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://blog.chromium.org/" class="sites-navigation-link">Chromium Blog</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://code.google.com/chrome/extensions/" class="sites-navigation-link">Google Chrome Extensions</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="https://developers.google.com/chrome/chrome-frame/" class="sites-navigation-link">Google Chrome Frame</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19695218559354544" class="sites-embed" role="complementary"><h4 class="sites-embed-title"></h4><div class="sites-embed-content sites-embed-content-sidebar-textbox"><div dir="ltr"><span style="font-size:x-small">Except as otherwise </span><a href="http://developers.google.com/site-policies.html#restrictions"><span style="font-size:x-small">noted</span></a><span style="font-size:x-small">, the content of this page is licensed under a </span><a href="http://creativecommons.org/licenses/by/2.5/"><span style="font-size:x-small">Creative Commons Attribution 2.5 license</span></a><span style="font-size:x-small">, and examples are licensed under the </span><a href="http://src.chromium.org/viewvc/chrome/trunk/src/LICENSE" target="_blank"><span style="font-size:x-small">BSD License</span></a><span style="font-size:x-small">.<br /></span></div></div></div>
</td>
<td id="sites-canvas-wrapper">
<div id="sites-canvas" role="main">
<div id="goog-ws-editor-toolbar-container"> </div>
<div xmlns="http://www.w3.org/1999/xhtml" id="title-crumbs" style="">
<A href="/developers" dir="ltr">For Developers</A>‎ &gt; ‎<A href="/developers/testing" dir="ltr">Testing and infrastructure</A>‎ &gt; ‎
  </div>
<h3 xmlns="http://www.w3.org/1999/xhtml" id="sites-page-title-header" style="" align="left">
<span id="sites-page-title" dir="ltr" tabindex="-1" style="outline: none">AddressSanitizer (ASan)</span>
</h3>
<div id="sites-canvas-main" class="sites-canvas-main">
<div id="sites-canvas-main-content">
<table xmlns="http://www.w3.org/1999/xhtml" cellspacing="0" class="sites-layout-name-one-column sites-layout-hbox"><tbody><tr><td class="sites-layout-tile sites-tile-name-content-1"><div dir="ltr"><div><div><div class="sites-embed-align-right-wrapping-on"><div class="sites-embed-border-off sites-embed" style="width:250px;"><div class="sites-embed-content sites-embed-type-toc"><div class="goog-toc sites-embed-toc-maxdepth-6"><p>Contents</p><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Buildbots-and-trybots"><strong>1 </strong>Buildbots and trybots</a></li><li class="goog-toc"><a href="#TOC-Pre-built-Chrome-binaries"><strong>2 </strong>Pre-built Chrome binaries</a></li><li class="goog-toc"><a href="#TOC-Build-tests-with-ASan"><strong>3 </strong>Build tests with ASan</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-GN-Linux64-build"><strong>3.1 </strong>GN Linux64 build</a></li><li class="goog-toc"><a href="#TOC-GYP-Linux64-Mac-build"><strong>3.2 </strong>GYP Linux64/Mac build</a></li><li class="goog-toc"><a href="#TOC-GYP-Windows-32-bit-build"><strong>3.3 </strong>GYP Windows 32-bit build</a></li><li class="goog-toc"><a href="#TOC-Goma-build"><strong>3.4 </strong>Goma build</a></li><li class="goog-toc"><a href="#TOC-Build-options"><strong>3.5 </strong>Build options</a></li></ol></li><li class="goog-toc"><a href="#TOC-Verify-the-ASan-tool-works"><strong>4 </strong>Verify the ASan tool works</a></li><li class="goog-toc"><a href="#TOC-ASan-runtime-options"><strong>5 </strong>ASan runtime options</a></li><li class="goog-toc"><a href="#TOC-NaCl-support-under-ASan"><strong>6 </strong>NaCl support under ASan</a></li><li class="goog-toc"><a href="#TOC-Building-on-iOS"><strong>7 </strong>Building on iOS</a></li><li class="goog-toc"><a href="#TOC-Building-on-Android"><strong>8 </strong>Building on Android</a></li><li class="goog-toc"><a href="#TOC-Building-with-v8_target_arch-arm"><strong>9 </strong>Building with v8_target_arch=arm</a></li><li class="goog-toc"><a href="#TOC-Linux-Mac-build-using-a-custom-Clang"><strong>10 </strong>Linux/Mac build using a custom Clang</a></li><li class="goog-toc"><a href="#TOC-AsanCoverage"><strong>11 </strong>AsanCoverage</a></li></ol></div></div></div></div></div><br /></div><a href="http://code.google.com/p/address-sanitizer/">AddressSanitizer</a> (ASan) is a fast memory error detector based on compiler instrumentation (LLVM).<div>It is fully usable for Chrome on Linux and Mac. There's a mostly-functional Windows port in progress too, and you can using <a href="http://blog.chromium.org/2013/05/testing-chromium-syzyasan-lightweight.html">SyzyASan</a>.</div><div>Additional info on the tool itself is available at <a href="http://clang.llvm.org/docs/AddressSanitizer.html">http://clang.llvm.org/docs/AddressSanitizer.html</a>.</div><div><br /></div><div>For the memory leak detector built into ASan, see <a href="https://www.chromium.org/developers/testing/leaksanitizer">LeakSanitizer</a>. If you want to debug memory leaks, please refer to the instructions on that page instead.<br /><div></div><h3><a name="TOC-Buildbots-and-trybots"></a>Buildbots and trybots</h3><div><span style="font-size:10pt;background-color:transparent">The </span><a href="http://build.chromium.org/p/chromium.memory/console" style="font-size:10pt;background-color:transparent">Chromium Memory waterfall</a><span style="font-size:10pt;background-color:transparent"> (not to be confused with the Memory FYI waterfall) contains buildbots running Chromium tests under ASan on Linux (Linux ASan/LSan bots for the regular Linux build, Linux Chromium OS ASan for the chromeos=1 build running on Linux), OS X (both 32 and 64 bits), Chromium OS (x86 and amd64 builds running inside VMs). Linux and Linux Chromium OS bots run with --no-sandbox, but there's an extra Linux bot that enables the sandbox (but disables LeakSanitizer).</span></div><div>The trybots running Chromium tests on Linux and OSX are: linux_asan (everything except browser_tests and content_browsertests), linux_browser_asan (browser_tests and content_browsertests), mac_asan (many tests including browser_tests and content_browsertests), linux_chromeos_asan (the chromeos=1 build running on a Linux machine, <span style="background-color:transparent;font-size:10pt">many tests including browser_tests and content_browsertests).</span></div><div><span style="background-color:transparent;font-size:10pt"><br /></span></div><div><span style="background-color:transparent;font-size:10pt">Blink bots: <a href="http://build.chromium.org/p/chromium.webkit/waterfall?show=WebKit%20Linux%20ASAN">WebKit Linux ASAN</a> buildbot and <a href="http://build.chromium.org/p/tryserver.chromium/builders/linux_layout_asan">linux_layout_asan</a> trybot.</span></div><h3><a name="TOC-Pre-built-Chrome-binaries"></a>Pre-built Chrome binaries</h3><div>You can grab fresh Chrome binaries built with ASan <a href="https://commondatastorage.googleapis.com/chromium-browser-asan/index.html">here</a>. </div><div><h3><a name="TOC-Build-tests-with-ASan"></a>Build tests with ASan</h3><div>If you're on mac or linux64, building with ASan is easy. Start by compiling <font face="courier new, monospace">base_unittests</font> to verify the build is working for you (see below), then you can compile <font face="courier new, monospace">chrome</font>, <font face="courier new, monospace">browser_tests</font>, etc.. Make sure to compile release builds.</div><div><br /></div><div><div>Make sure you've run <span style="font-family:Monaco,DejaVu Sans Mono,Bitstream Vera Sans Mono,Lucida Console,monospace">tools</span><span style="font-family:Monaco,DejaVu Sans Mono,Bitstream Vera Sans Mono,Lucida Console,monospace;color:rgb(102,102,0)">/</span><span style="font-family:Monaco,DejaVu Sans Mono,Bitstream Vera Sans Mono,Lucida Console,monospace">clang</span><span style="font-family:Monaco,DejaVu Sans Mono,Bitstream Vera Sans Mono,Lucida Console,monospace;color:rgb(102,102,0)">/</span><span style="font-family:Monaco,DejaVu Sans Mono,Bitstream Vera Sans Mono,Lucida Console,monospace">scripts</span><span style="font-family:Monaco,DejaVu Sans Mono,Bitstream Vera Sans Mono,Lucida Console,monospace;color:rgb(102,102,0)">/</span><span style="font-family:Monaco,DejaVu Sans Mono,Bitstream Vera Sans Mono,Lucida Console,monospace">update</span><span style="font-family:Monaco,DejaVu Sans Mono,Bitstream Vera Sans Mono,Lucida Console,monospace;color:rgb(102,102,0)">.</span><span style="font-family:Monaco,DejaVu Sans Mono,Bitstream Vera Sans Mono,Lucida Console,monospace">sh </span>(see <a href="https://code.google.com/p/chromium/wiki/Clang">https://code.google.com/p/chromium/wiki/Clang</a> for details).</div></div><h4><a name="TOC-GN-Linux64-build"></a><b>GN Linux64 build</b></h4></div></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div>Create an asan build directory by running:</div></div></div><div><div><br /></div></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div><font face="courier new, monospace">gn args out/asan</font></div></div></div></blockquote><div><div><br /></div></div><div><div>Enter the following build variables in the editor that will pop up:</div></div><div><br /></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div><font face="courier new, monospace">is_asan = true</font></div></div></div></blockquote><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div><font face="courier new, monospace">enable_nacl = false  <font color="#999999"># Necessary until NaCl GN build is more complete.</font></font></div></div></div></blockquote><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div><font face="courier new, monospace">is_debug = false  <font color="#999999"># Release build.</font></font></div></div></div></blockquote><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><font face="courier new, monospace"><br /></font></div></blockquote><font face="arial, sans-serif">Build with:</font><div><font face="courier new, monospace"><br /></font></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><font face="courier new, monospace">ninja -C out/asan base_unittests</font></div></blockquote></blockquote><div><h4><a name="TOC-GYP-Linux64-Mac-build"></a><b>GYP Linux64/Mac build</b></h4><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><span style="font-family:courier new,monospace;font-size:10pt;background-color:transparent">GYP_DEFINES="$GYP_DEFINES asan=1" gclient runhooks</span></blockquote><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><span style="font-family:courier new,monospace">ninja -C out/Release base_unittests</span></div></div></blockquote><div><b style="font-family:arial,sans-serif;font-size:10pt;background-color:transparent"><br /></b></div><div><b style="font-family:arial,sans-serif;font-size:10pt;background-color:transparent">GYP Mac 64-bit build</b></div><div><div><div><div><span style="font-family:courier new,monospace"><br /></span></div></div></div></div></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div><div><div><span style="font-family:courier new,monospace">GYP_DEFINES='asan=1 </span><span style="background-color:transparent"><font face="courier new, monospace">target_arch=x64 host_arch=x64</font></span><font face="courier new, monospace" style="background-color:transparent;font-size:10pt">' </font><span style="font-family:courier new,monospace;background-color:transparent;font-size:10pt">gclient runhooks</span></div></div></div></div></div><div><div><div><font face="'courier new', monospace">ninja -C out/Release base_unittests</font></div></div></div></blockquote><div><div><br /></div></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><font face="arial, sans-serif" style="font-size:10pt;background-color:transparent">Adding </font><font face="courier new, monospace" style="font-size:10pt;background-color:transparent">use_allocator=none</font><font face="arial, sans-serif" style="font-size:10pt;background-color:transparent"> to </font><font face="courier new, monospace" style="font-size:10pt;background-color:transparent">GYP_DEFINES</font><font face="arial, sans-serif" style="font-size:10pt;background-color:transparent"> also appears to be necessary as of 19/06/2014, but perhaps that's an unintended regression.</font></div></div></blockquote><div><div><h4><a name="TOC-GYP-Windows-32-bit-build"></a><font face="arial, sans-serif"><b>GYP Windows 32-bit build</b></font></h4></div></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div><div><div><font color="#990000" style="font-family:arial,sans-serif;font-size:10pt;background-color:transparent"><b>DUCT TAPE ALERT! </b></font><span style="background-color:transparent"><font color="#990000" face="arial, sans-serif"><b>EXPERIMENTAL!</b></font></span></div></div></div></div></div><div><div><div><div><div><span style="font-size:10pt;font-family:arial,sans-serif;background-color:transparent"><br /></span></div></div></div></div></div><div><div><div><div><div><span style="font-size:10pt;font-family:arial,sans-serif;background-color:transparent">ASan for Windows is not yet production quality.  It is based on Clang for Windows and inherits </span><a href="https://code.google.com/p/chromium/wiki/Clang#Windows" style="font-size:10pt;font-family:arial,sans-serif;background-color:transparent" target="_blank">the Clang/Win list of unsupported stuff</a><span style="font-size:10pt;font-family:arial,sans-serif;background-color:transparent">.  </span><span style="font-family:arial,sans-serif;font-size:10pt;background-color:transparent">You can try it, but it might just be broken for you.</span></div></div></div></div></div><div><div><div><div><div><span style="font-family:arial,sans-serif;font-size:10pt;background-color:transparent">If you are assigned an ASan/Win bug, you might not be able to reproduce the report locally.  In this case, you have to look at the stack on the bug, and you have to check in a speculative fix and rely on the FYI bots to tell you if your fix worked.</span></div></div></div></div></div><div><div><div><div><div><br /></div></div></div></div></div><div><div><div><div><div>If you're feeling lucky, you can try using ASan/Win locally by running the steps below:</div></div></div></div></div><div><br /></div><div><div><div><div><div><div><span style="font-family:courier new,monospace;font-size:10pt;background-color:transparent">    # ASAn requires a 32-bit build on Windows for now; don't set target_arch=x64.</span></div></div></div></div></div></div><div><div><div><div><div><font face="courier new, monospace">    <b>set GYP_DEFINES=asan=1</b></font></div></div></div></div></div><div><div><div><div><div><span style="font-family:courier new,monospace;font-size:10pt;background-color:transparent">    gclient runhooks</span></div></div></div></div></div><div><div><div><div><div><font face="'courier new', monospace">    ninja -C out\Release &lt;targets&gt;</font></div></div></div></div></div><div><font face="'courier new', monospace"><br /></font></div><div><div><div><div>Or you may want to override the build directory like so:</div></div></div></div><div><br /></div><div><div><div><div><span style="font-family:courier new,monospace">    </span><span style="font-family:courier new,monospace;font-size:10pt;background-color:transparent">set GYP_DEFINES=asan=1</span></div></div></div></div><div><div><div><div><span style="font-family:courier new,monospace;font-size:10pt;background-color:transparent">    </span><span style="background-color:transparent"><font face="courier new, monospace"><b>set GYP_GENERATOR_FLAGS="output_dir=out_asan"</b></font></span></div></div></div></div><div><div><div><div><span style="font-family:courier new,monospace">    gclient runhooks</span></div></div></div></div><div><div><div><div><span style="font-family:courier new,monospace">    ninja -C <b>out_asan\Release</b> &lt;targets&gt;</span></div></div></div></div><div><div><div><div><span style="font-family:courier new,monospace"><br /></span></div></div></div></div><div><div><div><div>Please note that if you make a sandboxed [default] run, you have to redirect stderr to a pipe to see ASan output [<a href="https://code.google.com/p/chromium/issues/detail?id=467021" target="_blank">issue 467021</a>].</div></div></div></div><div><div><div><div>Alternatively, you can use <font face="courier new, monospace">--no-sandbox</font> when you run <font face="courier new, monospace">chrome.exe</font>.</div></div></div></div></blockquote><div><div><div><h4><a name="TOC-Goma-build"></a><font face="arial, sans-serif"><b>Goma build</b></font></h4><div><font face="arial, sans-serif">ASan builds should work seamlessly with Goma (except for Windows); just add </font><font face="courier new, monospace">use_goma=1</font><font face="arial, sans-serif"> to your </font><font face="courier new, monospace">GYP_DEFINES</font><font face="arial, sans-serif"> or </font><font face="courier new, monospace">use_goma=true</font><font face="arial, sans-serif"> in your "gn args" Don't forget to use ninja -j &lt;jobs&gt; to take advantage of goma.</font></div><h4><a name="TOC-Build-options"></a><font face="arial, sans-serif"><b>Build options</b></font></h4><div><span style="font-family:arial,sans-serif">If you want your stack traces to be precise, you will have to disable inlining: </span></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><span style="font-family:courier new,monospace">GYP_DEFINES='... release_extra_cflags="<b>-O1 -fno-inline-functions -fno-inline</b>" ' </span><span style="font-family:courier new,monospace;background-color:transparent;font-size:10pt">gclient runhooks</span></div></blockquote>Note that this incurs a significant performance hit. Please do not do this on buildbots.</div><div><br /></div><div>If you're working on reproducing ClusterFuzz reports, you might want to add</div><div><font face="courier new, monospace">v8_enable_verify_heap=1</font> to <font face="courier new, monospace">GYP_DEFINES</font>, e.g.</div><div><br /></div><div><span style="font-size:13.3333330154419px;font-family:courier new,monospace">     GYP_DEFINES='... </span><span style="background-color:transparent"><font face="courier new, monospace">v8_enable_verify_heap=1</font></span><span style="font-size:13.3333330154419px;font-family:courier new,monospace;background-color:transparent"> ' </span><span style="font-size:10pt;font-family:courier new,monospace;background-color:transparent">gclient runhooks</span></div><div><br /></div><div>in order to enable the --verify-heap command line flag for v8 in Release builds.</div><div><br /><h3><a name="TOC-Verify-the-ASan-tool-works"></a><font face="arial, sans-serif"><b>Verify the ASan tool works</b></font></h3><div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div></div></blockquote><div><b>ATTENTION (Linux only):</b> These instructions are for running ASan in a way that is compatible with the sandbox. However, this is not compatible with LeakSanitizer. If you want to debug memory leaks, please use the instructions on the <a href="https://www.chromium.org/developers/testing/leaksanitizer">LeakSanitizer</a> page instead.</div><div><br /></div><div>Now, check that the tool works. Run the following: </div><br /></div><div class="sites-codeblock sites-codesnippet-block"><div><span style="color:rgb(0,96,0);line-height:1;font-size:10pt">out/Release/base_unittests --gtest_filter=ToolsSanityTest.DISABLED_AddressSanitizerLocalOOBCrashTest --gtest_also_run_disabled_tests 2&gt;&amp;1 | tools/valgrind/asan/asan_symbolize.py</span></div></div><div><br /><div>The test will crash with the following error report:</div></div></div></div></div><div><br /></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div><div><div><div><div><font face="'courier new', monospace">==26552== ERROR: AddressSanitizer stack-buffer-overflow on address 0x7fff338adb14 at pc 0xac20a7 bp 0x7fff338adad0 sp 0x7fff338adac8</font></div></div></div></div></div></div></div><div><div><div><div><div><div><div><font face="'courier new', monospace">WRITE of size 4 at 0x7fff338adb14 thread T0</font></div></div></div></div></div></div></div><div><div><div><div><div><div><div><font face="'courier new', monospace">    #0 0xac20a7 in base::ToolsSanityTest_DISABLED_AddressSanitizerLocalOOBCrashTest_Test::TestBody() ???:0</font></div></div></div></div></div></div></div><div><div><div><div><div><div><div><font face="'courier new', monospace">    #1 0xcddbd6 in testing::Test::Run() testing/gtest/src/gtest.cc:2161</font></div></div></div></div></div></div></div><div><div><div><div><div><div><div><font face="'courier new', monospace">    #2 0xcdf63b in testing::TestInfo::Run() testing/gtest/src/gtest.cc:2338</font></div></div></div></div></div></div></div></blockquote><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div><div><div><div><div><font color="#999999" face="'courier new', monospace">... lots more stuff</font></div></div></div></div></div></div></div></blockquote><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div><div><div><div><div><font face="'courier new', monospace">Address 0x7fff338adb14 is located at offset 52 in frame &lt;base::ToolsSanityTest_DISABLED_AddressSanitizerLocalOOBCrashTest_Test::TestBody()&gt; of T0's stack:</font></div></div></div></div></div></div></div><div><div><div><div><div><div><div><font face="'courier new', monospace">  This frame has 2 object(s):</font></div></div></div></div></div></div></div><div><div><div><div><div><div><div><font face="'courier new', monospace">    [32, 52) 'array'</font></div></div></div></div></div></div></div><div><div><div><div><div><div><div><font face="'courier new', monospace">    [96, 104) 'access'</font></div></div></div></div></div></div></div><div><div><div><div><div><div><div><span style="font-family:courier new,monospace">==26552== ABORTING</span></div></div></div></div></div></div></div></blockquote><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div><div><div><div><div><span style="font-family:courier new,monospace"><font color="#999999">... lots more stuff</font></span></div></div></div></div></div></div></div></blockquote><div><div><div><div><div><div style="font-family:courier new,monospace"></div><div><div style="font-family:courier new,monospace"><br /></div></div><div><span style="font-family:Arial,Verdana,sans-serif">Congrats, you have a working ASan build!</span><span style="font-size:10pt;background-color:transparent"> </span><span style="background-color:transparent"><font size="3">&#x1f64c;</font></span></div><div style="font-family:courier new,monospace"><code><br /></code></div><div style="font-family:courier new,monospace"><span style="font-family:Arial,Verdana,sans-serif;font-size:16px;font-weight:bold">Run chrome under ASan</span></div></div><div>And finally, have fun with the <span style="font-family:courier new,monospace">out/Release/</span><font face="'courier new', monospace">chrome</font> binary. The filter script <font face="'courier new', monospace"><font color="#ff0000">tools/valgrind/asan/asan_symbolize.py</font> </font>should be used to symbolize the output.</div><div>(Note that <font face="courier new, monospace">asan_symbolize.py</font><font face="arial, sans-serif"> is absolutely necessary if you need the symbols - there is no built-in symbolizer for ASan in Chrome).</font></div><div><br /></div><div>ASan should perfectly work with Chrome's sandbox. You should only need to run with <font face="'courier new', monospace">--no-sandbox</font> on Linux if you're debugging ASan.<br />Note: you have to disable the sandbox on Windows until it is supported.</div><div><br /></div><div>You may need to run with <span style="font-family:courier new,monospace">--disable-gpu</span> on Linux with NVIDIA driver older than <span style="font-size:12px;white-space:pre-wrap">295.20.</span></div><div><br /></div><div>You will likely need to define environment variable <span style="font-family:arial;font-size:small"><a href="http://developer.gnome.org/glib/unstable/glib-running.html">G_SLICE=always-malloc</a> to avoid crashes inside gtk.</span></div><div><span style="color:rgb(34,34,34);font-family:arial,sans-serif;font-size:13px">NSS_DISABLE_ARE</span><span style="color:rgb(34,34,34);font-family:arial,sans-serif;font-size:13px">NA_FREE_LIST=1 and </span><span style="font-size:13px;color:rgb(34,34,34);font-family:arial,sans-serif">NSS_DISABLE_UNL</span><span style="font-size:13px;color:rgb(34,34,34);font-family:arial,sans-serif">OAD=1 are required as well.</span></div><div><br /></div><div>When filing a bug found by AddressSanitizer, please add a label <font color="#38761d">Stability-AddressSanitizer</font>.</div></div><div><br /></div><div><br /></div><h3><a name="TOC-ASan-runtime-options"></a>ASan runtime options</h3><div>ASan's behavior can be changed by exporting the <code>ASAN_OPTIONS</code> env var. Some of the useful options are listed on this page, others can be obtained from running an ASanified binary with <code>ASAN_OPTIONS=help=1</code>.</div><div>Note that Chromium sets its own defaults for some options, so the default behavior may be different from that observed in other projects.</div><div>See <code>base/debug/sanitizer_options.cc</code> for more details.</div><div><h3><a name="TOC-NaCl-support-under-ASan"></a>NaCl support under ASan</h3></div><div>On Linux (and soon on Mac) you can build and run Chromium with NaCl under ASan. Untrusted code (nexe) itself is not instrumented with ASan in this mode, but everything else is.</div><div><br /></div><div>To do this, remove <code>disable_nacl=1 </code>from <code>GYP_DEFINES</code>, and define <code>NACL_DANGEROUS_SKIP_QUALIFICATION_TEST=1</code> in your environment at run time.</div><div><br /></div><div>Pipe chromium output (stderr) through <code>tools/valgrind/asan/asan_symbolize.py `pwd`/</code> to get function names and line numbers in ASan reports.</div><div>If you're seeing crashes within <font face="'courier new', monospace">nacl_helper_bootstrap</font><font face="arial, sans-serif">, try deleting </font><font face="'courier new', monospace">out/Release/nacl_helper</font><font face="arial, sans-serif">.</font></div><div><br /></div><div><br /></div><h3><a name="TOC-Building-on-iOS"></a>Building on iOS</h3><div>It's possible to build and run Chrome tests for iOS simulator (which are x86 binaries essentially) under ASan. Note that y<span style="font-size:10pt">ou'll need a Chrome iOS checkout for that. It isn't currently possible to build iOS binaries targeting ARM.</span></div><div><span style="font-size:10pt"><br /></span></div><div><pre style="max-width:80em;padding-left:0.7em"><font face="arial, sans-serif" size="2">Fix chromium.gyp_env to use ASan.</font><span style="font-size:11.818181991577148px;white-space:pre-wrap">

</span></pre><div class="sites-codeblock sites-codesnippet-block"><pre style="max-width:80em;padding-left:0.7em"><code>$ gyp_env=`ls ios_*/build/chromium.gyp_env`</code><br /><code>$ cp $gyp_env $gyp_env.orig</code><br /><code>$ cat $gyp_env.orig | sed "s/\('GYP_DEFINES.*\)' \+/\1 asan=1 clang_use_chrome_plugins=0 ' +/" &gt; $gyp_env</code></pre></div><br /></div><div><pre style="max-width:80em;padding-left:0.7em"><pre style="white-space:pre-wrap;max-width:80em;padding-left:0.7em"><font face="arial, sans-serif" size="2">Then update Clang and prepare the build env:</font></pre><font face="times new roman, serif"><div class="sites-codeblock sites-codesnippet-block"><code>./tools/clang/scripts/update.sh </code><br /><code>gclient runhooks</code><br /><code>export ASAN_BIN=`pwd`/third_party/llvm-build/Release+Asserts/bin/
export CC=$ASAN_BIN/clang
export CXX=$ASAN_BIN/clang++</code></div></font><span style="font-size:11.818181991577148px;white-space:pre-wrap"><br /></span></pre><font face="arial, sans-serif" size="2"><span>    </span>Now build the test binary and run it:<br /></font><br /></div><div></div><div class="sites-codeblock sites-codesnippet-block"><br /><code>ninja -C out/Release-iphonesimulator base_unittests</code><br /><code>out/Release-iphonesimulator/iossim -d "iPhone" -s 7.0 out/Release-iphonesimulator/base_unittests.app/  \</code><br /><code>  --gtest_filter=ToolsSanityTest.DISABLED_AddressSanitizerLocalOOBCrashTest --gtest_also_run_disabled_tests 2&gt;&amp;1 |</code><br /><code>tools/valgrind/asan/asan_symbolize.py</code></div><div><br /></div><div>You'll see the same report as shown above (see the "Verify the ASan tool works" section), with a number of iOS-specific frames.</div><div><br /></div><div><h3><a name="TOC-Building-on-Android"></a>Building on Android</h3></div><div>Follow <a href="https://code.google.com/p/chromium/wiki/AndroidBuildInstructions">AndroidBuildInstructions</a> with minor changes:</div><br /><div class="sites-codeblock sites-codesnippet-block"><code>gclient sync --nohooks</code><br /><code>. build/android/envsetup.sh</code><br /><code>GYP_DEFINES="OS=android asan=1 component=shared_library" gclient runhooks</code></div><div><br /></div><code>component=shared_library</code> is required to link shared libstlport.so instead of a static one, which allows AddressSanitizer to interpose operators new and delete. Omitting this flag will get you broken allocation and deallocation stacks, but things will generally work.</div><div><br /></div><div>Running ASan applications on Android requires additional device setup. Chromium testing scripts take care of this, so <u>testing works as expected:</u></div><div><div class="sites-codeblock sites-codesnippet-block"><code>build/android/test_runner.py instrumentation --test-apk ContentShellTest --test_data content:content/test/data/android/device_files -v -v -v --tool=asan --release</code></div><div><br /></div>To run stuff without Chromium testing script (ex. ContentShell.apk, or any third party apk or binary), device setup is needed:</div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><span style="background-color:transparent;font-size:10pt"><code>tools/android/asan/third_party/asan_device_setup.sh --lib </code></span><font color="#006000" face="monospace">third_party/llvm-build/Release+Asserts/lib/clang/*/lib/linux/libclang_rt.asan-arm-android.so</font></div><div><span style="background-color:transparent;font-size:10pt"><code># wait a few seconds for the device to reload</code></span></div></div><span style="font-size:13.600000381469727px;font-weight:normal">It only needs to be run once per device. It is safe to run it multiple times.</span></div><div>When this is done, the device will run ASan apks as well as normal apks without any further setup.</div><div><br /></div><div>To run command-line tools (i.e. binaries), prefix them with <code>asanwrapper</code>:</div><div><div class="sites-codeblock sites-codesnippet-block"><code>adb shell /system/bin/asanwrapper /path/to/binary</code></div></div><div><br /></div><div><h3><a name="TOC-Building-with-v8_target_arch-arm"></a><b style="background-color:transparent"><font size="3">Building with v8_target_arch=arm</font></b></h3><div><font size="2">This is needed to detect addressability bugs in the ARM code emitted by V8 and running on an instrumented ARM emulator in a 32-bit x86 Linux Chromium. You probably don't want this.</font></div><div><font size="2">See </font><span style="background-color:transparent"><font size="2"><a href="http://crbug.com/324207">http://crbug.com/324207</a> for some context.</font></span></div><div><span style="background-color:transparent"><font size="2"><br /></font></span></div><div><span style="background-color:transparent"><font size="2">First, you need to install the 32-bit chroot environment </font></span><span style="background-color:transparent"><font size="2">using the <code>build/install-chroot.sh</code> script (as described in https://code.google.com/p/chromium/wiki/LinuxBuild32On64)</font></span></div><div><span style="background-color:transparent"><font size="2">Second, install the build deps:</font></span></div><div><span style="background-color:transparent"><font size="2"><div class="sites-codeblock sites-codesnippet-block"><code>precise32 build/install-build-deps.sh  # assuming your schroot wrapper is called 'precise32'</code></div></font></span></div><div><br /></div><div><font size="2">You'll need to make two symlinks to avoid linking errors:</font></div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><font size="2"><code>sudo ln -s $CHROOT/usr/lib/i386-linux-gnu/libc_nonshared.a /usr/lib/i386-linux-gnu/libc_nonshared.a</code></font></div><div><font size="2"><code>sudo ln -s $CHROOT/usr/lib/i386-linux-gnu/libpthread_nonshared.a /usr/lib/i386-linux-gnu/libpthread_nonshared.a</code></font></div><div></div></div><font size="2"><div><font size="2"><br /></font></div>Now configure and build your Chrome:</font></div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><font size="2"><code>GYP_GENERATOR_FLAGS="output_dir=out_asan_chroot" GYP_DEFINES="asan=1 disable_nacl=1 v8_target_arch=arm sysroot=/var/lib/chroot/precise32bit/ chroot_cmd=precise32 host_arch=x86_64 target_arch=ia32" gclient runhooks</code></font></div><div><font size="2"><code>ninja -C out_asan_chroot/Release chrome</code></font></div></div><div><font size="2"><br /></font></div><div><font size="2"><b>Note:</b> <code>disable_nacl=1</code> is needed for now.<br /></font><h3><a name="TOC-Linux-Mac-build-using-a-custom-Clang"></a><b style="background-color:transparent"><font size="3">Linux/Mac build using a custom Clang</font></b></h3><div><div>If for some reason you need to build a 32-bit Chrome binary, you'll need to do some magic. The same command is needed to use a custom compiler binary:</div><blockquote style="margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:40px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;border-width:initial;border-color:initial;padding-top:0px;padding-right:0px;padding-bottom:0px;padding-left:0px"><div><span style="font-family:courier new,monospace">cd src</span></div><div><font face="'courier new', monospace">ASAN_BIN=/path/to/clang/bin</font></div><div><font face="'courier new', monospace"><div>export CC="$<b>ASAN_BIN/clang</b>"</div><div>export CXX="<b>$ASAN_BIN/clang++</b>"</div><div>GYP_DEFINES='asan=1 clang_use_chrome_plugins=0' <span style="background-color:transparent;font-size:10pt">gclient runhooks</span></div></font></div><div><span style="font-family:courier new,monospace">ninja -C out/Release base_unittests</span></div></blockquote><h3><a name="TOC-AsanCoverage"></a>AsanCoverage</h3></div></div><div>AsanCoverage is a minimalistic code coverage implementation built into ASan. For general information see <span style="font-size:10pt;background-color:transparent"><a href="https://code.google.com/p/address-sanitizer/wiki/AsanCoverage">https://code.google.com/p/address-sanitizer/wiki/AsanCoverage</a></span></div><div>To use AsanCoverage in Chromium, add <code>sanitizer_coverage=1</code> to your regular ASan <code>GYP_DEFINES</code>. This gets you function level coverage. To get block level coverage, use <code><span style="font-size:13.3333330154419px">sanitizer_coverage</span>=2</code>. To get edge level coverage, use<span style="font-size:13.3333330154419px;background-color:transparent"> </span><code style="font-size:13.3333330154419px;background-color:transparent"><span style="font-size:13.3333330154419px">sanitizer_coverage</span>=3.</code></div><div>Note that renderers and the GPU process will not generate one coverage file per process per module, as would normally be the case. Instead, there will be two <code>.sancov.packed</code> files which will have to be unpacked to regular <code>.sancov</code> files using <code>sancov.py unpack</code>. This is required to get around sandboxing restrictions.</div><div><br /></div><div>Example usage:</div><div><br /></div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code>$ GYP_DEFINES='asan=1 <span style="font-size:13.3333330154419px;line-height:normal;background-color:rgb(255,255,255)">sanitizer_coverage</span>=1' gclient runhooks</code></div><div><code>$ ninja -C out/Release chrome</code></div><div><code>$ ASAN_OPTIONS=coverage=1 out/Release/chrome</code></div></div><div><br /></div><div>Chrome must be terminated gracefully in order for coverage to work. Either close the browser, or SIGTERM the browser process. Do not do <code>killall chrome</code> or send SIGKILL.</div><div><br /></div><div></div><div></div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code>$ kill &lt;browser_process_pid&gt;</code></div><div><code>$ ls</code></div><div><code>...</code></div><div><div><code>chrome.22575.sancov</code></div><div><code>gpu.6916123572022919124.sancov.packed</code></div><div><code>zygote.13651804083035800069.sancov.packed</code></div></div><div><code>...</code></div><div></div></div><br /><div>The <code>gpu.*.sancov.packed</code> file contains coverage data for the GPU process, whereas the <code>zygote.*.sancov.packed</code> file contains coverage data for the renderers (but not the zygote process). Unpack them to regular <code>.sancov</code> files like so:</div><div><br /></div><div></div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code>$ $LLVM/</code><span style="font-size:10pt;background-color:transparent"><code>projects/compiler-rt/lib/sanitizer_common/scripts/sancov.py unpack *.sancov.packed</code></span></div><div><span style="background-color:transparent"><div><code>sancov.py: unpacking gpu.6916123572022919124.sancov.packed</code></div><div><code>sancov.py: extracting chrome.22610.sancov</code></div><div><code>sancov.py: unpacking zygote.13651804083035800069.sancov.packed</code></div><div><code>sancov.py: extracting libpdf.so.12.sancov</code></div><div><code>sancov.py: extracting chrome.12.sancov</code></div><div><code>sancov.py: extracting libpdf.so.10.sancov</code></div><div><code>sancov.py: extracting chrome.10.sancov</code></div></span></div></div><br /><div>Now, e.g., to list the offsets of covered functions in the <code>libpdf.so</code> binary in renderer with pid 10:</div><div><br /></div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code>$ $LLVM/</code><span style="font-size:10pt;line-height:10.666666030883789px;background-color:transparent"><code>projects/compiler-rt/lib/sanitizer_common/scripts/sancov.py print libpdf.so.10.sancov</code></span></div><div></div></div><span style="font-size:10pt;line-height:10.666666030883789px;background-color:transparent"><br /></span><div><span style="font-size:10pt;line-height:10.666666030883789px;background-color:transparent"><br /></span></div><div><span style="font-size:10pt;line-height:10.666666030883789px;background-color:transparent">Please refer to the ASan wiki for more information.</span></div><div><span style="font-size:10pt;line-height:10.666666030883789px;background-color:transparent"><br /></span></div></div></div></td></tr></tbody></table>
</div> 
</div> 
<div id="sites-canvas-bottom-panel">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-subpages"> </div>
<div id="sites-attachments-container">
</div>
<a xmlns="http://www.w3.org/1999/xhtml" name="page-comments"></a>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-comments"><div class="sites-comment-docos-wrapper"><div class="sites-comment-docos"><div class="sites-comment-docos-background"></div><div class="sites-comment-docos-header"><div class="sites-comment-docos-header-title">Comments</div></div><div id="sites-comment-docos-pane" class="sites-comment-docos-pane"></div></div></div></div>
</div>
</div> 
</td> 
</tr>
</table> 
</div> 
</div> 
<div id="sites-chrome-footer-wrapper">
<div id="sites-chrome-footer-wrapper-inside">
<div id="sites-chrome-footer">
</div>
</div>
</div>
</div> 
</div> 
<div id="sites-chrome-adminfooter-container">
<div xmlns="http://www.w3.org/1999/xhtml" class="sites-adminfooter" role="navigation"><p><a class="sites-system-link" href="https://www.google.com/a/UniversalLogin?service=jotspot&amp;continue=https://sites.google.com/a/chromium.org/dev/developers/testing/addresssanitizer">Sign in</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/recentChanges">Recent Site Activity</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/reportAbuse" target="_blank">Report Abuse</a><span aria-hidden="true">|</span><a class="sites-system-link" href="javascript:;" onclick="window.open(webspace.printUrl)">Print Page</a><span aria-hidden="true">|</span><span class="sites-system-link">Powered By</span> <b class="powered-by"><a href="http://sites.google.com">Google Sites</a></b></p></div>
</div>
</div> 
</div> 
<div id="sites-chrome-onebar-footer">
</div>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('sjl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" src="https://ssl.gstatic.com/sites/p/56e332/system/js/jot_min_view__en.js"></script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('jl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml">
      
          sites.core.Analytics.createTracker();
          sites.core.Analytics.trackPageview();
        
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
                    sites.Searchbox.initialize(
                        'sites-searchbox-search-button',
                        {"object":[]}['object'],
                        'search-site',
                        {"label":"Configure search options...","url":"/system/app/pages/admin/settings"});
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
      gsites.HoverPopupMenu.createSiteDropdownMenus('sites-header-nav-dropdown', false);
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("7648876402527094", "Navigation", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_7648876402527094');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("14720868319272995", "Quick links", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_14720868319272995');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("19690813310444355", "Other sites", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_19690813310444355');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
              new sites.CommentPane('//docs.google.com/comments/d/AAHRpnXvrAwjAfmld0ObrebBiGRq99TduUMx5jA8uXsE4AgIHzgIX4OrUISCaNyYAk5kFfyx9hei_AFYXSGRX6YlzODq9sAmd6_5Blqex9bHhXOsjAWwgQ_FvsIMwcFW_APL5H6zMoRRt/api/js?anon=true',
                  false, false);
            </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
  setTimeout(function() {
    var fingerprint = gsites.date.TimeZone.getFingerprint([]);
    gsites.Xhr.send('https://www.chromium.org/_/tz', null, null, 'GET', null, null, { afjstz: fingerprint });
  }, 500);
</script>
<script xmlns="http://www.w3.org/1999/xhtml">
                    window.onload = function() {
                      if (false) {
                        JOT_setMobilePreview();
                      }
                      var loadTimer = window.jstiming.load;
                      loadTimer.tick("ol");
                      loadTimer["name"] = "load," + webspace.page.type + ",user_page";
                      window.jstiming.report(loadTimer, {}, 'https://gg.google.com/csi');
                    }
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
        JOT_insertAnalyticsCode(false,
            false);
      </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    var maestroRunner = new gsites.pages.view.SitesMaestroRunner(
        webspace, "en");
    maestroRunner.initListeners();
    maestroRunner.installEditRender();
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
  //<![CDATA[
    // Decorate any fastUI buttons on the page with a class of 'goog-button'.
    if (webspace.user.hasWriteAccess) {
      JOT_decorateButtons();
    }

    // Fires delayed events.
    (function() {
      JOT_fullyLoaded = true;
      var delayedEvents = JOT_delayedEvents;
      for (var x = 0; x < delayedEvents.length; x++) {
        var event = delayedEvents[x];
        JOT_postEvent(event.eventName, event.eventSrc, event.payload);
      }
      JOT_delayedEvents = null;
      JOT_postEvent('pageLoaded');
    })();
  //]]>
</script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    JOT_postEvent('decorateGvizCharts');
  </script>
<script type="text/javascript">
          JOT_setupPostRenderingManager();
        </script>
<script type="text/javascript">
          JOT_postEvent('renderPlus', null, 'sites-chrome-main');
        </script>
<div id="server-timer-div" style="display:none"> </div>
<script type="text/javascript">
          window.jstiming.load.tick('render');
          JOT_postEvent('usercontentrendered', this);
        </script>
</body>
</html>
