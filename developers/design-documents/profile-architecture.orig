<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/WebPage">
<head>
<meta http-equiv="X-UA-Compatible" content="chrome=1" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var e="wtsrt_",g="tbsd_",h="tbnd_",k="start",l="_wtsrt",m="_tbnd",n="CSI/";(function(){function f(a){this.t={};this.tick=function(a,c,b){this.t[a]=[void 0!=b?b:(new Date).getTime(),c];if(void 0==b)try{window.console.timeStamp(n+a)}catch(d){}};this.tick(k,null,a)}var a;window.performance&&(a=window.performance.timing);var p=a?new f(a.responseStart):new f;window.jstiming={Timer:f,load:p};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick(l,void 0,c),b.tick(e,l,d),b.tick(g,e))}try{a=null,
window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick(m,void 0,window.chrome.csi().startE),b.tick(h,m,c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick(m,void 0,window.external.startE),b.tick(h,m,c))),a&&(window.jstiming.pt=a)}catch(q){}})(); })()
</script>
<link rel="shortcut icon" href="/_/rsrc/1354323194313/favicon.ico" type="image/x-icon" />
<link rel="apple-touch-icon" href="http://www.gstatic.com/sites/p/56e332/system/app/images/apple-touch-icon.png" type="image/png" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var d="",g="__duration__",h="function";function k(c){return document.getElementById(c)}window.byId=k;function l(c){return c.replace(/^\s+|\s+$/g,d)}window.trim=l;var m=[],n=0;window.JOT_addListener=function(c,a,b){var e=new String(n++);c={eventName:c,handler:a,compId:b,key:e};m.push(c);return e};window.JOT_removeListenerByKey=function(c){for(var a=0;a<m.length;a++)if(m[a].key==c){m.splice(a,1);break}};
window.JOT_removeAllListenersForName=function(c){for(var a=0;a<m.length;a++)m[a].eventName==c&&m.splice(a,1)};window.JOT_postEvent=function(c,a,b){var e={eventName:c,eventSrc:a||{},payload:b||{}};if(window.JOT_fullyLoaded)for(a=m.length,b=0;b<a&&b<m.length;b++){var f=m[b];f&&f.eventName==c&&(e.listenerCompId=f.compId||d,(f=typeof f.handler==h?f.handler:window[f.handler])&&f(e))}else window.JOT_delayedEvents.push({eventName:c,eventSrc:a,payload:b})};window.JOT_delayedEvents=[];
window.JOT_fullyLoaded=!1;window.JOT_formatRelativeToNow=function(c,a){var b=((new Date).getTime()-c)/6E4;if(1440<=b||0>b)return null;var e=0;60<=b&&(b/=60,e=2);2<=b&&e++;return a?window.JOT_siteRelTimeStrs[e].replace(g,Math.floor(b)):window.JOT_userRelTimeStrs[e].replace(g,Math.floor(b))}; })()
</script>
<script>

  

  var breadcrumbs = [{"path":"/developers","deleted":false,"title":"For Developers","dir":"ltr"},{"path":"/developers/design-documents","deleted":false,"title":"Design Documents","dir":"ltr"},{"path":"/developers/design-documents/profile-architecture","deleted":false,"title":"Profile Architecture","dir":"ltr"}];
  var JOT_clearDotPath = 'http://www.gstatic.com/sites/p/56e332/system/app/images/cleardot.gif';

  
  var JOT_userRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

  
  

  

  var webspace = {"enableAnalytics":true,"pageSharingId":"jotspot_page","enableUniversalAnalytics":false,"sharingPolicy":"OPENED_WITH_INDICATOR","siteTitle":"The Chromium Projects","isStartPageEnabled":true,"adsensePublisherId":null,"features":{"languageSelectDefaultTextSetToDefault":true,"validateClientGvizDataSourceUrls":true,"moreMobileStyleImprovements":true,"newInsertMenuIcons":true,"accessibleSortingButtons":true,"domainAnalyticsInGAOnly":true,"noCaptcha":true,"fileCabinetScreenReaderFix":true,"updatedTosAndPrivacyLinks":null,"pageDrafts":false,"mobileOrientationFix":true,"plusBadge":false,"pdfEmbedSupport":false,"jsClickFix":true},"isPublic":true,"isConsumer":false,"serverFlags":{"cajaBaseUrl":"//www.gstatic.com/caja","cajaDebugMode":false},"onepickBaseUrl":"https://docs.google.com","domainAnalyticsAccountId":"","plusPageId":"","signInUrl":"https://www.google.com/a/SelectSession?continue\u003dhttp://sites.google.com/a/chromium.org/dev/developers/design-documents/profile-architecture\u0026service\u003djotspot","analyticsAccountId":"UA-5484340-1","scottyUrl":"/_/upload","homePath":"/","siteNoticeUrlEnabled":null,"plusPageUrl":"","adsensePromoClickedOrSiteIneligible":true,"csiReportUri":"http://csi.gstatic.com/csi","sharingId":"jotspot","termsUrl":"//www.google.com/intl/en/policies/terms/","gvizVersion":1,"editorResources":{"sitelayout":["http://www.gstatic.com/sites/p/56e332/system/app/css/sitelayouteditor.css"],"text":["http://www.gstatic.com/sites/p/56e332/system/js/codemirror.js","http://www.gstatic.com/sites/p/56e332/system/app/css/codemirror_css.css","http://www.gstatic.com/sites/p/56e332/system/js/trog_edit__en.js","http://www.gstatic.com/sites/p/56e332/system/app/css/trogedit.css","/_/rsrc/1441580320000/system/app/css/editor.css","http://www.gstatic.com/sites/p/56e332/system/app/css/codeeditor.css","/_/rsrc/1441580320000/system/app/css/camelot/editor-jfk-wlb.css"]},"sharingUrlPrefix":"/_/sharing","isAdsenseEnabled":true,"domain":"chromium.org","baseUri":"","name":"dev","siteTemplateId":false,"siteNoticeRevision":null,"siteNoticeUrlAddress":null,"siteNoticeMessage":null,"page":{"isRtlLocale":false,"canDeleteWebspace":null,"isPageDraft":null,"parentPath":"/developers/design-documents","parentWuid":"wuid:gx:359ef223e0fb14ac","siteLocale":"en","timeZone":"America/Los_Angeles","type":"text","title":"Profile Architecture","locale":"en","wuid":"wuid:gx:43c74c8b4d63ede1","revision":31,"path":"/developers/design-documents/profile-architecture","isSiteRtlLocale":false,"pageInheritsPermissions":null,"name":"profile-architecture","canChangePath":true,"state":"","properties":{},"bidiEnabled":false,"currentTemplate":{"path":"/system/app/pagetemplates/text","title":"Web Page"}},"canPublishScriptToAnyone":true,"user":{"keyboardShortcuts":true,"sessionIndex":"","guest_":true,"displayNameOrEmail":"guest","userName":"guest","uid":"","renderMobile":false,"domain":"","namespace":"","hasWriteAccess":false,"namespaceUser":false,"primaryEmail":"guest","hasAdminAccess":false},"gadgets":{"baseUri":"/system/app/pages/gadgets"}};
  webspace.page.breadcrumbs = breadcrumbs;

  
  var JOT_siteRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

</script>
<script type="text/javascript">
                window.jstiming.load.tick('scl');
              </script>
<meta name="title" content="Profile Architecture - The Chromium Projects" />
<meta itemprop="name" content="Profile Architecture - The Chromium Projects" />
<meta property="og:title" content="Profile Architecture - The Chromium Projects" />
<meta name="description" content="Home of the Chromium Open Source Project" />
<meta itemprop="description" content="Home of the Chromium Open Source Project" />
<meta id="meta-tag-description" property="og:description" content="Home of the Chromium Open Source Project" />
<style type="text/css">
</style>
<link rel="stylesheet" type="text/css" href="http://www.gstatic.com/sites/p/56e332/system/app/themes/beigeandblue/standard-css-beigeandblue-ltr-ltr.css" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/overlay.css?cb=beigeandblueundefineda100%25%25150goog-ws-leftthemedefaultstandard" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/camelot/allthemes-view.css" />
<!--[if IE]>
          <link rel="stylesheet" type="text/css" href="/system/app/css/camelot/allthemes%2die.css" />
        <![endif]-->
<title>Profile Architecture - The Chromium Projects</title>
<meta itemprop="image" content="http://www.chromium.org/_/rsrc/1345070956020/developers/design-documents/profile-architecture/graph5.png?height=40&amp;width=400" />
<meta property="og:image" content="http://www.chromium.org/_/rsrc/1345070956020/developers/design-documents/profile-architecture/graph5.png?height=40&amp;width=400" />
<script type="text/javascript">
                window.jstiming.load.tick('cl');
              </script>
</head>
<body xmlns="http://www.google.com/ns/jotspot" id="body" class=" en            ">
<div id="sites-page-toolbar" class="sites-header-divider">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-status" class="sites-status" style="display:none;"><div id="sites-notice" class="sites-notice" role="status" aria-live="assertive"> </div></div>
</div>
<div id="sites-chrome-everything-scrollbar">
<div id="sites-chrome-everything" class="">
<div id="sites-chrome-page-wrapper" style="direction: ltr">
<div id="sites-chrome-page-wrapper-inside">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-chrome-header-wrapper" style="height:auto;">
<table id="sites-chrome-header" class="sites-layout-hbox" cellspacing="0" style="height:auto;">
<tr class="sites-header-primary-row" id="sites-chrome-userheader">
<td id="sites-header-title" class="" role="banner"><div class="sites-header-cell-buffer-wrapper"><a href="http://www.chromium.org/" id="sites-chrome-userheader-logo"><img id="logo-img-id" src="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" alt="The Chromium Projects" class="sites-logo  " /></a><h2><a href="http://www.chromium.org/" dir="ltr" id="sites-chrome-userheader-title">The Chromium Projects</a></h2></div></td><td class="sites-layout-searchbox  "><div class="sites-header-cell-buffer-wrapper"><form id="sites-searchbox-form" action="/system/app/pages/search" role="search"><input type="hidden" id="sites-searchbox-scope" name="scope" value="search-site" /><input type="text" id="jot-ui-searchInput" name="q" size="20" value="" aria-label="Search this site" /><div id="sites-searchbox-button-set" class="goog-inline-block"><div role="button" id="sites-searchbox-search-button" class="goog-inline-block jfk-button jfk-button-standard" tabindex="0">Search this site</div></div></form></div></td>
</tr>
<tr class="sites-header-secondary-row" id="sites-chrome-horizontal-nav">
<td colspan="2" id="sites-chrome-header-horizontal-nav-container" role="navigation">
</td>
</tr>
</table>
</div>
<div id="sites-chrome-main-wrapper">
<div id="sites-chrome-main-wrapper-inside">
<table id="sites-chrome-main" class="sites-layout-hbox" cellspacing="0" cellpadding="{scmCellpadding}" border="0">
<tr>
<td id="sites-chrome-sidebar-left" class="sites-layout-sidebar-left initial" style="width:150px">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_7648876402527094" class="sites-embed" role="navigation"><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-projects" jotId="wuid:gx:10ae433dadbbab13" class="sites-navigation-link">Home</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/Home" jotId="wuid:gx:43582b9d2029d3af" class="sites-navigation-link">Chromium</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-os" jotId="wuid:gx:83df2ab1f8880ba" class="sites-navigation-link">Chromium OS</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_14720868319272995" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Quick links</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/for-testers/bug-reporting-guidelines" class="sites-navigation-link">Report bugs</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/developers/discussion-groups" class="sites-navigation-link">Discuss</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/system/app/pages/sitemap/hierarchy" jotId="wuid:gx:fe204a485666144" class="sites-navigation-link">Sitemap</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19690813310444355" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Other sites</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://blog.chromium.org/" class="sites-navigation-link">Chromium Blog</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://code.google.com/chrome/extensions/" class="sites-navigation-link">Google Chrome Extensions</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="https://developers.google.com/chrome/chrome-frame/" class="sites-navigation-link">Google Chrome Frame</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19695218559354544" class="sites-embed" role="complementary"><h4 class="sites-embed-title"></h4><div class="sites-embed-content sites-embed-content-sidebar-textbox"><div dir="ltr"><span style="font-size:x-small">Except as otherwise </span><a href="http://developers.google.com/site-policies.html#restrictions"><span style="font-size:x-small">noted</span></a><span style="font-size:x-small">, the content of this page is licensed under a </span><a href="http://creativecommons.org/licenses/by/2.5/"><span style="font-size:x-small">Creative Commons Attribution 2.5 license</span></a><span style="font-size:x-small">, and examples are licensed under the </span><a href="http://src.chromium.org/viewvc/chrome/trunk/src/LICENSE" target="_blank"><span style="font-size:x-small">BSD License</span></a><span style="font-size:x-small">.<br /></span></div></div></div>
</td>
<td id="sites-canvas-wrapper">
<div id="sites-canvas" role="main">
<div id="goog-ws-editor-toolbar-container"> </div>
<div xmlns="http://www.w3.org/1999/xhtml" id="title-crumbs" style="">
<A href="/developers" dir="ltr">For Developers</A>‎ &gt; ‎<A href="/developers/design-documents" dir="ltr">Design Documents</A>‎ &gt; ‎
  </div>
<h3 xmlns="http://www.w3.org/1999/xhtml" id="sites-page-title-header" style="" align="left">
<span id="sites-page-title" dir="ltr" tabindex="-1" style="outline: none">Profile Architecture</span>
</h3>
<div id="sites-canvas-main" class="sites-canvas-main">
<div id="sites-canvas-main-content">
<table xmlns="http://www.w3.org/1999/xhtml" cellspacing="0" class="sites-layout-name-one-column sites-layout-hbox"><tbody><tr><td class="sites-layout-tile sites-tile-name-content-1"><div dir="ltr"><div><i>This page details an ongoing design refactoring, started in <b>January 2012</b>.</i></div><div><br /></div><div><font color="#ff0000">Note: As of Jun 2013, this doc needs updating.  The classes have been renamed (s/ProfileKeyed/BrowserContextKeyed/) and moved into components/browser_context_keyed_service.</font></div><div><br /></div>Chromium has lots of features that hook into a <b>Profile</b>, a bundle of data about the current user and the current chrome session that can span multiple browser windows. When Chromium first started, the profile had only a few moving parts: the cookie jar, the history database, the bookmark database, and things to do with user preferences. In the three years of the Chromium Project, Profile became the join point for every feature, leading to things like Profile::GetInstantPromoCounter() or Proifle::GetHostContentSettingsMap(). As of this writing there are 58 pure virtual methods that start with "Get" in Profile.<div><br /></div><div>Profile should be a minimal reference, a sort of handle object that doesn't own the world.</div><div><br /></div><div><div><div class="sites-embed-align-left-wrapping-off"><div class="sites-embed-border-off sites-embed" style="width:450px;"><div class="sites-embed-content sites-embed-type-toc"><div class="goog-toc sites-embed-toc-maxdepth-6"><p>Contents</p><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Design-Goals"><strong>1 </strong>Design Goals</a></li><li class="goog-toc"><a href="#TOC-BrowserContextKeyedServiceFactory"><strong>2 </strong>BrowserContextKeyedServiceFactory</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-The-Old-Way:-Profile-interface-and-ProfileImpl"><strong>2.1 </strong>The Old Way: Profile interface and ProfileImpl</a></li><li class="goog-toc"><a href="#TOC-The-New-Way:-BrowserContextKeyedServiceFactory"><strong>2.2 </strong>The New Way: BrowserContextKeyedServiceFactory</a></li><li class="goog-toc"><a href="#TOC-A-Few-Types-of-Factories"><strong>2.3 </strong>A Few Types of Factories</a></li><li class="goog-toc"><a href="#TOC-A-Brief-Interlude-About-Complexity"><strong>2.4 </strong>A Brief Interlude About Complexity</a></li><li class="goog-toc"><a href="#TOC-Dependency-Management-Overview"><strong>2.5 </strong>Dependency Management Overview</a></li></ol></li><li class="goog-toc"><a href="#TOC-The-Five-Minute-Tutorial-of-How-to-Convert-Your-Code"><strong>3 </strong>The Five Minute Tutorial of How to Convert Your Code</a></li><li class="goog-toc"><a href="#TOC-Debugging-Tips"><strong>4 </strong>Debugging Tips</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Using-the-dependency-visualizer"><strong>4.1 </strong>Using the dependency visualizer</a></li><li class="goog-toc"><a href="#TOC-Crashses-at-Shutdown"><strong>4.2 </strong>Crashses at Shutdown</a></li></ol></li></ol></div></div></div></div></div><br /><h2><a name="TOC-Design-Goals"></a>Design Goals</h2><div><ul><li><b>We must be able to move to the new architecture piece-wise.</b> One service and feature at a time. We can not stop the world and convert everything in one operation. As of this writing, we've moved 19 services out of Profile.</li><ul><li>We should only make small modifications at the callsite where a Profile is used to get the service in question.</li></ul><li><b>We must fix Profile shutdown.</b> When we started and only had a few objects hanging off of Profile, manual ordering was acceptable for destruction. Now we have over seventy five components and we know that our manual destruction ordering is incorrect as written today. We can not rely on manual ordering when we have so many components.</li><li><b>We must allow features to be compiled in and out.</b> Now that we have chromium variants that don't contain all the features in a standard Windows/Mac/Linux Google Chrome build, we need a way to allow these variants to compile without #ifdefing profile.h and profile_impl.h into a mess. These variants also have their own services that they'd like to provide. (Letting chromium variants add their own services also touches on why we can't rely on manual ordering in Profile shutdown.)</li><ul><li>Stretch goal: Separate features go in their own .a/.so files to further minimize our ridiculous linking time.</li></ul></ul><h2><a name="TOC-BrowserContextKeyedServiceFactory"></a>BrowserContextKeyedServiceFactory</h2><h3><a name="TOC-The-Old-Way:-Profile-interface-and-ProfileImpl"></a>The Old Way: Profile interface and ProfileImpl</h3><div>In the previous design, services were fetched through an accessor on Profile:</div><div><br /></div></div></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><div><font face="'courier new', monospace">class ProfileImpl {</font></div></div></div><div><font face="'courier new', monospace">  public:</font></div><div><font face="'courier new', monospace">    virtual FooService* GetFooService();</font></div><div><font face="'courier new', monospace">  private:</font></div><div><font face="'courier new', monospace">    scoped_ptr&lt;FooService&gt; foo_service_;</font></div><div><font face="'courier new', monospace">};</font></div></blockquote><div><div><br /></div><div>In the previous system, Profile was an interface with mostly pure virtual accessors. There were separate versions of Profile for Normal, Incognito and Testing profiles.</div><div><br /></div><div>In this world, the Profile was the center of all activity. The profile owned all of its service and handed them out. Profile destruction was according to whatever order the services were listed in ProfileImpl. There wasn't a way for another variant to add its own services (or leave out ones it didn't need) without modifying the Profile interface.</div><h3><a name="TOC-The-New-Way:-BrowserContextKeyedServiceFactory"></a>The New Way: BrowserContextKeyedServiceFactory</h3><div>Instead of having the Profile own FooService, we have a dedicated singleton FooServiceFactory, like this minimal one:</div><div><br /></div></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><font face="'courier new', monospace">class FooServiceFactory : public BrowserContextKeyedServiceFactory {<br /> public:<br />  static FooService* GetForProfile(Profile* profile);<br /><br />  static FooServiceFactory* GetInstance();<br /><br /> private:<br />  friend struct DefaultSingletonTraits&lt;FooServiceFactory&gt;;<br /><br />  FooServiceFactory();<br />  virtual ~FooServiceFactory();<br /><br />  // BrowserContextKeyedServiceFactory:<br />  virtual BrowserContextKeyedService* BuildServiceInstanceFor(<br />    content::BrowserContext* context) const OVERRIDE;<br />};</font></blockquote><div><div><br /></div><div>We have a generalized <font face="'courier new', monospace">BrowserContextKeyedServiceFactory</font> which performs most of the work of associating a profile with an object provided by your <font face="'courier new', monospace">BuildServiceInstanceFor()</font> method. The BrowserContextKeyedServiceFactory provides an interface for you to override while managing the lifetime of your Service object in response to Profile lifetime events and making sure your service is shut down before services it depends on.</div><div><br /></div><div>An absolutely minimal factory will supply the following methods:</div><div><ul><li>A static <font face="'courier new', monospace">GetInstance()</font> method that refers to your Factory as a Singleton.</li><li>A constructor that associates this <font face="'courier new', monospace">BrowserContextKeyedServiceFactory</font> with the <font face="'courier new', monospace">ProfileDependencyManager</font> singleton, and makes <font face="'courier new', monospace">DependsOn()</font> declarations.</li><li>A <font face="'courier new', monospace">GetForProfile()</font> method that wraps <font face="'courier new', monospace">BrowserContextKeyedServiceFactory</font><font face="arial, sans-serif">, casting the result back to whatever type you need to return.</font></li><li><font face="arial, sans-serif">A </font><font face="'courier new', monospace">BuildServiceInstanceFor()</font><font face="arial, sans-serif"> method which is called once by the framework for each |</font><font face="'courier new', monospace">profile</font><font face="arial, sans-serif">|, which must return a proper instance of your service.</font></li></ul><div><font face="arial, sans-serif">In addition, BrowserContextKeyedServiceFactory provides these other knobs for how you can control behavior:</font></div></div><div><ul><li><font face="'courier new', monospace">RegisterUserPrefs()</font><font face="arial, sans-serif"> is called once per Profile during initialization and is where you can place any user pref registration.</font></li><li><font face="arial, sans-serif">By default, BCKSF return NULL when given an Incognito profile.</font></li><ul><li><font face="arial, sans-serif">If you override </font><font face="'courier new', monospace">ServiceRedirectedInIncognito()</font><font face="arial, sans-serif"> to return true, it will return the associated normal Profile's service.</font></li><li><font face="arial, sans-serif">If you override </font><font face="'courier new', monospace">ServiceHasOwnInstanceInIncognito()</font><font face="arial, sans-serif"> to return true, it will create a new service for the incognito profile.</font></li></ul><li><font face="arial, sans-serif">By default, BCKSF will lazily create your service. If you override </font><font face="'courier new', monospace">ServiceIsCreatedWithProfile()</font><font face="arial, sans-serif"> to return true, your service will be created alongside the profile.</font></li><li><font face="arial, sans-serif">BCKSF gives you multiple ways to control behavior during unit tests. See the header for more details.</font></li><li><font face="arial, sans-serif">BCKSF gives you a way to augment and tweak the shutdown and deallocation behavior.</font></li></ul></div><h3><a name="TOC-A-Few-Types-of-Factories"></a>A Few Types of Factories</h3><div>Not all objects have the same lifecycle and memory management. The previous paragraph was a major simplification; there is a base class <span style="font-family:courier new,monospace">BrowserContextKeyedBaseFactory</span> that defines the most general dependency stuff while <span style="font-family:courier new,monospace">BrowserContextKeyedServiceFactory</span> is a specialization that deals with normal objects. There is a second <span style="font-family:courier new,monospace">RefcountedBrowserContextKeyedServiceFactory</span> that gives slightly different semantics and storage for RefCountedThreadSafe objects.</div><h3><a name="TOC-A-Brief-Interlude-About-Complexity"></a>A Brief Interlude About Complexity</h3><div>So the above, from an implementation standpoint is significantly more complex than what came before it. Is all this really worth it?</div></div><div><br /></div><div><b>Yes.</b></div><div><b><br /></b></div><div>We absolutely have to address the interdependency of services. As it stands today, we do not shut down profiles after they are no longer needed in multiprofile mode because our crash rate when shutting down a profile is too high to ship to users. We have about 75 components that plug into the profile lifecycle and their dependency graph is complex enough that our naive manual ordering can not handle the complexity. All of the overrideable behavior above exists because it was implemented per service, ad hoc and copy pasted.</div><div><br /></div><div>We likewise need to make it easy for other chromium variants to add their own features/compile features out of their build.</div><div><h3><a name="TOC-Dependency-Management-Overview"></a>Dependency Management Overview</h3></div><div>With that in mind, let's look at how dependency management works. There is a single <font face="'courier new', monospace">ProfileDependencyManager</font> singleton, which is what is alerted to <font face="'courier new', monospace">Profile</font> creation and destruction. A PKSF will register and unregister itself with the <font face="'courier new', monospace">ProfileDependencyManager</font><font face="arial, sans-serif">. The job of the ProfileDependencyManager is to make sure that individual services are created and destroyed in a safe ordering.</font></div><div><font face="arial, sans-serif"><br /></font></div><div><font face="arial, sans-serif">Consider the case of these three service factories:</font></div><div><font face="arial, sans-serif"><br /></font></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><font face="'courier new', monospace">AlphaServiceFactory::AlphaServiceFactory()<br />    : BrowserContextKeyedServiceFactory(ProfileDependencyManager::GetInstance()) {<br />}<br /><br />BetaServiceFactory::BetaServiceFactory()<br />    :</font><span style="font-family:courier new,monospace"> BrowserContextKeyedServiceFactory(</span><span style="font-family:courier new,monospace">ProfileDependencyManager::GetInstance()) </span><span style="font-family:courier new,monospace">{<br />  DependsOn(AlphaServiceFactory::GetInstance());</span></blockquote><span style="font-family:courier new,monospace">     }</span><div><font face="'courier new', monospace"><br /></font></div><div><blockquote style="margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:40px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;border-width:initial;border-color:initial;padding-top:0px;padding-right:0px;padding-bottom:0px;padding-left:0px"><font face="'courier new', monospace">GammaServiceFactory::GammaServiceFactory()<br />    :</font><span style="font-family:courier new,monospace"> BrowserContextKeyedServiceFactory(</span><span style="font-family:courier new,monospace">ProfileDependencyManager::GetInstance()) </span><span style="font-family:courier new,monospace">{<br /></span><span style="font-family:courier new,monospace">  DependsOn(BetaServiceFactory::GetInstance());</span></blockquote><span style="font-family:courier new,monospace">     }</span></div><div><font face="'courier new', monospace"><br /></font></div><div><font face="arial, sans-serif">The explicitly stated dependencies in this simplified graph mean that the only valid creation order for services is [Alpha, Beta, Gamma] and the destruction order is [Gamma, Beta, Alpha]. The above is all you, as a user of the framework, have to do to specify dependencies.</font></div><div><font face="arial, sans-serif"><br /></font></div><div><font face="arial, sans-serif">Behind the scenes, </font><font face="'courier new', monospace">ProfileDependencyManager</font><font face="arial, sans-serif"> takes the stated dependency edges, performs a Kahn topological sort, and uses that in </font><font face="'courier new', monospace">CreateProfileServices()</font><font face="arial, sans-serif"> and </font><font face="'courier new', monospace">DestroyProfileServices()</font><font face="arial, sans-serif">.</font></div><div><div><h2><a name="TOC-The-Five-Minute-Tutorial-of-How-to-Convert-Your-Code"></a>The Five Minute Tutorial of How to Convert Your Code</h2></div><div><ol><li><b>Make Your Existing FooService derive from BrowserContextKeyedService.</b></li><li><b><span style="font-size:small">If possible, make your FooService no longer refcounted.</span><span style="font-weight:normal;font-size:small"> </span></b><b><span style="font-weight:normal;font-size:small">Most of the refcounted objects that hang off of Profile appear to be that way because they aren't using </span><a href="http://www.chromium.org/developers/design-documents/threading#Runnable_methods" style="font-weight:normal;font-size:small">base::bind/WeakPtrFactory</a><span style="font-weight:normal;font-size:small"> instead of needing to own data on multiple threads. (In case you have a real reason for being a RefCountedThreadSafe, such as being accessed on multiple threads, derive your factory from </span></b><span style="font-family:courier new,monospace">RefcountedBrowserContextKeyedServiceFactory</span><b><span style="font-weight:normal;font-size:small"> and everything should just work.)</span></b></li><li><font size="2"><span style="font-weight:bold">Build a simple FooServiceFactory derived from BrowserContextKeyedServiceFactory. </span></font><span style="font-size:small">Your FooServiceFactory will be the main access point consumers will ask for FooService. </span>BrowserContextKeyedServiceFactory<span style="font-size:small"> gives you a bunch of virtual methods that control behavior.</span></li><ol><li><span style="font-size:small"><font face="'courier new', monospace" size="2" style="font-weight:bold"><span style="font-weight:normal">BrowserContextKeyedService* BrowserContextKeyedServiceFactory::BuildServiceInstanceFor(content::BrowserContext* context)</span></font><font face="arial, sans-serif" style="font-size:16px;font-weight:bold"> <span style="font-weight:normal"><font size="2">is the only required method. Given a BrowserContext handle, return a valid FooService.</font></span></font></span></li><li><span style="font-size:small"><font face="arial, sans-serif" style="font-size:16px;font-weight:bold"><span style="font-weight:normal"><font size="2"><font face="arial, sans-serif" size="2" style="font-weight:bold"><span style="font-weight:normal">You can control the incognito behavior with </span></font><span style="font-family:Arial,Verdana,sans-serif;font-size:16px"><font face="'courier new', monospace" size="2">ServiceRedirectedInIncognito()</font><font face="arial, sans-serif" size="2"> and </font></span><span style="font-family:Arial,Verdana,sans-serif;font-size:16px"><font face="'courier new', monospace" size="2">ServiceHasOwnInstanceInIncognito().</font></span></font></span></font></span></li></ol><li><font face="'courier new', monospace" size="2"><font face="arial, sans-serif" size="2" style="font-weight:bold">Add your service to the </font><font face="'courier new', monospace" size="2">EnsureBrowserContextKeyedServiceFactoriesBuilt()</font><font face="arial, sans-serif" size="2" style="font-weight:bold"> list in </font><font face="'courier new', monospace" size="2">chrome_browser_main_extra_parts_profiles.cc<b>.</b></font></font></li><li><font face="'courier new', monospace" size="2"><font face="'courier new', monospace" size="2" style="font-weight:bold"><span style="font-family:arial,sans-serif">Understand shutdown behavior. </span><span style="font-family:arial,sans-serif;font-weight:normal">For historical reasons, we have a two phase deletion process:</span></font></font></li><ol><li><font face="'courier new', monospace" size="2"><font face="'courier new', monospace" size="2" style="font-weight:bold"><span style="font-family:arial,sans-serif;font-weight:normal"><font face="arial, sans-serif" size="2" style="font-weight:bold">Every BrowserContextKeyedService will first have its </font><font face="'courier new', monospace" size="2">Shutdown()</font><font face="arial, sans-serif" size="2" style="font-weight:bold"> method called.<span style="font-weight:normal"> Use this method to drop weak references to the Profile or other service objects.</span></font></span></font></font></li><li><font face="'courier new', monospace" size="2"><font face="'courier new', monospace" size="2" style="font-weight:bold"><span style="font-family:arial,sans-serif;font-weight:normal"><font face="arial, sans-serif" size="2" style="font-weight:bold"><span style="font-weight:normal"><span style="font-weight:bold">Every BrowserContextKeyedService is deleted and its destructor is run.</span> Minimal work should be done here. Attempts to call any *ServiceFactory::GetForProfile() will cause an assertion in debug mode.</span></font></span></font></font></li></ol><li><font face="arial, sans-serif" size="2"><span style="font-weight:bold">Change each instance of "</span>profile_-&gt;GetFooService()<span style="font-weight:bold">" to "</span>FooServiceFactory::GetForProfile(profile_)<span style="font-weight:bold">".</span></font></li></ol><div><font face="arial, sans-serif" size="2">If you need an example of what the above looks like, try looking at these patches:</font></div></div><div><ul><li><font face="arial, sans-serif" size="2"><a href="http://src.chromium.org/viewvc/chrome?view=rev&amp;revision=100516" style="color:rgb(85,26,139);font-weight:bold">r100516</a><span style="font-weight:bold">:</span> A simple example, adding a new ProfileKeyedService. This shows off a minimal ServiceFactory subclass.</font></li><li><font face="arial, sans-serif" size="2"><a href="http://src.chromium.org/viewvc/chrome?view=rev&amp;revision=104806" style="font-weight:bold">r104806</a><span style="font-weight:bold">:</span> plugin_prefs_factory.h gives an example of how to deal with things that are (and have to stay) refcounted. This patch also shows off how to move your preferences into your ProfileKeyedServiceFactory.</font></li></ul><h2><a name="TOC-Debugging-Tips"></a><font face="arial, sans-serif" size="4">Debugging Tips</font></h2></div></div><h3><a name="TOC-Using-the-dependency-visualizer"></a><font face="arial, sans-serif" size="3">Using the dependency visualizer</font></h3><div><font face="arial, sans-serif" size="2">Chrome has a built in method to dump the profile dependency graph to a file in <a href="http://www.graphviz.org/">GraphViz</a> format. When you run chrome with the command line flag  </font><font face="'courier new', monospace" size="2">--dump-browser-context-graph</font><font face="arial, sans-serif" size="2">, chrome will write the dependency information to your </font><font face="'courier new', monospace" size="2">/path/to/profile/browser-context-dependencies.dot</font><font face="arial, sans-serif" size="2"> file. You can then convert this text file with dot, which is part of GraphViz:</font></div><div><font face="arial, sans-serif" size="2"><br /></font></div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><font face="'courier new', monospace"><font size="2">dot -Tpng /path/to/profile/</font><span style="font-size:small">browser-context-dependencies.dot &gt; png-file.png</span></font></div></blockquote><div><font face="'courier new', monospace" size="2"><br /></font></div><div><font face="arial, sans-serif" size="2">This will give you a visual graph like this (generated January 23rd, 2012, click through for full size):</font></div><div><font face="arial, sans-serif" size="2"><br /></font></div><div><font size="2"><div style="font-family:arial,sans-serif;display:block;text-align:left"><div style="display:block;text-align:left"><a href="http://www.chromium.org/developers/design-documents/profile-architecture/graph5.png?attredirects=0" imageanchor="1"><img alt="Graph as of Aug 15, 2012" border="0" height="40" src="http://www.chromium.org/_/rsrc/1345070956020/developers/design-documents/profile-architecture/graph5.png?height=40&amp;width=400" width="400" /></a></div><br /></div><h3 style="font-family:arial,sans-serif"><a name="TOC-Crashses-at-Shutdown"></a>Crashses at Shutdown</h3><div style="font-family:arial,sans-serif">If you get a stack that looks like this:</div><div style="font-family:arial,sans-serif"><br /></div><div><blockquote style="font-size:14px;margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:40px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;border-width:initial;border-color:initial;padding-top:0px;padding-right:0px;padding-bottom:0px;padding-left:0px"><font face="'courier new', monospace" size="2">ProfileDependencyManager::AssertProfileWasntDestroyed()</font></blockquote><blockquote style="margin-top:0px;margin-right:0px;margin-bottom:0px;margin-left:40px;border-top-style:none;border-right-style:none;border-bottom-style:none;border-left-style:none;border-width:initial;border-color:initial;padding-top:0px;padding-right:0px;padding-bottom:0px;padding-left:0px"><font face="'courier new', monospace" size="2">ProfileKeyedServiceFactory::GetServiceForProfile()<br />MyServiceFactory::GetForProfile()<br />... [Probably a bunch of frames] ...<br />OtherService::~OtherService()<br />ProfileKeyedServiceFactory::ProfileDestroyed()<br />ProfileDependencyManager::DestroyProfileServices()<br />ProfileImpl::~ProfileImpl()<br /></font></blockquote><br /><font face="arial, sans-serif">The problem is that OtherSerivce is improperly depending on MyService. The framework asserts if you try to use a Shutdown()ed component.</font></div></font></div></div></td></tr></tbody></table>
</div> 
</div> 
<div id="sites-canvas-bottom-panel">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-subpages"> </div>
<div id="sites-attachments-container">
</div>
<a xmlns="http://www.w3.org/1999/xhtml" name="page-comments"></a>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-comments"><div class="sites-comment-docos-wrapper"><div class="sites-comment-docos"><div class="sites-comment-docos-background"></div><div class="sites-comment-docos-header"><div class="sites-comment-docos-header-title">Comments</div></div><div id="sites-comment-docos-pane" class="sites-comment-docos-pane"></div></div></div></div>
</div>
</div> 
</td> 
</tr>
</table> 
</div> 
</div> 
<div id="sites-chrome-footer-wrapper">
<div id="sites-chrome-footer-wrapper-inside">
<div id="sites-chrome-footer">
</div>
</div>
</div>
</div> 
</div> 
<div id="sites-chrome-adminfooter-container">
<div xmlns="http://www.w3.org/1999/xhtml" class="sites-adminfooter" role="navigation"><p><a class="sites-system-link" href="https://www.google.com/a/UniversalLogin?service=jotspot&amp;continue=http://sites.google.com/a/chromium.org/dev/developers/design-documents/profile-architecture">Sign in</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/recentChanges">Recent Site Activity</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/reportAbuse" target="_blank">Report Abuse</a><span aria-hidden="true">|</span><a class="sites-system-link" href="javascript:;" onclick="window.open(webspace.printUrl)">Print Page</a><span aria-hidden="true">|</span><span class="sites-system-link">Powered By</span> <b class="powered-by"><a href="http://sites.google.com">Google Sites</a></b></p></div>
</div>
</div> 
</div> 
<div id="sites-chrome-onebar-footer">
</div>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('sjl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" src="http://www.gstatic.com/sites/p/56e332/system/js/jot_min_view__en.js"></script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('jl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml">
      
          sites.core.Analytics.createTracker();
          sites.core.Analytics.trackPageview();
        
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
                    sites.Searchbox.initialize(
                        'sites-searchbox-search-button',
                        {"object":[]}['object'],
                        'search-site',
                        {"label":"Configure search options...","url":"/system/app/pages/admin/settings"});
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
      gsites.HoverPopupMenu.createSiteDropdownMenus('sites-header-nav-dropdown', false);
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("7648876402527094", "Navigation", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_7648876402527094');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("14720868319272995", "Quick links", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_14720868319272995');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("19690813310444355", "Other sites", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_19690813310444355');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
              new sites.CommentPane('//docs.google.com/comments/d/AAHRpnXvrAwjAfmld0ObrebBiGRq9r2vrw8MWLEv4y5bwQgZhX5qkEfWtr5OjeISjcUFnw_6KjfkrAmgMj1ymnu-BMU4TUmF0x3HoQU6AnmZb1WRZQl73c0Ge7iwOb2c5Aodn3wP4ZUo9/api/js?anon=true',
                  false, false);
            </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
  setTimeout(function() {
    var fingerprint = gsites.date.TimeZone.getFingerprint([]);
    gsites.Xhr.send('http://www.chromium.org/_/tz', null, null, 'GET', null, null, { afjstz: fingerprint });
  }, 500);
</script>
<script xmlns="http://www.w3.org/1999/xhtml">
                    window.onload = function() {
                      if (false) {
                        JOT_setMobilePreview();
                      }
                      var loadTimer = window.jstiming.load;
                      loadTimer.tick("ol");
                      loadTimer["name"] = "load," + webspace.page.type + ",user_page";
                      window.jstiming.report(loadTimer, {}, 'http://csi.gstatic.com/csi');
                    }
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
        JOT_insertAnalyticsCode(false,
            false);
      </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    var maestroRunner = new gsites.pages.view.SitesMaestroRunner(
        webspace, "en");
    maestroRunner.initListeners();
    maestroRunner.installEditRender();
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
  //<![CDATA[
    // Decorate any fastUI buttons on the page with a class of 'goog-button'.
    if (webspace.user.hasWriteAccess) {
      JOT_decorateButtons();
    }

    // Fires delayed events.
    (function() {
      JOT_fullyLoaded = true;
      var delayedEvents = JOT_delayedEvents;
      for (var x = 0; x < delayedEvents.length; x++) {
        var event = delayedEvents[x];
        JOT_postEvent(event.eventName, event.eventSrc, event.payload);
      }
      JOT_delayedEvents = null;
      JOT_postEvent('pageLoaded');
    })();
  //]]>
</script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    JOT_postEvent('decorateGvizCharts');
  </script>
<script type="text/javascript">
          JOT_setupPostRenderingManager();
        </script>
<script type="text/javascript">
          JOT_postEvent('renderPlus', null, 'sites-chrome-main');
        </script>
<div id="server-timer-div" style="display:none"> </div>
<script type="text/javascript">
          window.jstiming.load.tick('render');
          JOT_postEvent('usercontentrendered', this);
        </script>
</body>
</html>
