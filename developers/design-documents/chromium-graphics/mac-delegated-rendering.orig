<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/WebPage">
<head>
<meta http-equiv="X-UA-Compatible" content="chrome=1" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var e="wtsrt_",g="tbsd_",h="tbnd_",k="start",l="_wtsrt",m="_tbnd",n="CSI/";(function(){function f(a){this.t={};this.tick=function(a,c,b){this.t[a]=[void 0!=b?b:(new Date).getTime(),c];if(void 0==b)try{window.console.timeStamp(n+a)}catch(d){}};this.tick(k,null,a)}var a;window.performance&&(a=window.performance.timing);var p=a?new f(a.responseStart):new f;window.jstiming={Timer:f,load:p};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick(l,void 0,c),b.tick(e,l,d),b.tick(g,e))}try{a=null,
window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick(m,void 0,window.chrome.csi().startE),b.tick(h,m,c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick(m,void 0,window.external.startE),b.tick(h,m,c))),a&&(window.jstiming.pt=a)}catch(q){}})(); })()
</script>
<link rel="shortcut icon" href="/_/rsrc/1354323194313/favicon.ico" type="image/x-icon" />
<link rel="apple-touch-icon" href="http://www.gstatic.com/sites/p/56e332/system/app/images/apple-touch-icon.png" type="image/png" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var d="",g="__duration__",h="function";function k(c){return document.getElementById(c)}window.byId=k;function l(c){return c.replace(/^\s+|\s+$/g,d)}window.trim=l;var m=[],n=0;window.JOT_addListener=function(c,a,b){var e=new String(n++);c={eventName:c,handler:a,compId:b,key:e};m.push(c);return e};window.JOT_removeListenerByKey=function(c){for(var a=0;a<m.length;a++)if(m[a].key==c){m.splice(a,1);break}};
window.JOT_removeAllListenersForName=function(c){for(var a=0;a<m.length;a++)m[a].eventName==c&&m.splice(a,1)};window.JOT_postEvent=function(c,a,b){var e={eventName:c,eventSrc:a||{},payload:b||{}};if(window.JOT_fullyLoaded)for(a=m.length,b=0;b<a&&b<m.length;b++){var f=m[b];f&&f.eventName==c&&(e.listenerCompId=f.compId||d,(f=typeof f.handler==h?f.handler:window[f.handler])&&f(e))}else window.JOT_delayedEvents.push({eventName:c,eventSrc:a,payload:b})};window.JOT_delayedEvents=[];
window.JOT_fullyLoaded=!1;window.JOT_formatRelativeToNow=function(c,a){var b=((new Date).getTime()-c)/6E4;if(1440<=b||0>b)return null;var e=0;60<=b&&(b/=60,e=2);2<=b&&e++;return a?window.JOT_siteRelTimeStrs[e].replace(g,Math.floor(b)):window.JOT_userRelTimeStrs[e].replace(g,Math.floor(b))}; })()
</script>
<script>

  

  var breadcrumbs = [{"path":"/developers","deleted":false,"title":"For Developers","dir":"ltr"},{"path":"/developers/design-documents","deleted":false,"title":"Design Documents","dir":"ltr"},{"path":"/developers/design-documents/chromium-graphics","deleted":false,"title":"Chromium Graphics // Chrome GPU","dir":"ltr"},{"path":"/developers/design-documents/chromium-graphics/mac-delegated-rendering","deleted":false,"title":"Mac Browser Compositor aka Mac Ubercompositor aka Mac Delegated Rendering","dir":"ltr"}];
  var JOT_clearDotPath = 'http://www.gstatic.com/sites/p/56e332/system/app/images/cleardot.gif';

  
  var JOT_userRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

  
  

  

  var webspace = {"enableAnalytics":true,"pageSharingId":"jotspot_page","enableUniversalAnalytics":false,"sharingPolicy":"OPENED_WITH_INDICATOR","siteTitle":"The Chromium Projects","isStartPageEnabled":true,"adsensePublisherId":null,"features":{"languageSelectDefaultTextSetToDefault":true,"validateClientGvizDataSourceUrls":true,"moreMobileStyleImprovements":true,"newInsertMenuIcons":true,"accessibleSortingButtons":true,"domainAnalyticsInGAOnly":true,"noCaptcha":true,"fileCabinetScreenReaderFix":true,"updatedTosAndPrivacyLinks":null,"pageDrafts":false,"mobileOrientationFix":true,"plusBadge":false,"pdfEmbedSupport":false,"jsClickFix":true},"isPublic":true,"isConsumer":false,"serverFlags":{"cajaBaseUrl":"//www.gstatic.com/caja","cajaDebugMode":false},"onepickBaseUrl":"https://docs.google.com","domainAnalyticsAccountId":"","plusPageId":"","signInUrl":"https://www.google.com/a/SelectSession?continue\u003dhttp://sites.google.com/a/chromium.org/dev/developers/design-documents/chromium-graphics/mac-delegated-rendering\u0026service\u003djotspot","analyticsAccountId":"UA-5484340-1","scottyUrl":"/_/upload","homePath":"/","siteNoticeUrlEnabled":null,"plusPageUrl":"","adsensePromoClickedOrSiteIneligible":true,"csiReportUri":"http://csi.gstatic.com/csi","sharingId":"jotspot","termsUrl":"//www.google.com/intl/en/policies/terms/","gvizVersion":1,"editorResources":{"sitelayout":["http://www.gstatic.com/sites/p/56e332/system/app/css/sitelayouteditor.css"],"text":["http://www.gstatic.com/sites/p/56e332/system/js/codemirror.js","http://www.gstatic.com/sites/p/56e332/system/app/css/codemirror_css.css","http://www.gstatic.com/sites/p/56e332/system/js/trog_edit__en.js","http://www.gstatic.com/sites/p/56e332/system/app/css/trogedit.css","/_/rsrc/1441580320000/system/app/css/editor.css","http://www.gstatic.com/sites/p/56e332/system/app/css/codeeditor.css","/_/rsrc/1441580320000/system/app/css/camelot/editor-jfk-wlb.css"]},"sharingUrlPrefix":"/_/sharing","isAdsenseEnabled":true,"domain":"chromium.org","baseUri":"","name":"dev","siteTemplateId":false,"siteNoticeRevision":null,"siteNoticeUrlAddress":null,"siteNoticeMessage":null,"page":{"isRtlLocale":false,"canDeleteWebspace":null,"isPageDraft":null,"parentPath":"/developers/design-documents/chromium-graphics","parentWuid":"wuid:gx:7d433f4203bd79ff","siteLocale":"en","timeZone":"America/Los_Angeles","type":"text","title":"Mac Browser Compositor aka Mac Ubercompositor aka Mac Delegated Rendering","locale":"en","wuid":"wuid:gx:65f1241232fd4585","revision":14,"path":"/developers/design-documents/chromium-graphics/mac-delegated-rendering","isSiteRtlLocale":false,"pageInheritsPermissions":null,"name":"mac-delegated-rendering","canChangePath":true,"state":"","properties":{},"bidiEnabled":false,"currentTemplate":{"path":"/system/app/pagetemplates/text","title":"Web Page"}},"canPublishScriptToAnyone":true,"user":{"keyboardShortcuts":true,"sessionIndex":"","guest_":true,"displayNameOrEmail":"guest","userName":"guest","uid":"","renderMobile":false,"domain":"","namespace":"","hasWriteAccess":false,"namespaceUser":false,"primaryEmail":"guest","hasAdminAccess":false},"gadgets":{"baseUri":"/system/app/pages/gadgets"}};
  webspace.page.breadcrumbs = breadcrumbs;

  
  var JOT_siteRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

</script>
<script type="text/javascript">
                window.jstiming.load.tick('scl');
              </script>
<meta name="title" content="Mac Browser Compositor aka Mac Ubercompositor aka Mac Delegated Rendering - The Chromium Projects" />
<meta itemprop="name" content="Mac Browser Compositor aka Mac Ubercompositor aka Mac Delegated Rendering - The Chromium Projects" />
<meta property="og:title" content="Mac Browser Compositor aka Mac Ubercompositor aka Mac Delegated Rendering - The Chromium Projects" />
<meta name="description" content="Home of the Chromium Open Source Project" />
<meta itemprop="description" content="Home of the Chromium Open Source Project" />
<meta id="meta-tag-description" property="og:description" content="Home of the Chromium Open Source Project" />
<style type="text/css">
</style>
<link rel="stylesheet" type="text/css" href="http://www.gstatic.com/sites/p/56e332/system/app/themes/beigeandblue/standard-css-beigeandblue-ltr-ltr.css" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/overlay.css?cb=beigeandblueundefineda100%25%25150goog-ws-leftthemedefaultstandard" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/camelot/allthemes-view.css" />
<!--[if IE]>
          <link rel="stylesheet" type="text/css" href="/system/app/css/camelot/allthemes%2die.css" />
        <![endif]-->
<title>Mac Browser Compositor aka Mac Ubercompositor aka Mac Delegated Rendering - The Chromium Projects</title>
<meta itemprop="image" content="http://www.chromium.org/_/rsrc/1411146836761/developers/design-documents/chromium-graphics/mac-delegated-rendering/aura%20ubercomp.png?attachauth=ANoY7coDQ7EPvQdalcAQZ6pj46RPYd5l2NAdOQ-2oy6elpC-WZA3jjGa5Q82TMQchaENG9_4JwD80CcNouzUc6Dne26KVn2FOlSD1DcTg0CkVdhjSvFPwhKUnEUOLGqkLAjesJZhlDqBTmfyGoqcdyWzXR0SXW2s1DbxvcGgybVbHQjQrsccRazIK7T1YNN5gpUktuiwePB6rdkMAQRv_adh4fCdJMrT86KJUX4GsdTiXeTCKuGzM_ZO2xquvdqnAEplxlTryB03IXxUfm3lsi386s5aQYPTBn9qQKHHnpz-1MR8CXiUeu-_dxOtdSkXkvCQrP1rpOLY&amp;attredirects=0&amp;height=614px;&amp;width=624px;" />
<meta property="og:image" content="http://www.chromium.org/_/rsrc/1411146836761/developers/design-documents/chromium-graphics/mac-delegated-rendering/aura%20ubercomp.png?attachauth=ANoY7coDQ7EPvQdalcAQZ6pj46RPYd5l2NAdOQ-2oy6elpC-WZA3jjGa5Q82TMQchaENG9_4JwD80CcNouzUc6Dne26KVn2FOlSD1DcTg0CkVdhjSvFPwhKUnEUOLGqkLAjesJZhlDqBTmfyGoqcdyWzXR0SXW2s1DbxvcGgybVbHQjQrsccRazIK7T1YNN5gpUktuiwePB6rdkMAQRv_adh4fCdJMrT86KJUX4GsdTiXeTCKuGzM_ZO2xquvdqnAEplxlTryB03IXxUfm3lsi386s5aQYPTBn9qQKHHnpz-1MR8CXiUeu-_dxOtdSkXkvCQrP1rpOLY&amp;attredirects=0&amp;height=614px;&amp;width=624px;" />
<script type="text/javascript">
                window.jstiming.load.tick('cl');
              </script>
</head>
<body xmlns="http://www.google.com/ns/jotspot" id="body" class=" en            ">
<div id="sites-page-toolbar" class="sites-header-divider">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-status" class="sites-status" style="display:none;"><div id="sites-notice" class="sites-notice" role="status" aria-live="assertive"> </div></div>
</div>
<div id="sites-chrome-everything-scrollbar">
<div id="sites-chrome-everything" class="">
<div id="sites-chrome-page-wrapper" style="direction: ltr">
<div id="sites-chrome-page-wrapper-inside">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-chrome-header-wrapper" style="height:auto;">
<table id="sites-chrome-header" class="sites-layout-hbox" cellspacing="0" style="height:auto;">
<tr class="sites-header-primary-row" id="sites-chrome-userheader">
<td id="sites-header-title" class="" role="banner"><div class="sites-header-cell-buffer-wrapper"><a href="http://www.chromium.org/" id="sites-chrome-userheader-logo"><img id="logo-img-id" src="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" alt="The Chromium Projects" class="sites-logo  " /></a><h2><a href="http://www.chromium.org/" dir="ltr" id="sites-chrome-userheader-title">The Chromium Projects</a></h2></div></td><td class="sites-layout-searchbox  "><div class="sites-header-cell-buffer-wrapper"><form id="sites-searchbox-form" action="/system/app/pages/search" role="search"><input type="hidden" id="sites-searchbox-scope" name="scope" value="search-site" /><input type="text" id="jot-ui-searchInput" name="q" size="20" value="" aria-label="Search this site" /><div id="sites-searchbox-button-set" class="goog-inline-block"><div role="button" id="sites-searchbox-search-button" class="goog-inline-block jfk-button jfk-button-standard" tabindex="0">Search this site</div></div></form></div></td>
</tr>
<tr class="sites-header-secondary-row" id="sites-chrome-horizontal-nav">
<td colspan="2" id="sites-chrome-header-horizontal-nav-container" role="navigation">
</td>
</tr>
</table>
</div>
<div id="sites-chrome-main-wrapper">
<div id="sites-chrome-main-wrapper-inside">
<table id="sites-chrome-main" class="sites-layout-hbox" cellspacing="0" cellpadding="{scmCellpadding}" border="0">
<tr>
<td id="sites-chrome-sidebar-left" class="sites-layout-sidebar-left initial" style="width:150px">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_7648876402527094" class="sites-embed" role="navigation"><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-projects" jotId="wuid:gx:10ae433dadbbab13" class="sites-navigation-link">Home</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/Home" jotId="wuid:gx:43582b9d2029d3af" class="sites-navigation-link">Chromium</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-os" jotId="wuid:gx:83df2ab1f8880ba" class="sites-navigation-link">Chromium OS</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_14720868319272995" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Quick links</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/for-testers/bug-reporting-guidelines" class="sites-navigation-link">Report bugs</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/developers/discussion-groups" class="sites-navigation-link">Discuss</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/system/app/pages/sitemap/hierarchy" jotId="wuid:gx:fe204a485666144" class="sites-navigation-link">Sitemap</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19690813310444355" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Other sites</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://blog.chromium.org/" class="sites-navigation-link">Chromium Blog</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://code.google.com/chrome/extensions/" class="sites-navigation-link">Google Chrome Extensions</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="https://developers.google.com/chrome/chrome-frame/" class="sites-navigation-link">Google Chrome Frame</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19695218559354544" class="sites-embed" role="complementary"><h4 class="sites-embed-title"></h4><div class="sites-embed-content sites-embed-content-sidebar-textbox"><div dir="ltr"><span style="font-size:x-small">Except as otherwise </span><a href="http://developers.google.com/site-policies.html#restrictions"><span style="font-size:x-small">noted</span></a><span style="font-size:x-small">, the content of this page is licensed under a </span><a href="http://creativecommons.org/licenses/by/2.5/"><span style="font-size:x-small">Creative Commons Attribution 2.5 license</span></a><span style="font-size:x-small">, and examples are licensed under the </span><a href="http://src.chromium.org/viewvc/chrome/trunk/src/LICENSE" target="_blank"><span style="font-size:x-small">BSD License</span></a><span style="font-size:x-small">.<br /></span></div></div></div>
</td>
<td id="sites-canvas-wrapper">
<div id="sites-canvas" role="main">
<div id="goog-ws-editor-toolbar-container"> </div>
<div xmlns="http://www.w3.org/1999/xhtml" id="title-crumbs" style="">
<A href="/developers" dir="ltr">For Developers</A>‎ &gt; ‎<A href="/developers/design-documents" dir="ltr">Design Documents</A>‎ &gt; ‎<A href="/developers/design-documents/chromium-graphics" dir="ltr">Chromium Graphics // Chrome GPU</A>‎ &gt; ‎
  </div>
<h3 xmlns="http://www.w3.org/1999/xhtml" id="sites-page-title-header" style="" align="left">
<span id="sites-page-title" dir="ltr" tabindex="-1" style="outline: none">Mac Browser Compositor aka Mac Ubercompositor aka Mac Delegated Rendering</span>
</h3>
<div id="sites-canvas-main" class="sites-canvas-main">
<div id="sites-canvas-main-content">
<table xmlns="http://www.w3.org/1999/xhtml" cellspacing="0" class="sites-layout-name-one-column sites-layout-hbox"><tbody><tr><td class="sites-layout-tile sites-tile-name-content-1"><div dir="ltr"><span>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;white-space:pre-wrap;line-height:1.15;background-color:transparent"><font face="arial, sans-serif">On Mac, the terms “browser compositor”, “Ubercompositor”, and “delegated rendering” refer to the same thing. I will try to use “delegated rendering” to refer to this change in this document. This document describes the implementation of delegated rendering on the Mac.</font></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;white-space:pre-wrap;line-height:1.15;background-color:transparent"><font face="arial, sans-serif"><br /></font></span></p><p style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;white-space:pre-wrap;line-height:1.15;background-color:transparent"><font face="arial, sans-serif">Throughout this document, I will try to color-code the data structures and functions by the process that they are in. Things in the <font color="#cc0000">renderer process</font> are red, things in the <font color="#3d85c6">browser process</font> are blue, and things in the <font color="#6aa84f">GPU process</font> are green.</font></span></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-weight:bold;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">Table of Contents:</font></span></p>
<div><span><font face="arial, sans-serif"><br />
</font></span></div>
<div><div class="sites-embed-align-left-wrapping-off"><div class="sites-embed-border-off sites-embed sites-embed-full-width" style="width:100%;"><div class="sites-embed-content sites-embed-type-toc"><div class="goog-toc sites-embed-toc-maxdepth-6"><p>Contents</p><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Delegated-Rendering-in-Aura-Windows-Linux-Chrome-OS-"><strong>1 </strong>Delegated Rendering in Aura (Windows, Linux, Chrome OS)</a></li><li class="goog-toc"><a href="#TOC-Delegated-Rendering-on-Mac"><strong>2 </strong>Delegated Rendering on Mac</a></li><li class="goog-toc"><a href="#TOC-Where-the-Actual-ui::Compositor-Lives-on-Mac"><strong>3 </strong>Where the Actual ui::Compositor Lives on Mac</a></li><li class="goog-toc"><a href="#TOC-Sending-Delegated-Frames-from-the-Renderer-To-the-Browser"><strong>4 </strong>Sending Delegated Frames from the Renderer To the Browser</a></li><li class="goog-toc"><a href="#TOC-Drawing-Delegated-or-any-other-kind-of-Frames-in-the-Browser-Using-IOSurfaces-on-Mac"><strong>5 </strong>Drawing Delegated (or any other kind of) Frames in the Browser Using IOSurfaces on Mac</a></li><li class="goog-toc"><a href="#TOC-Drawing-Delegated-or-any-other-kind-of-Frames-in-the-Browser-Using-CAContexts"><strong>6 </strong>Drawing Delegated (or any other kind of) Frames in the Browser Using CAContexts</a></li><li class="goog-toc"><a href="#TOC-Stalling-Waiting-for-Frames-in-the-Browser"><strong>7 </strong>Stalling/Waiting for Frames in the Browser</a></li></ol></div></div></div></div></div>
<font face="arial, sans-serif"><br />
</font>
<h1 dir="ltr" style="line-height:1.15;margin-top:10pt;margin-bottom:0pt"><a name="TOC-Delegated-Rendering-in-Aura-Windows-Linux-Chrome-OS-"></a><span style="font-size:21px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">Delegated Rendering in Aura (Windows, Linux, Chrome OS)</font></span></h1>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">In Aura, the entire browser window is a single OpenGL surface. Everything that is drawn in that window (including the tab strip, the address bar, the min/max/close buttons) is drawn using OpenGL into that single OpenGL surface. </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><img height="614px;" src="http://www.chromium.org/_/rsrc/1411146836761/developers/design-documents/chromium-graphics/mac-delegated-rendering/aura%20ubercomp.png?attachauth=ANoY7coDQ7EPvQdalcAQZ6pj46RPYd5l2NAdOQ-2oy6elpC-WZA3jjGa5Q82TMQchaENG9_4JwD80CcNouzUc6Dne26KVn2FOlSD1DcTg0CkVdhjSvFPwhKUnEUOLGqkLAjesJZhlDqBTmfyGoqcdyWzXR0SXW2s1DbxvcGgybVbHQjQrsccRazIK7T1YNN5gpUktuiwePB6rdkMAQRv_adh4fCdJMrT86KJUX4GsdTiXeTCKuGzM_ZO2xquvdqnAEplxlTryB03IXxUfm3lsi386s5aQYPTBn9qQKHHnpz-1MR8CXiUeu-_dxOtdSkXkvCQrP1rpOLY&amp;attredirects=0&amp;height=614px;&amp;width=624px;" style="border:none;display:block;margin-right:auto;margin-left:auto;text-align:center" width="624px;" /></span></font></p>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Inside the browser process, inside the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">aura::WindowTreeHost</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">, there exists a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> (which is a wrapper around a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">cc::LayerTreeHost</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">). This </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> generates, via its </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">cc::LayerTreeHost</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">, the actual OpenGL commands to be executed in the GPU process, to produce the pixels that appear in that OpenGL surface, for the whole window.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Inside the renderer process, there exists another </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#cc0000">cc::LayerTreeHost</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> which decides what is to be drawn for the web contents area. Instead of outputting pixels directly (know as “direct rendering”), this </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#cc0000">cc::LayerTreeHost</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> outputs instructions for how to draw those pixels (in the form of a list of textured quads), which it sends the browser process, which adds those quads to the things it will draw inside its </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">In this sense, the renderer has delegated producing actual pixels to the browser process, hence “delegated rendering”, as opposed to “direct rendering”. These concepts of “direct” versus “delegating” are made concrete in the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">cc::Renderer</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> implementations -- there exists a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#cc0000">cc::DelegatingRenderer</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> for delegated rendering, and there exists a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">cc::DirectRenderer</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> for direct rendering (with </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">cc::GLRenderer</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> for OpenGL-accelerated rendering and a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">cc::SoftwareRender</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> for software rendering).</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">Of note is that the browser process’ compositor is a direct renderer, while the renderer process’ compositor is a delegating renderer.</font></span></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-weight:bold;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">Note on power+performance:</font></span></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left:36pt"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">In the Aura case, in the initial implementation (I think, this may be a lie), the renderer process used a direct renderer (rendering to a texture), and then we would draw the resulting image in the browser process’ direct renderer.</font></span></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left:36pt"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">This is bad for performance and power in that it uses up to 2x-3x the memory bandwidth to draw a single frame -- [write pixel in renderer] then [read pixels in browser] then [write pixels in browser] versus just [write pixels in browser]. I say 2x-3x, because both of those pipelines often involve a [read pixels from tile textures] stage, which makes it more 2x than 3x (other work also makes the improvement less dramatic).</font></span></p>
<font face="arial, sans-serif"><br />
</font>
<h1 dir="ltr" style="line-height:1.15;margin-top:10pt;margin-bottom:0pt"><a name="TOC-Delegated-Rendering-on-Mac"></a><span style="font-size:21px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">Delegated Rendering on Mac</font></span></h1>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">On Mac, only the web contents part of the browser window is an OpenGL surface drawn by Chrome. The rest of the window is drawn using Cocoa, the native Mac UI API.</font></span></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif"><img height="614px;" src="http://www.chromium.org/_/rsrc/1411146839890/developers/design-documents/chromium-graphics/mac-delegated-rendering/mac%20ubercomp.png?attachauth=ANoY7crJMAWOklBf4VkTBNwUk38G-zmGsHCtAR0K5lsC-IUAfBax8YNN-pb_WWkmK3cmFfUR-vHEJUxkPgrFgBRuOaZWf210i_F-adh7X3dUSipW0KQLnlEU_o2cfI0wzjB7eq7-FH7A_tw1aoyjxjH6mrpaNcHvZL-58U6c62wTgQAsNmomGuB141ouo6chtLqu_XN2-CzDmoWDG4nPLdu98HQvHMfjepWSSrTKvHElMp4HFFb5SQmqDYGns-yrPZxj04to-nu1OT5FiUhZvFYilroqJSgoXNbO3T6gXZIwUIp_FumbI-4%3D&amp;attredirects=0&amp;height=614px;&amp;width=624px;" style="border:none;display:block;margin-right:auto;margin-left:auto;text-align:center" width="624px;" /></font></span></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">This is because we don’t (yet) have a way to draw a native-feeling Mac UI using Aura. There is a project underway to do this (starting with non-browser-window UI such as task manager and app launcher).</font></span></p>
<font face="arial, sans-serif"><br />
</font>
<h1 dir="ltr" style="line-height:1.15;margin-top:10pt;margin-bottom:0pt"><a name="TOC-Where-the-Actual-ui::Compositor-Lives-on-Mac"></a><span style="font-size:21px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">Where the Actual ui::Compositor Lives on Mac</font></span></h1>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Recall that in Aura, the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">aura::WindowTreeHost</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> had the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> which would draw the web contents (among other things). On Mac, we don’t have any such analogous place to put the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Creating and destroying a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> is very expensive (you have to set up a GPU command buffer, among other beasts), and keeping one around isn’t cheap either.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">One option would be that we could just hang the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> off of the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostViewCocoa</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> (the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">NSView</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> that displays web contents), but this would be one-or-more-</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">ui::Compositor</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">s-per-tab, which would make creating and destroying tabs slow, and make tabs bloated.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Instead there is a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">BrowserCompositorCALayerTree</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> class</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">, which owns the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> and a sub-tree of </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">CALayer</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">s which draw the contents of the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">. This class can be recycled across different </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">NSView</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">s as needed. There is at most one spare instance of </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">BrowserCompositorCALayerTree</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> kept around for recycling.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">When a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostViewCocoa</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> is made visible, it creates a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">BrowserCompositorViewMac</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">, which finds or creates a spare </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">BrowserCompositorCALayerTree</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">, and binds to that. The binding involves adding the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">CALayer</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">s of the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">BrowserCompositorCALayerTree</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> to the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">CALayer</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> tree backing the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">NSView</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">. When the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostViewCocoa</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> is made invisible, it frees its </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">BrowserCompositorViewMac</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">, which allows the bound </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">BrowserCompositorCALayerTree</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> to either hang out and try to be recycled, or delete itself.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">There also exists a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">BrowserCompositorViewMacPlaceholder</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> class, which acts as a hint that a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">BrowserCompositorCALayerTree</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> may be needed soon, so keep one around to recycle.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<h1 dir="ltr" style="line-height:1.15;margin-top:10pt;margin-bottom:0pt"><a name="TOC-Sending-Delegated-Frames-from-the-Renderer-To-the-Browser"></a><span style="font-size:21px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">Sending Delegated Frames from the Renderer To the Browser</font></span></h1>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">This is the sequence of steps by which a frame from the renderer is send to the browser compositor, and how the frame is acknowledged.</font></span></p>
<font face="arial, sans-serif"><br />
</font>
<ol style="margin-top:0pt;margin-bottom:0pt"><li dir="ltr" style="list-style-type:decimal;font-size:15px;vertical-align:baseline;background-color:transparent">
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">When the renderer has a new frame that it wants drawn (maybe the cat is on top of the Roomba in this one), it sends a </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">ViewHostMsg_SwapCompositorFrame</span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> from the <font color="#cc0000">content::CompositorOutputSurface</font> in the renderer process to the browser process’s </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostImpl</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">.</span></font></p>
</li>
<li dir="ltr" style="list-style-type:decimal;font-size:15px;vertical-align:baseline;background-color:transparent">
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">The browser process’s </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostImpl</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> then takes the frame information out of this message and passes to to its </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostView</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">.</span></font></p>
</li>
<li dir="ltr" style="list-style-type:decimal;font-size:15px;vertical-align:baseline;background-color:transparent">
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">The </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostViewMac</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> and </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostViewAura</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> have a </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">DelegatedFrameHost</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">, which acts as an interface between the </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostView</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">’s </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> and the renderer. The frame information is passed to this </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">DelegatedFrameHost</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">.</span></font></p>
</li>
<ol style="margin-top:0pt;margin-bottom:0pt"><li dir="ltr" style="list-style-type:lower-alpha;font-size:15px;vertical-align:baseline;background-color:transparent">
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">The </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostViewAura</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">’s </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> is the </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> of the </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostViewAura</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">’s </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">aura::Window</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">’s </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">aura::WindowTreeHost</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> (if it exists).</span></font></p>
</li>
<li dir="ltr" style="list-style-type:lower-alpha;font-size:15px;vertical-align:baseline;background-color:transparent">
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Of note is that the interface between the </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostView</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> and its </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> isn’t as explicit as it could be. The </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> can change at any time, and the </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">DelegatedFrameHost</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> only finds out about this by when it asks for the </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> from the </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostView</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> and gets a different value than it got before. There are lots of bugs lingering here -- this should be set explicitly (see crbug.com/403011).</span></font></p>
</li>
<li dir="ltr" style="list-style-type:lower-alpha;font-size:15px;vertical-align:baseline;background-color:transparent">
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Also of note is that </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostViewAndroid</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> has a verbatim copy of a lot of the code in </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">DelegatedFrameHost</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">. We should consider making </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetHostViewAndroid</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> use </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">DelegatedFrameHost</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">.</span></font></p>
</li>
</ol>
<li dir="ltr" style="list-style-type:decimal;font-size:15px;vertical-align:baseline;background-color:transparent">
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">The </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">DelegatedFrameHost</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> tells the </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> to draw a new frame with the updated contents.</span></font></p>
</li>
<li dir="ltr" style="list-style-type:decimal;font-size:15px;vertical-align:baseline;background-color:transparent">
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">When the </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> does a commit (a step in the process of drawing a new frame), </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">DelegatedFrameHost::SendDelegatedFrameAck</font></span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> is called, which sends a </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">ViewMsg_SwapCompositorFrameAck</span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> to the renderer process' <font color="#cc0000">CompositorOutputSurface::OnSwapAck</font>, telling the renderer that it can produce another frame now (perhaps the cat is wearing a shark costume in this one).</span></font></p>
</li>
</ol>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Note that the way that the browser can tell the renderer “hey, you’re producing frames too fast for me to draw them” is by delaying when it does a commit, in the last step. This means that if the browser’s </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">ui::Compositor</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> stalls, then the renderer’s compositor will stop producing delegated frames.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<h1 dir="ltr" style="line-height:1.15;margin-top:10pt;margin-bottom:0pt"><a name="TOC-Drawing-Delegated-or-any-other-kind-of-Frames-in-the-Browser-Using-IOSurfaces-on-Mac"></a><span style="font-size:21px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">Drawing Delegated (or any other kind of) Frames in the Browser Using IOSurfaces on Mac</font></span></h1>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">After the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> does a commit in the above sequence of events, the compositor issues a bunch of OpenGL commands to draw things, followed by a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">glSwapBuffers</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">. This describes that path.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">This only describes the IOSurface and CoreAnimation-based approach.</font></span></p>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><br /></span></font></p><font face="arial, sans-serif"><ol style="list-style-type:decimal;text-align:start;text-indent:0px;margin-top:0pt;margin-bottom:0pt;background-color:rgb(255,255,255)"><li><span style="font-size:15px;line-height:1.15;white-space:pre-wrap;background-color:transparent">While drawing a frame, the <font color="#3d85c6">ui::Compositor</font> is rendering into an IOSurface-backed texture</span></li><ul><li><font face="arial, sans-serif" style="line-height:1.15;font-size:15px;background-color:transparent"><span style="white-space:pre-wrap">This is via an FBO, allocated and set up by </span></font><span style="line-height:1.15;font-size:15px;white-space:pre-wrap;background-color:transparent"><font color="#6aa84f">ImageTransportSurfaceFBO</font> using <font color="#6aa84f">IOSurfaceStorageProvider</font></span></li></ul><li><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">When done drawing the frame, the </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">’s </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">cc::LayerTreeHostImpl</font></span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">’s </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">cc::OutputSurface</font></span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> will issue a </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">glSwapBuffers</span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> to the GPU process.</span></li><ul><li><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">The </span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">’s </span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">cc::LayerTreeHost</font></span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> will now be blocked until its </span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">cc::OutputSurface</font></span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> has its </span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">OnSwapBuffersComplete</font></span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> method called.</span></li></ul><li><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">The command buffer will decode this and end up calling </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#6aa84f">ImageTransportSurfaceFBO::SwapBuffers</font></span></li><ul><li><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">This will send the IOSurface's ID to the browser process in a </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">GpuHostMsg_AcceleratedSurfaceBuffersSwapped</span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> message.</span></li></ul><li><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Processing of the </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">SwapBuffers</span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> in the command stream in the GPU process will result in </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">BrowserCompositorOutputSurface::OnSwapBuffersComplete</font></span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> being called in the browser process (this is done by the GpuControl::Echo mechanism).</span></li><ul><li><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">On non-Mac platforms, this results in the </span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">cc::OutputSurface</font></span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> being un-blocked, un-blocking the </span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">. This is undesirable on Mac, because this is insufficiently sensitive to GPU back-pressure.</span></li><li><font face="arial, sans-serif" style="line-height:1.15;font-size:15px;background-color:transparent"><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">To avoid this on Mac, the Mac will not call the super-class' <font color="#3d85c6">cc::OutputSurface::OnSwapBuffersComplete</font> inside </span></font><span style="line-height:1.15;font-size:15px;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">BrowserCompositorOutputSurface::OnSwapBuffersComplete</font>.</span></li></ul><li><font face="arial, sans-serif" style="line-height:1.15;font-size:15px;background-color:transparent"><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">The </span></font><span style="line-height:1.15;font-size:15px;white-space:pre-wrap;background-color:transparent">GpuHostMsg_AcceleratedSurfaceBuffersSwapped IPC </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">will be received by </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">GpuProcessHostUIShim</font></span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> in the browser process</span></li><ul><li><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Of note is that this goes through the </span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetResizeHelper</font></span><span style="font-family:arial,sans-serif;line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">, so it will be able to be received even during a live resize.</span></li></ul><li><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">The </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">GpuProcessHostUIShim</font></span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> will pass this to the static method </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">BrowserCompositorViewMac::GotAcceleratedFrame</font></span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">. This will look up the </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">BrowserCompositorCALayerTree</font></span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> corresponding to the output surface ID.</span></li><ul><li><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">This call to </span><span style="font-size:15px;line-height:17.25px;white-space:pre-wrap"><font color="#3d85c6">BrowserCompositorCALayerTree::GotAcceleratedIOSurfaceFrame</font> will </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">create (if not created already) an </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">IOSurfaceLayer</font></span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> (a sub-class of </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">CAOpenGLLayer</font></span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">) and tell it that it needs to draw via <font color="#3d85c6">-[IOSurfaceLayer setNeedsDisplay:YES]</font> or <font color="#3d85c6">-[IOSurfaceLayer setAsynchronous:YES]</font>.</span></li><li><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">It will also open the IOSurface ID that was sent from the GPU process and create an OpenGL texture backed by it.</span></li></ul><li><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">At some point the system will call <font color="#3d85c6">-[</font></span><font color="#3d85c6"><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">IOSurfaceLayer</span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> </span></font><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">displayInCGLContext]</font>, which is where the IOSurface is actually drawn</span></li><ul><li><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">The OpenGL texture allocated in the above step is drawn here as a full-viewport quad</span></li><li><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">After this, the </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">cc::OutputSurface</font></span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> is un-blocked, allowing the </span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="line-height:1.15;font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> to produce more frames (which, in turn, allows the renderer to produce more frames).</span></li></ul></ol></font></span><span><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><br /></p>
<p style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-family:arial,sans-serif;font-size:15px;font-weight:bold;white-space:pre-wrap;line-height:1.15;background-color:transparent">Notes on power+performance:</span></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left:36pt"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">Note that we draw all of the content into the IOSurface-backed FBO, and then drew that FBO to the screen in the browser process. This is reduction in performance and increase in GPU power consumption.</font></span></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left:36pt"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">It is possible to draw directly to the browser process using the CAContext (aka CARemoteLayer API), discussed later.</font></span></p>
<font face="arial, sans-serif"><div><span><font face="arial, sans-serif"><br /></font></span></div></font></span><p style="font-size:13.3333330154419px;line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><b>Mechanism of GPU back-pressure:</b></span></font></p><p dir="ltr" style="font-size:13.3333330154419px;line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><br /></span></font></p><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><p style="font-size:13.3333330154419px;line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Note that between steps 6 and 7 above, we told CoreAnimation “hey, we’re a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">CAOpenGLLayer</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> and this is crazy, but we have a new frame, so call our draw method maybe”. If the GPU is really busy, it may be more than one vsync interval before the draw method is called. It is by this mechanism that back-pressure is applied from the GPU to the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">, to the renderer.</span></font></p></blockquote><font face="arial, sans-serif" style="font-size:13.3333330154419px"><br /></font><span>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-weight:bold;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">Draw methods never being called:</font></span></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left:36pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">This back-pressure mechanism (the delay between steps 6 and 7) can sometimes mis-fire. Sometimes we just never end up getting the draw method called, just by a fluke. As a result, there is a </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">DelayTimer</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> set which fires 1/6th of a second after we ask CoreAnimation to draw us. If we haven’t drawn after this timer fires, we un-block the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">cc::OutputSurface</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> anyway.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-weight:bold;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">Synchronous versus asynchronous drawing:</font></span></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left:36pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">The way that we say “please draw this </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">IOSurfaceLayer or ImageTransportLayer</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">” is not by calling -[CAOpenGLLayer </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">setNeedsDisplay]</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">, but rather by calling -[CAOpenGLLayer </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">setAsynchronous:YES]</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">. This results in CoreAnimation asking us, at (about) every vsync, “hey, do you have content ready for me to draw?”. This “CoreAnimation pulls from us” rather than “we push to CoreAnimation” is the best way to get smooth animation.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left:36pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">The drawback is that we get a callback every vsync. If we don’t have any content, then this is just idle CPU cycles (and it can add up to a lot). To compensate for this, if we tell CoreAnimation “sorry, we don’t have new content ready for you” (in the -[CAOpenGLLayer </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">canDrawInCGLContext]</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> function) a certain number of times in a row, we switch to the -[CAOpenGLLayer </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">setAsynchronous:NO]</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> mode.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt;margin-left:36pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">This switching the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">isAsynchronous</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> mode can cause problems when dynamically changing the content scale of the layer (no idea why, should probably file a Radar, cause this reproduces with a reduced test case), so, when we have to change the content scale of the layer, we destroy and re-create the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">CAOpenGLLayer</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<h1 dir="ltr" style="line-height:1.15;margin-top:10pt;margin-bottom:0pt"><a name="TOC-Drawing-Delegated-or-any-other-kind-of-Frames-in-the-Browser-Using-CAContexts"></a><span style="font-size:21px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">Drawing Delegated (or any other kind of) Frames in the Browser Using CAContexts</font></span></h1>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">This is the mechanism by which we can draw directly into a CALayer in the GPU process, and have the content appear in the browser process.</font></span></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">An API for this was introduced in 10.7 (the CARemoteLayer API), but was broken in 10.9. The replacement API (CAContext) was reverse-engineered, and appears to continue to work in 10.10.</font></span></p>
<font face="arial, sans-serif"><br />
</font>
<p style="margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;line-height:17.25px;white-space:pre-wrap">The sequence by which frames are drawn using CAContexts is as follows.</span></font></p><ol><li><span style="font-size:15px;line-height:17.25px;white-space:pre-wrap;font-family:arial,sans-serif;background-color:transparent">While drawing a frame, the <font color="#3d85c6">ui::Compositor</font> is rendering (via its command buffer) into an OpenGL texture.</span></li><ul><li><span style="font-size:15px;line-height:17.25px;font-family:arial,sans-serif">This is via an FBO, allocated and set up by <font color="#6aa84f" style="background-color:rgb(255,255,255)">ImageTransportSurfaceFBO</font> using <font color="#6aa84f" style="background-color:transparent">CALayerStorageProvider</font></span></li></ul><li><span style="font-family:arial,sans-serif;font-size:15px;line-height:17.25px;white-space:pre-wrap;background-color:transparent">When done drawing the frame, the <font color="#3d85c6">ui::Compositor</font>’s <font color="#3d85c6">cc::LayerTreeHostImpl</font>’s <font color="#3d85c6">cc::OutputSurface</font> will issue a glSwapBuffers to the GPU process.</span></li><ul><li><span style="font-size:15px;line-height:17.25px;font-family:arial,sans-serif;background-color:transparent">The <font color="#3d85c6">ui::Compositor</font>’s <font color="#3d85c6">cc::LayerTreeHost</font> will now be blocked until its <font color="#3d85c6">cc::OutputSurface</font> has its <font color="#3d85c6">OnSwapBuffersComplete</font> method called.</span></li></ul><li><span style="font-family:arial,sans-serif;font-size:15px;line-height:17.25px;white-space:pre-wrap;background-color:transparent">The command buffer will decode this and end up calling <font color="#6aa84f">ImageTransportSurfaceFBO::SwapBuffers</font></span></li><ul><li><span style="font-size:15px;line-height:17.25px;font-family:arial,sans-serif;background-color:transparent">This will create (if not created yet) a <font color="#6aa84f">CAContext</font> and <font color="#6aa84f">ImageTransportLayer</font> (a subclass of <font color="#6aa84f">CAOpenGLLayer</font>), and will tell the <font color="#6aa84f">ImageTransportLayer</font> to draw via <font color="#6aa84f">-[ImageTransportLayer setNeedsDisplay]</font> or <font color="#6aa84f">-[ImageTransportLayer setAsynchronous:YES]</font>.</span></li></ul><li><span style="font-family:arial,sans-serif;font-size:15px;line-height:17.25px;white-space:pre-wrap;background-color:transparent">Processing of the SwapBuffers in the command stream in the GPU process will result in <font color="#3d85c6">BrowserCompositorOutputSurface::OnSwapBuffersComplete</font> being called in the browser process (this is done by the GpuControl::Echo mechanism).</span></li><ul><li><span style="font-size:15px;line-height:17.25px;font-family:arial,sans-serif;background-color:transparent">On non-Mac platforms, this results in the <font color="#3d85c6">cc::OutputSurface</font> being un-blocked, un-blocking the <font color="#3d85c6">ui::Compositor</font>. This is undesirable on Mac, because this is insufficiently sensitive to GPU back-pressure.</span></li><li><span style="font-size:15px;line-height:17.25px;font-family:arial,sans-serif;background-color:transparent">To avoid this on Mac, the Mac will not call the super-class' <font color="#3d85c6">cc::OutputSurface::OnSwapBuffersComplete</font> inside <font color="#3d85c6">BrowserCompositorOutputSurface::OnSwapBuffersComplete</font>.</span></li></ul><li><span style="font-family:arial,sans-serif;font-size:15px;line-height:17.25px;white-space:pre-wrap;background-color:transparent">At some point the system will call <font color="#6aa84f">-[ImageTransportSurfaceLayer displayInCGLContext]</font> in the GPU process</span></li><ul><li><span style="font-size:15px;line-height:17.25px;font-family:arial,sans-serif;background-color:transparent">The OpenGL texture that was drawn to is drawn here as a full-viewport quad</span></li><li><span style="font-size:15px;line-height:17.25px;font-family:arial,sans-serif;background-color:transparent">After this, the GPU process will send the CAContext’s ID to the browser process in a GpuHostMsg_AcceleratedSurfaceBuffersSwapped message.</span></li></ul><li><span style="font-family:arial,sans-serif;font-size:15px;line-height:17.25px;white-space:pre-wrap;background-color:transparent">The GpuHostMsg_AcceleratedSurfaceBuffersSwapped IPC will be received by <font color="#3d85c6">GpuProcessHostUIShim</font> in the browser process</span></li><ul><li><span style="font-size:15px;line-height:17.25px;font-family:arial,sans-serif;background-color:transparent">Of note is that this goes through the <font color="#3d85c6">RenderWidgetResizeHelper</font>, so it will be able to be received even during a live resize.</span></li></ul><li><span style="font-family:arial,sans-serif;font-size:15px;line-height:17.25px;white-space:pre-wrap;background-color:transparent">The <font color="#3d85c6">GpuProcessHostUIShim</font> will pass this to the static method <font color="#3d85c6">BrowserCompositorViewMac::GotAcceleratedFrame</font>. This will look up the <font color="#3d85c6">BrowserCompositorCALayerTree</font> corresponding to the output surface ID.</span></li><ul><li><span style="font-size:15px;line-height:17.25px;font-family:arial,sans-serif;background-color:transparent">This call to <font color="#3d85c6">BrowserCompositorCALayerTree::GotAcceleratedCAContextFrame</font> will create a <font color="#3d85c6">CALayer</font> from the CAContext ID, if it has not been done already, which will make the frame appear on the screen (if this has been done already, then nothing needs to be done to get the content to appear on the screen.</span></li><li><span style="font-size:15px;line-height:17.25px;font-family:arial,sans-serif;background-color:transparent">Finally, the <font color="#3d85c6">cc::OutputSurface</font> is un-blocked, allowing the <font color="#3d85c6">ui::Compositor</font> to produce more frames (which, in turn, allows the renderer to produce more frames).</span></li></ul></ol><p style="margin-top:0pt;margin-bottom:0pt"><br /></p>
<h1 dir="ltr" style="line-height:1.15;margin-top:10pt;margin-bottom:0pt"><a name="TOC-Stalling-Waiting-for-Frames-in-the-Browser"></a><span style="font-size:21px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font face="arial, sans-serif">Stalling/Waiting for Frames in the Browser</font></span></h1>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">There are some times that the browser will want to pause for frames from the renderer. For instance, when resizing, we want to make sure that we do not allow the window to complete resizing to a new size until it has content for that size. This is accomplished by pumping a specialized nested run-loop which runs all tasks posted by the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">ui::Compositor</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> and handles selected IPCs (the ones mentioned in this document, among others) from the GPU process and the renderer process.</span></font></p>
<font face="arial, sans-serif"><br />
</font>
<p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font face="arial, sans-serif"><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">This restricted nested run loop is pumped inside the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">NSView</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">’s </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">setFrameSize</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> in the </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">WasShown</span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> function as well. There is substantial documentation of its behavior next to the definition of the  </span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"><font color="#3d85c6">RenderWidgetResizeHelper</font></span><span style="font-size:15px;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> class.</span></font></p>
<br />
</span><span>
<div></div>
<br />
</span></div></td></tr></tbody></table>
</div> 
</div> 
<div id="sites-canvas-bottom-panel">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-subpages"> </div>
<div id="sites-attachments-container">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-attachments">
<div class="sites-attachments-row"><div class="sites-attachments-icon" style="left:0px;"><span aria-label="Attachments" title="Attachments"><div class="sites-translucent sites-symbol" aria-hidden="true">Č</div></span></div><div id="sites-attachments-update-div" class="sites-attachments-inner-div" style="display:none;"><span class="sites-attachments-update-icon"><img src="http://www.gstatic.com/sites/p/56e332/system/app/images/spinner.gif" /></span><div class="sites-attachments-update-text">Updating...</div></div></div><div class="sites-attachments-separator"></div>
<div id="attachment-wuid:gx:25464c9536c0223e"><div class="sites-attachments-row"><div class="sites-attachments-icon sites-attachments-icon-accessible" style="left:5px"><div class="sites-translucent sites-symbol" aria-label="Image" title="Image">ą</div></div><div class="sites-attachments-inner-div"><div class="sites-attachments-name"><a href="/developers/design-documents/chromium-graphics/mac-delegated-rendering/aura%20ubercomp.png?attredirects=0">aura ubercomp.png</a> <div class="sites-translucent">(104k)</div></div><div class="sites-attachments-author">Dana Jansens, <div class="sites-translucent">Sep 19, 2014, 10:13 AM</div></div></div><div class="sites-attachments-version sites-attachments-version-accessible"><a href="/system/app/pages/admin/revisions?wuid=wuid:gx:25464c9536c0223e">v.1</a></div><div id="attachment-download-wuid:gx:25464c9536c0223e" class="sites-attachments-icon sites-attachments-icon-accessible" style="right:0px"><a href="/developers/design-documents/chromium-graphics/mac-delegated-rendering/aura%20ubercomp.png?attredirects=0&amp;d=1" aria-label="Download aura ubercomp.png" title="Download" role="button"><span class="sites-symbol" aria-hidden="true">ď</span></a></div></div><div class="sites-attachments-separator"></div></div>
<div id="attachment-wuid:gx:6881d1c330be282a"><div class="sites-attachments-row"><div class="sites-attachments-icon sites-attachments-icon-accessible" style="left:5px"><div class="sites-translucent sites-symbol" aria-label="Image" title="Image">ą</div></div><div class="sites-attachments-inner-div"><div class="sites-attachments-name"><a href="/developers/design-documents/chromium-graphics/mac-delegated-rendering/mac%20ubercomp.png?attredirects=0">mac ubercomp.png</a> <div class="sites-translucent">(128k)</div></div><div class="sites-attachments-author">Dana Jansens, <div class="sites-translucent">Sep 19, 2014, 10:13 AM</div></div></div><div class="sites-attachments-version sites-attachments-version-accessible"><a href="/system/app/pages/admin/revisions?wuid=wuid:gx:6881d1c330be282a">v.1</a></div><div id="attachment-download-wuid:gx:6881d1c330be282a" class="sites-attachments-icon sites-attachments-icon-accessible" style="right:0px"><a href="/developers/design-documents/chromium-graphics/mac-delegated-rendering/mac%20ubercomp.png?attredirects=0&amp;d=1" aria-label="Download mac ubercomp.png" title="Download" role="button"><span class="sites-symbol" aria-hidden="true">ď</span></a></div></div><div class="sites-attachments-separator"></div></div>
<div style="height: 10px"></div>
</div>
</div>
<a xmlns="http://www.w3.org/1999/xhtml" name="page-comments"></a>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-comments"><div class="sites-comment-docos-wrapper"><div class="sites-comment-docos"><div class="sites-comment-docos-background"></div><div class="sites-comment-docos-header"><div class="sites-comment-docos-header-title">Comments</div></div><div id="sites-comment-docos-pane" class="sites-comment-docos-pane"></div></div></div></div>
</div>
</div> 
</td> 
</tr>
</table> 
</div> 
</div> 
<div id="sites-chrome-footer-wrapper">
<div id="sites-chrome-footer-wrapper-inside">
<div id="sites-chrome-footer">
</div>
</div>
</div>
</div> 
</div> 
<div id="sites-chrome-adminfooter-container">
<div xmlns="http://www.w3.org/1999/xhtml" class="sites-adminfooter" role="navigation"><p><a class="sites-system-link" href="https://www.google.com/a/UniversalLogin?service=jotspot&amp;continue=http://sites.google.com/a/chromium.org/dev/developers/design-documents/chromium-graphics/mac-delegated-rendering">Sign in</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/recentChanges">Recent Site Activity</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/reportAbuse" target="_blank">Report Abuse</a><span aria-hidden="true">|</span><a class="sites-system-link" href="javascript:;" onclick="window.open(webspace.printUrl)">Print Page</a><span aria-hidden="true">|</span><span class="sites-system-link">Powered By</span> <b class="powered-by"><a href="http://sites.google.com">Google Sites</a></b></p></div>
</div>
</div> 
</div> 
<div id="sites-chrome-onebar-footer">
</div>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('sjl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" src="http://www.gstatic.com/sites/p/56e332/system/js/jot_min_view__en.js"></script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('jl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml">
      
          sites.core.Analytics.createTracker();
          sites.core.Analytics.trackPageview();
        
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
                    sites.Searchbox.initialize(
                        'sites-searchbox-search-button',
                        {"object":[]}['object'],
                        'search-site',
                        {"label":"Configure search options...","url":"/system/app/pages/admin/settings"});
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
      gsites.HoverPopupMenu.createSiteDropdownMenus('sites-header-nav-dropdown', false);
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("7648876402527094", "Navigation", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_7648876402527094');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("14720868319272995", "Quick links", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_14720868319272995');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("19690813310444355", "Other sites", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_19690813310444355');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
              new sites.CommentPane('//docs.google.com/comments/d/AAHRpnXvrAwjAfmld0ObrebBiGRq9onvhc3KOQ_S0j5uk4wrcIPiYqqaV8zDztqCk1wjeP1e9_1AcUUSjSK4AI6QJwWnSOSla7OqChh9ys4INyzKqjXPZx1fyvAcqk05P4S_Vtzhihq3z/api/js?anon=true',
                  false, false);
            </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
  setTimeout(function() {
    var fingerprint = gsites.date.TimeZone.getFingerprint([]);
    gsites.Xhr.send('http://www.chromium.org/_/tz', null, null, 'GET', null, null, { afjstz: fingerprint });
  }, 500);
</script>
<script xmlns="http://www.w3.org/1999/xhtml">
                    window.onload = function() {
                      if (false) {
                        JOT_setMobilePreview();
                      }
                      var loadTimer = window.jstiming.load;
                      loadTimer.tick("ol");
                      loadTimer["name"] = "load," + webspace.page.type + ",user_page";
                      window.jstiming.report(loadTimer, {}, 'http://csi.gstatic.com/csi');
                    }
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
        JOT_insertAnalyticsCode(false,
            false);
      </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    var maestroRunner = new gsites.pages.view.SitesMaestroRunner(
        webspace, "en");
    maestroRunner.initListeners();
    maestroRunner.installEditRender();
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
  //<![CDATA[
    // Decorate any fastUI buttons on the page with a class of 'goog-button'.
    if (webspace.user.hasWriteAccess) {
      JOT_decorateButtons();
    }

    // Fires delayed events.
    (function() {
      JOT_fullyLoaded = true;
      var delayedEvents = JOT_delayedEvents;
      for (var x = 0; x < delayedEvents.length; x++) {
        var event = delayedEvents[x];
        JOT_postEvent(event.eventName, event.eventSrc, event.payload);
      }
      JOT_delayedEvents = null;
      JOT_postEvent('pageLoaded');
    })();
  //]]>
</script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    JOT_postEvent('decorateGvizCharts');
  </script>
<script type="text/javascript">
          JOT_setupPostRenderingManager();
        </script>
<script type="text/javascript">
          JOT_postEvent('renderPlus', null, 'sites-chrome-main');
        </script>
<div id="server-timer-div" style="display:none"> </div>
<script type="text/javascript">
          window.jstiming.load.tick('render');
          JOT_postEvent('usercontentrendered', this);
        </script>
</body>
</html>
