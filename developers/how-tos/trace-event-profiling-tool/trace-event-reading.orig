<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/WebPage">
<head>
<meta http-equiv="X-UA-Compatible" content="chrome=1" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var e="wtsrt_",g="tbsd_",h="tbnd_",k="start",l="_wtsrt",m="_tbnd",n="CSI/";(function(){function f(a){this.t={};this.tick=function(a,c,b){this.t[a]=[void 0!=b?b:(new Date).getTime(),c];if(void 0==b)try{window.console.timeStamp(n+a)}catch(d){}};this.tick(k,null,a)}var a;window.performance&&(a=window.performance.timing);var p=a?new f(a.responseStart):new f;window.jstiming={Timer:f,load:p};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick(l,void 0,c),b.tick(e,l,d),b.tick(g,e))}try{a=null,
window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick(m,void 0,window.chrome.csi().startE),b.tick(h,m,c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick(m,void 0,window.external.startE),b.tick(h,m,c))),a&&(window.jstiming.pt=a)}catch(q){}})(); })()
</script>
<link rel="shortcut icon" href="/_/rsrc/1354323194313/favicon.ico" type="image/x-icon" />
<link rel="apple-touch-icon" href="http://www.gstatic.com/sites/p/56e332/system/app/images/apple-touch-icon.png" type="image/png" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var d="",g="__duration__",h="function";function k(c){return document.getElementById(c)}window.byId=k;function l(c){return c.replace(/^\s+|\s+$/g,d)}window.trim=l;var m=[],n=0;window.JOT_addListener=function(c,a,b){var e=new String(n++);c={eventName:c,handler:a,compId:b,key:e};m.push(c);return e};window.JOT_removeListenerByKey=function(c){for(var a=0;a<m.length;a++)if(m[a].key==c){m.splice(a,1);break}};
window.JOT_removeAllListenersForName=function(c){for(var a=0;a<m.length;a++)m[a].eventName==c&&m.splice(a,1)};window.JOT_postEvent=function(c,a,b){var e={eventName:c,eventSrc:a||{},payload:b||{}};if(window.JOT_fullyLoaded)for(a=m.length,b=0;b<a&&b<m.length;b++){var f=m[b];f&&f.eventName==c&&(e.listenerCompId=f.compId||d,(f=typeof f.handler==h?f.handler:window[f.handler])&&f(e))}else window.JOT_delayedEvents.push({eventName:c,eventSrc:a,payload:b})};window.JOT_delayedEvents=[];
window.JOT_fullyLoaded=!1;window.JOT_formatRelativeToNow=function(c,a){var b=((new Date).getTime()-c)/6E4;if(1440<=b||0>b)return null;var e=0;60<=b&&(b/=60,e=2);2<=b&&e++;return a?window.JOT_siteRelTimeStrs[e].replace(g,Math.floor(b)):window.JOT_userRelTimeStrs[e].replace(g,Math.floor(b))}; })()
</script>
<script>

  

  var breadcrumbs = [{"path":"/developers","deleted":false,"title":"For Developers","dir":"ltr"},{"path":"/developers/how-tos","deleted":false,"title":"How-Tos","dir":"ltr"},{"path":"/developers/how-tos/trace-event-profiling-tool","deleted":false,"title":"The Trace Event Profiling Tool (about:tracing)","dir":"ltr"},{"path":"/developers/how-tos/trace-event-profiling-tool/trace-event-reading","deleted":false,"title":"Understanding about:tracing results","dir":"ltr"}];
  var JOT_clearDotPath = 'http://www.gstatic.com/sites/p/56e332/system/app/images/cleardot.gif';

  
  var JOT_userRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

  
  

  

  var webspace = {"enableAnalytics":true,"pageSharingId":"jotspot_page","enableUniversalAnalytics":false,"sharingPolicy":"OPENED_WITH_INDICATOR","siteTitle":"The Chromium Projects","isStartPageEnabled":true,"adsensePublisherId":null,"features":{"languageSelectDefaultTextSetToDefault":true,"validateClientGvizDataSourceUrls":true,"moreMobileStyleImprovements":true,"newInsertMenuIcons":true,"accessibleSortingButtons":true,"domainAnalyticsInGAOnly":true,"noCaptcha":true,"fileCabinetScreenReaderFix":true,"updatedTosAndPrivacyLinks":null,"pageDrafts":false,"mobileOrientationFix":true,"plusBadge":false,"pdfEmbedSupport":false,"jsClickFix":true},"isPublic":true,"isConsumer":false,"serverFlags":{"cajaBaseUrl":"//www.gstatic.com/caja","cajaDebugMode":false},"onepickBaseUrl":"https://docs.google.com","domainAnalyticsAccountId":"","plusPageId":"","signInUrl":"https://www.google.com/a/SelectSession?continue\u003dhttp://sites.google.com/a/chromium.org/dev/developers/how-tos/trace-event-profiling-tool/trace-event-reading\u0026service\u003djotspot","analyticsAccountId":"UA-5484340-1","scottyUrl":"/_/upload","homePath":"/","siteNoticeUrlEnabled":null,"plusPageUrl":"","adsensePromoClickedOrSiteIneligible":true,"csiReportUri":"http://csi.gstatic.com/csi","sharingId":"jotspot","termsUrl":"//www.google.com/intl/en/policies/terms/","gvizVersion":1,"editorResources":{"sitelayout":["http://www.gstatic.com/sites/p/56e332/system/app/css/sitelayouteditor.css"],"text":["http://www.gstatic.com/sites/p/56e332/system/js/codemirror.js","http://www.gstatic.com/sites/p/56e332/system/app/css/codemirror_css.css","http://www.gstatic.com/sites/p/56e332/system/js/trog_edit__en.js","http://www.gstatic.com/sites/p/56e332/system/app/css/trogedit.css","/_/rsrc/1441580320000/system/app/css/editor.css","http://www.gstatic.com/sites/p/56e332/system/app/css/codeeditor.css","/_/rsrc/1441580320000/system/app/css/camelot/editor-jfk-wlb.css"]},"sharingUrlPrefix":"/_/sharing","isAdsenseEnabled":true,"domain":"chromium.org","baseUri":"","name":"dev","siteTemplateId":false,"siteNoticeRevision":null,"siteNoticeUrlAddress":null,"siteNoticeMessage":null,"page":{"isRtlLocale":false,"canDeleteWebspace":null,"isPageDraft":null,"parentPath":"/developers/how-tos/trace-event-profiling-tool","parentWuid":"wuid:gx:33634d51f825446f","siteLocale":"en","timeZone":"America/Los_Angeles","type":"text","title":"Understanding about:tracing results","locale":"en","wuid":"wuid:gx:7cea0ce3547999cc","revision":23,"path":"/developers/how-tos/trace-event-profiling-tool/trace-event-reading","isSiteRtlLocale":false,"pageInheritsPermissions":null,"name":"trace-event-reading","canChangePath":true,"state":"","properties":{},"bidiEnabled":false,"currentTemplate":{"path":"/system/app/pagetemplates/text","title":"Web Page"}},"canPublishScriptToAnyone":true,"user":{"keyboardShortcuts":true,"sessionIndex":"","guest_":true,"displayNameOrEmail":"guest","userName":"guest","uid":"","renderMobile":false,"domain":"","namespace":"","hasWriteAccess":false,"namespaceUser":false,"primaryEmail":"guest","hasAdminAccess":false},"gadgets":{"baseUri":"/system/app/pages/gadgets"}};
  webspace.page.breadcrumbs = breadcrumbs;

  
  var JOT_siteRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

</script>
<script type="text/javascript">
                window.jstiming.load.tick('scl');
              </script>
<meta name="title" content="Understanding about:tracing results - The Chromium Projects" />
<meta itemprop="name" content="Understanding about:tracing results - The Chromium Projects" />
<meta property="og:title" content="Understanding about:tracing results - The Chromium Projects" />
<meta name="description" content="Home of the Chromium Open Source Project" />
<meta itemprop="description" content="Home of the Chromium Open Source Project" />
<meta id="meta-tag-description" property="og:description" content="Home of the Chromium Open Source Project" />
<style type="text/css">
</style>
<link rel="stylesheet" type="text/css" href="http://www.gstatic.com/sites/p/56e332/system/app/themes/beigeandblue/standard-css-beigeandblue-ltr-ltr.css" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/overlay.css?cb=beigeandblueundefineda100%25%25150goog-ws-leftthemedefaultstandard" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/camelot/allthemes-view.css" />
<!--[if IE]>
          <link rel="stylesheet" type="text/css" href="/system/app/css/camelot/allthemes%2die.css" />
        <![endif]-->
<title>Understanding about:tracing results - The Chromium Projects</title>
<meta itemprop="image" content="http://www.chromium.org/_/rsrc/1441252029512/developers/how-tos/trace-event-profiling-tool/trace-event-reading/Screen%20Shot%202015-09-02%20at%208.46.48%20PM.png?width=700" />
<meta property="og:image" content="http://www.chromium.org/_/rsrc/1441252029512/developers/how-tos/trace-event-profiling-tool/trace-event-reading/Screen%20Shot%202015-09-02%20at%208.46.48%20PM.png?width=700" />
<script type="text/javascript">
                window.jstiming.load.tick('cl');
              </script>
</head>
<body xmlns="http://www.google.com/ns/jotspot" id="body" class=" en            ">
<div id="sites-page-toolbar" class="sites-header-divider">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-status" class="sites-status" style="display:none;"><div id="sites-notice" class="sites-notice" role="status" aria-live="assertive"> </div></div>
</div>
<div id="sites-chrome-everything-scrollbar">
<div id="sites-chrome-everything" class="">
<div id="sites-chrome-page-wrapper" style="direction: ltr">
<div id="sites-chrome-page-wrapper-inside">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-chrome-header-wrapper" style="height:auto;">
<table id="sites-chrome-header" class="sites-layout-hbox" cellspacing="0" style="height:auto;">
<tr class="sites-header-primary-row" id="sites-chrome-userheader">
<td id="sites-header-title" class="" role="banner"><div class="sites-header-cell-buffer-wrapper"><a href="http://www.chromium.org/" id="sites-chrome-userheader-logo"><img id="logo-img-id" src="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" alt="The Chromium Projects" class="sites-logo  " /></a><h2><a href="http://www.chromium.org/" dir="ltr" id="sites-chrome-userheader-title">The Chromium Projects</a></h2></div></td><td class="sites-layout-searchbox  "><div class="sites-header-cell-buffer-wrapper"><form id="sites-searchbox-form" action="/system/app/pages/search" role="search"><input type="hidden" id="sites-searchbox-scope" name="scope" value="search-site" /><input type="text" id="jot-ui-searchInput" name="q" size="20" value="" aria-label="Search this site" /><div id="sites-searchbox-button-set" class="goog-inline-block"><div role="button" id="sites-searchbox-search-button" class="goog-inline-block jfk-button jfk-button-standard" tabindex="0">Search this site</div></div></form></div></td>
</tr>
<tr class="sites-header-secondary-row" id="sites-chrome-horizontal-nav">
<td colspan="2" id="sites-chrome-header-horizontal-nav-container" role="navigation">
</td>
</tr>
</table>
</div>
<div id="sites-chrome-main-wrapper">
<div id="sites-chrome-main-wrapper-inside">
<table id="sites-chrome-main" class="sites-layout-hbox" cellspacing="0" cellpadding="{scmCellpadding}" border="0">
<tr>
<td id="sites-chrome-sidebar-left" class="sites-layout-sidebar-left initial" style="width:150px">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_7648876402527094" class="sites-embed" role="navigation"><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-projects" jotId="wuid:gx:10ae433dadbbab13" class="sites-navigation-link">Home</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/Home" jotId="wuid:gx:43582b9d2029d3af" class="sites-navigation-link">Chromium</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-os" jotId="wuid:gx:83df2ab1f8880ba" class="sites-navigation-link">Chromium OS</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_14720868319272995" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Quick links</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/for-testers/bug-reporting-guidelines" class="sites-navigation-link">Report bugs</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/developers/discussion-groups" class="sites-navigation-link">Discuss</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/system/app/pages/sitemap/hierarchy" jotId="wuid:gx:fe204a485666144" class="sites-navigation-link">Sitemap</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19690813310444355" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Other sites</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://blog.chromium.org/" class="sites-navigation-link">Chromium Blog</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://code.google.com/chrome/extensions/" class="sites-navigation-link">Google Chrome Extensions</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="https://developers.google.com/chrome/chrome-frame/" class="sites-navigation-link">Google Chrome Frame</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19695218559354544" class="sites-embed" role="complementary"><h4 class="sites-embed-title"></h4><div class="sites-embed-content sites-embed-content-sidebar-textbox"><div dir="ltr"><span style="font-size:x-small">Except as otherwise </span><a href="http://developers.google.com/site-policies.html#restrictions"><span style="font-size:x-small">noted</span></a><span style="font-size:x-small">, the content of this page is licensed under a </span><a href="http://creativecommons.org/licenses/by/2.5/"><span style="font-size:x-small">Creative Commons Attribution 2.5 license</span></a><span style="font-size:x-small">, and examples are licensed under the </span><a href="http://src.chromium.org/viewvc/chrome/trunk/src/LICENSE" target="_blank"><span style="font-size:x-small">BSD License</span></a><span style="font-size:x-small">.<br /></span></div></div></div>
</td>
<td id="sites-canvas-wrapper">
<div id="sites-canvas" role="main">
<div id="goog-ws-editor-toolbar-container"> </div>
<div xmlns="http://www.w3.org/1999/xhtml" id="title-crumbs" style="">
<A href="/developers" dir="ltr">For Developers</A>‎ &gt; ‎<A href="/developers/how-tos" dir="ltr">How-Tos</A>‎ &gt; ‎<A href="/developers/how-tos/trace-event-profiling-tool" dir="ltr">The Trace Event Profiling Tool (about:tracing)</A>‎ &gt; ‎
  </div>
<h3 xmlns="http://www.w3.org/1999/xhtml" id="sites-page-title-header" style="" align="left">
<span id="sites-page-title" dir="ltr" tabindex="-1" style="outline: none">Understanding about:tracing results</span>
</h3>
<div id="sites-canvas-main" class="sites-canvas-main">
<div id="sites-canvas-main-content">
<table xmlns="http://www.w3.org/1999/xhtml" cellspacing="0" class="sites-layout-name-one-column sites-layout-hbox"><tbody><tr><td class="sites-layout-tile sites-tile-name-content-1"><div dir="ltr"><span><font size="3"><i>Getting down with performance in web apps: not for the faint of heart.</i></font></span>
<div><br />
<span>
<div><b><span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">
<div><div class="sites-embed-align-left-wrapping-off"><div class="sites-embed-border-off sites-embed" style="width:75%;"><div class="sites-embed-content sites-embed-type-toc"><div class="goog-toc sites-embed-toc-maxdepth-6"><p>Contents</p><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Intro"><strong>1 </strong>Intro</a></li><li class="goog-toc"><a href="#TOC-Background:-How-Chrome-Renders-Web-Pages"><strong>2 </strong>Background: How Chrome Renders Web Pages</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Chrome-s-use-of-multiple-processes"><strong>2.1 </strong>Chrome's use of multiple processes</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-1.-The-Browser-Process"><strong>2.1.1 </strong>1. The Browser Process</a></li><li class="goog-toc"><a href="#TOC-2.-Renderer-Processes"><strong>2.1.2 </strong>2. Renderer Processes</a></li><li class="goog-toc"><a href="#TOC-3.-The-GPU-Process"><strong>2.1.3 </strong>3. The GPU Process</a></li></ol></li><li class="goog-toc"><a href="#TOC-The-Message-Loop"><strong>2.2 </strong>The Message Loop</a></li><li class="goog-toc"><a href="#TOC-Web-page-rendering-CSS-layout-reflow-etc-is-lazy"><strong>2.3 </strong>Web page rendering/CSS/layout/reflow/etc is lazy</a></li><li class="goog-toc"><a href="#TOC-Compositing-vs-Software-Mode"><strong>2.4 </strong>Compositing vs Software Mode</a></li><li class="goog-toc"><a href="#TOC-Frames-as-in-Frames-Per-Second-"><strong>2.5 </strong>Frames (as in Frames Per Second)</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Software-Mode"><strong>2.5.1 </strong>Software Mode</a></li><li class="goog-toc"><a href="#TOC-Single-threaded-Accelerated-Mode"><strong>2.5.2 </strong>Single-threaded Accelerated Mode</a></li><li class="goog-toc"><a href="#TOC-Multi-threaded-Accelerated-Mode"><strong>2.5.3 </strong>Multi-threaded Accelerated Mode</a></li></ol></li><li class="goog-toc"><a href="#TOC-HTML5-Canvas"><strong>2.6 </strong>HTML5 Canvas</a></li><li class="goog-toc"><a href="#TOC-WebGL"><strong>2.7 </strong>WebGL</a></li><li class="goog-toc"><a href="#TOC-Input"><strong>2.8 </strong>Input</a></li><li class="goog-toc"><a href="#TOC-Javascript-V8"><strong>2.9 </strong>Javascript/V8</a></li></ol></li><li class="goog-toc"><a href="#TOC-Navigating-the-Tracing-View"><strong>3 </strong>Navigating the Tracing View</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Processes-Timelines"><strong>3.1 </strong>Processes &amp; Timelines</a></li><li class="goog-toc"><a href="#TOC-Trace-Events"><strong>3.2 </strong>Trace Events</a></li><li class="goog-toc"><a href="#TOC-Import-and-Export"><strong>3.3 </strong>Import and Export</a></li></ol></li><li class="goog-toc"><a href="#TOC-Investigating-Performance-Problems"><strong>4 </strong>Investigating Performance Problems</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Setting-up-a-good-trace-run"><strong>4.1 </strong>Setting up a good trace run</a></li><li class="goog-toc"><a href="#TOC-Investigation-strategy"><strong>4.2 </strong>Investigation strategy</a></li><li class="goog-toc"><a href="#TOC-Next:-Fixing-it-"><strong>4.3 </strong>Next: Fixing it!</a></li><li class="goog-toc"><a href="#TOC-Tip:-trace-event-color"><strong>4.4 </strong>Tip: trace event color</a></li><li class="goog-toc"><a href="#TOC-Tip:-which-tab-am-I-looking-at-"><strong>4.5 </strong>Tip: which tab am I looking at?</a></li></ol></li><li class="goog-toc"><a href="#TOC-Glossary:-Common-Trace-Events"><strong>5 </strong>Glossary: Common Trace Events</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Common-Events"><strong>5.1 </strong>Common Events</a></li></ol></li><li class="goog-toc"><a href="#TOC-More-Investigation-Strategies"><strong>6 </strong>More Investigation Strategies</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Adding-your-own-trace-events"><strong>6.1 </strong>Adding your own trace events</a></li><li class="goog-toc"><a href="#TOC-Determining-which-IPC-message-is-active"><strong>6.2 </strong>Determining which IPC message is active</a></li></ol></li><li class="goog-toc"><a href="#TOC-Staying-Current"><strong>7 </strong>Staying Current</a></li></ol></div></div></div></div></div>
<br />
</span></b></div>
<h3 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-Intro"></a><span style="font-size:16px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Intro</span></h3>
<span style="font-size:13px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Chrome’s DevTools are great, but sometimes you’ve got a hitchy animation or page that scrolls slowly and you just need more info on what’s going on. If you want to dig into the guts of Chrome and figure out what the browser’s really doing under the hood, about:tracing is for you.</span><br />
<br />
<span style="font-size:13px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">This document will walk you through about:tracing and how to use it to diagnose common, basic rendering performance problems. For background we’ll also cover a few concepts central to Chrome’s overall rendering architecture, since artifacts of this architecture show up all over tracing results.</span><br />
<h3 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-Background:-How-Chrome-Renders-Web-Pages"></a><span style="font-size:16px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Background: How Chrome Renders Web Pages</span></h3>
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">A key mental backflip one has to do when reading a trace is understand how web concepts are actually executed by Chrome. Once you understand how Chrome works, and its words for common web concepts, you'll feel a lot better moving around in a trace. This section covers a few key concepts to get you started.</span><br />
<h4 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-Chrome-s-use-of-multiple-processes"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Chrome's use of multiple processes</span></h4>
<span style="font-size:13px;font-family:Arial;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Full article: </span><a href="http://dev.chromium.org/developers/design-documents/multi-process-architecture" style="font-weight:bold;font-family:Times;font-size:medium"><span style="font-size:13px;font-family:Arial;color:rgb(17,85,204);font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Chrome’s Multi-Process Architecture</span></a><br />
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">There are three types of processes in Chrome you need to worry about when dealing with graphics:</span><br />
<h5 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-1.-The-Browser-Process"></a><span style="font-size:13px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">1. The Browser Process</span></h5>
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">The browser process is the central coordination point for all of Chrome’s renderers (i.e. things actually drawing web pages). We call the browser process CrBrowserMain, and any threads with the same PID as CrBrowserMain are threads within that process.</span><br />
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">The browser process receives input from the OS, controls the browser UI (e.g. omnibox, back buttons, the tabstrip, menus, etc). In software mode, it actually puts the image of the webpage on the screen.</span><br />
<h5 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-2.-Renderer-Processes"></a><span style="font-size:13px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">2. Renderer Processes</span></h5>
<span style="font-size:13px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">The renderer process is responsible for a given web page. There are typically many renderer processes running in Chrome at any given time, but just one Browser process. The renderers are all instances of </span><span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">CrRendererMain, and threads with the same PID as a given CrRendererMain are that process’s threads.</span><br />
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Chrome tries to put each tab in its own render process, subject to various restrictions. In general, the rule is different domains go into different processes, up to some memory-defined limit on process count. CrRendererMain is where javascript/html/css/etc is running, and in most cases, it is the bottleneck in your application!</span><br />
<h5 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-3.-The-GPU-Process"></a><span style="font-size:13px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">3. The GPU Process</span></h5>
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Chrome has a single GPU process where GPU accelerated operations are issued to the graphics driver. We call this process CrGpuMain.</span><br />
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">GPU operations are done in a separate process/thread for security and stability reasons. When you use WebGL in JavaScript, or 3D CSS, or accelerated canvas, they are being made in the renderer but then sent asynchronously for actual execution in the GPU process.</span><br />
<h4 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-The-Message-Loop"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">The Message Loop</span></h4>
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">All threads in Chrome use a message loop, which is roughly a bit of code that does "while(true) { pop message; run message; }". A nice feature of about:tracing is that anytime chrome is running a message, it will be traced. This means that if there is no MessageLoop task on a thread, you can have high confidence that that thread is idle.</span><br />
<h4 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-Web-page-rendering-CSS-layout-reflow-etc-is-lazy"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Web page rendering/CSS/layout/reflow/etc is lazy</span></h4>
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Positioning and rendering of renderable elements (divs, etc) is done lazily by Webkit. For instance:</span>
<ul style="font-weight:bold;font-family:Times;font-size:medium;margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:disc;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">When you move a div, we just set a dirty bit and come around later and actually move it and update the screen.</span></li>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">Similarly, when you change an element’s class, we don’t recalculate its new computed style until the last possible minute. We just set a dirty bit.</span></li></ul>
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">The actual costs of this laziness show up in the following ways:</span>
<ul style="font-weight:bold;font-family:Times;font-size:medium;margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:disc;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">When javascript code asks for a computed style, or we decide it is time [here be dragons], you may see a trace for recalculateStyle. If you see that spiking, you're seeing the interaction of classnames with style cascades and your DOM size/shape. That’s WebKit inspecting your css and classnames and figuring out what things are supposed to look like.</span></li>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">At the beginning of a frame [see below for definition], we recompute styles AND get ready to render. There, you will see WebViewImpl::layout, which is both style recalc and also us figuring out what part of (and how) your page should be drawn.</span></li>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">Painting/Updating: when we go to make a picture of the screen, we call it painting or updating. This is picture generation, and will usually include costs like bitmap decompression (if needed), complex gradient shading, rounded edges, blurriness, text rendering, and so on.</span></li></ul>
<h4 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-Compositing-vs-Software-Mode"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Compositing vs Software Mode</span></h4>
<span style="font-size:13px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Full article: </span><a href="http://www.chromium.org/developers/design-documents/gpu-accelerated-compositing-in-chrome" style="font-weight:bold;font-family:Times;font-size:medium"><span style="font-size:13px;font-family:Arial;color:rgb(17,85,204);background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">GPU Accelerated Compositing in Chrome</span></a><br />
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Chrome renders in either "software mode" or "accelerated compositing mode":</span><br />
<ul style="font-weight:bold;font-family:Times;font-size:medium;margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:disc;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">In software mode, Chrome software rasterizes the webpage into an image and blits it onto the screen using the underlying OS' software drawing primitives. Chrome tracks a "dirty region" on the screen to minimize the size of the blits for common operations like blinking cursors, playing videos, and scrolling.</span></li></ul>
<ul style="font-weight:bold;font-family:Times;font-size:medium;margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:disc;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">In accelerated compositing mode, Chrome breaks the webpage up into layers, and then each layer is composited together using the GPU.</span></li></ul>
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Additionally, accelerated mode operates in either single or multi-threaded modes:</span>
<ul style="font-weight:bold;font-family:Times;font-size:medium;margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:disc;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">In single threaded mode, we periodically stop the webpage to update the screen.</span></li>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">In multi-threaded (often referred to as just ‘threaded’) mode, we can update the screen without stopping the webpage, which allows us to scroll the page smoothly or run animations without hitching.</span></li></ul>
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">What does stopping the web page entail? In effect, the main thread in the renderer process is the thing that needs to do the screen updating. When it’s doing that, it can’t be doing any of the other things that it normally would -- like running JavaScript. Being able to run script while the screen updates is a main motivation both for threaded compositing and for web workers.</span><br />
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">The configurations to keep in mind, based on Chrome 18, are:</span>
<ul style="font-weight:bold;font-family:Times;font-size:medium;margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:disc;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">Android: multi-threaded accelerated mode</span></li>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">CrOS: single-threaded accelerated mode</span></li>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">Desktop: depends on page content.</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:circle;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">When WebGL, Canvas, or 3D CSS is used, single-threaded accelerated mode.</span></li>
<li style="list-style-type:circle;font-size:15px;font-family:Arial;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap">Otherwise, software mode is on.</span></li></ul></ul>
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">We’re going to change this as time goes on: we eventually intend to enable multi-threaded accelerated mode on all platforms and pages.</span><br />
<h4 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-Frames-as-in-Frames-Per-Second-"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Frames (as in Frames Per Second)</span></h4>
<span style="font-size:13px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">It’s important to understand the entire lifecycle of a frame when Chrome is drawing. The key lifecycle events are outlined for each mode below:</span><br />
<h5 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-Software-Mode"></a><span style="font-size:13px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Software Mode</span></h5>
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">In software mode, a frame can be found by looking for DoDeferredUpdate in the trace. DoDeferredUpdate will run requestAnimationFrame, perform a layout (which is css style recalc plus preparation for rendering), and then paint the screen. We then send the bitmap to the browser where you will see an "UpdateBackingStore" which is us putting the resulting picture on the screen.</span><br />
<h5 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-Single-threaded-Accelerated-Mode"></a><span style="font-size:13px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Single-threaded Accelerated Mode</span></h5>
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">In single-threaded accelerated mode, a frame can be found by looking for DoDeferredUpdate. DoDeferredUpdate does the same steps as before, but instead of sending the results as pictures to the browser, it sends GL draw calls to the CrGPuMain for every layer.</span><br />
<h5 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-Multi-threaded-Accelerated-Mode"></a><span style="font-size:13px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Multi-threaded Accelerated Mode</span></h5>
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">In threaded accelerated mode, you have to think of there being two types of frame: the frames generated by the renderer (i.e. what JavaScript can touch), and copies of these frames that are handed to the compositor to draw.</span><br />
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">From the renderer / JavaScript perspective, frames can be identified by the "CCThreadProxy::beginFrame" trace event, which does the usual steps of calling requestAnimationFrame, doing layout/style recalc, and painting/updating. At the end of a beginFrame, we then "commit" the world to the compositor thread. The renderer has produced a single frame.</span><br />
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">The compositor thread is then free to draw many frames based on the world it was handed. This is extremely useful because the compositor thread can render many frames e.g. in response to a scroll. Those frames will all be generated from the same “world” (i.e. page state) -- i.e. nothing will have changed from JavaScript, but the compositor thread knows how to handle certain types of other changes like input events (scrolling again) or CSS animations. So even if the renderer is choking on running all your fatty JavaScript, the compositor can continue to serenely scroll the page and run CSS animations on elements. On the compositor’s side of the world, you will see a frame as a CCThreadProxy::scheduledActionDrawAndSwap.</span><br />
<h4 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-HTML5-Canvas"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">HTML5 Canvas</span></h4>
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Canvas can be software-accelerated or GPU-accelerated. <code>about:gpu</code> will show you which is the case for your browser / computer configuration. In non-accelerated mode, canvas calls are executed immediately using software rasterization and are blocking operations in the main thread of the renderer. In accelerated mode, canvas calls are converted to GL commands and issued to the CrGpuMain process for execution. This rendering is ‘deferred’ so the commands are issued to the GPU process and the main thread is free to continue to run JavaScript while the GPU process actually renders them and updates the screen.</span><br />
<h4 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-WebGL"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">WebGL</span></h4>
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">WebGL is always GPU accelerated. Your WebGL calls are marshalled into a command buffer and shipped to CrGpuMain where we unpack the commands and make the equivalent GL or DirectX calls.</span><br />
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">If your command buffer fills up, or you call a GL function that requires an answer from the underlying driver, e.g. glGetError or glGetUniform, you will see FlushSync call. This FlushSync blocks on the GPU process executing whatever command you issued and ruins performance.</span><br />
<h4 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-Input"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Input</span></h4>
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Input events are received from the system by the Browser process and then forwarded to the renderer process.</span><br />
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">When tracing an input event, first look for a (very small) ForwardInputEvent message in CrBrowserMain. This is the browser receiving the input event and forwarding it to the renderer. After the ForwardInputEvent happens, the render process will get a HandleInputEvent message. You will see events inside that HandleInputEvent if it got forwarded into JavaScript.</span><br />
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Note that for flow control reasons, CrBrowserMain will not send more than 1 input to the renderer process at a time. Rather, it waits on sending another input until the previous one is acknowledged. The renderer will acknowledge input events immediately, most of the time. The one exception is mouse moves/scrolls -- if the screen is dirty (e.g. a DoDeferredUpdate is necessary), then the renderer will not reply to an input until the DoDeferredUpdate completes.</span><br />
<h4 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-Javascript-V8"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Javascript/V8</span></h4>
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">When JavaScript is running, you will (usually) see traces for things that begin with V8. We haven't instrumented every single thing, but you will see v8.run or v8.callfunction for common cases. See the below glossary of common trace events for additional V8 functions that are instrumented (e.g. for event listener callbacks, setTimeout/setInterval callbacks, etc).</span><br />
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Many JS APIs interact with the browser process synchronously. E.g. cookie access, IndexedDB operations, synchronous XHR/network operations. When that happens, you can bracket the suspicious operation with console.time/timeEnd calls and look on the browser process for activity that appears correlated with your JS code. See More Investigation Strategies below for examples of how to do this.</span><br />
<h3 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-1"></a><span style="font-size:16px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap"><br /></span></h3><h3 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-Navigating-the-Tracing-View"></a><span style="font-size:16px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Navigating the Tracing View</span></h3>
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Now that you’ve got the theory down, how do you actually interact with the tracing tool?</span><br />
<br />
<span style="font-size:13px;font-family:Arial;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">This trace assumes that you have opened up a fresh browser, and opened Wikipedia in one tab and about:tracing in another, hit record in the tracing tab and scrolled a bit in the WikiPedia tab, then stopped the recording. More detailed directions on how to do that are</span><a href="http://www.chromium.org/developers/how-tos/trace-event-profiling-tool" style="font-weight:bold;font-family:Times;font-size:medium"><span style="font-size:13px;font-family:Arial;color:rgb(0,0,0);font-weight:normal;text-decoration:none;vertical-align:baseline;white-space:pre-wrap"> </span><span style="font-size:13px;font-family:Arial;color:rgb(71,18,100);font-weight:normal;vertical-align:baseline;white-space:pre-wrap">here</span></a><span style="font-size:13px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">.</span><br />
<h4 dir="ltr" style="font-weight:bold;font-family:Times;font-size:medium"><a name="TOC-Processes-Timelines"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Processes &amp; Timelines</span></h4>
<span style="font-size:13px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Once you have a trace recorded, you should get something like the following:</span></span>
<div><b style="font-family:Times;font-size:medium"><br />
</b></div>
<div><b style="font-family:Times;font-size:medium">
<div style="display:block;text-align:center;margin-right:auto;margin-left:auto">
<div style="display:block;text-align:center;margin-right:auto;margin-left:auto"><a href="http://www.chromium.org/developers/how-tos/trace-event-profiling-tool/trace-event-reading/Screen%20Shot%202015-09-02%20at%208.46.48%20PM.png?attredirects=0" imageanchor="1"><img border="0" src="http://www.chromium.org/_/rsrc/1441252029512/developers/how-tos/trace-event-profiling-tool/trace-event-reading/Screen%20Shot%202015-09-02%20at%208.46.48%20PM.png?width=700" width="700" /></a></div>
<br />
</div>
<br />
<span style="font-size:13px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">This is a visualization of the recorded trace. What you’re seeing is Chrome's multi-process architecture at work, scrolling your page. The first thing to notice is that there are three processes running: the browser (pid=17965), the renderer process for about:tracing (pid=17974) and the renderer process for Wikipedia (pid=17982).</span><br />
<br />
<span style="font-size:13px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Each process has a separate horizontal track, filled with trace events. The track is basically an event timeline for events on that thread/process. Events are the colored, rectangular blocks on the timeline tracks. Time moves from left to right.</span><br /><div style="display:block;text-align:center;margin-right:auto;margin-left:auto"><a href="http://www.chromium.org/developers/how-tos/trace-event-profiling-tool/trace-event-reading/second.png?attredirects=0" imageanchor="1"><img border="0" src="http://www.chromium.org/_/rsrc/1441251917450/developers/how-tos/trace-event-profiling-tool/trace-event-reading/second.png" /></a></div><br />
<h4 dir="ltr"><a name="TOC-Trace-Events"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Trace Events</span></h4>
<span style="font-size:13px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">In this case, the data being shown is ~10 seconds, broken down as follows:</span></b>
<div><b style="font-family:Times;font-size:medium"><br />
</b></div>
<div><b style="font-family:Times;font-size:medium"><div style="display:block;text-align:center;margin-right:auto;margin-left:auto"><a href="http://www.chromium.org/developers/how-tos/trace-event-profiling-tool/trace-event-reading/third.png?attredirects=0" imageanchor="1"><img border="0" src="http://www.chromium.org/_/rsrc/1441251914720/developers/how-tos/trace-event-profiling-tool/trace-event-reading/third.png" /></a></div><br />
<br />
<span style="font-size:13px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">The keyboard can be used to zoom and pan around inside the timeline. The ‘w’ and ‘s’ keys zoom in centered around the mouse, and the ‘a’ and ‘d’ keys pan the timeline left and right. So, with a bit of zooming around, we can look at how a single mousewheel event propagates through Chrome:</span></b>
<div>
<h3><a name="TOC-2"></a><div style="display:block;text-align:center;margin-right:auto;margin-left:auto"><a href="http://www.chromium.org/developers/how-tos/trace-event-profiling-tool/trace-event-reading/fourth.png?attredirects=0" imageanchor="1"><img border="0" src="http://www.chromium.org/_/rsrc/1441251910822/developers/how-tos/trace-event-profiling-tool/trace-event-reading/fourth.png" /></a></div><br /></h3>
<b style="font-family:Times;font-size:medium"><br />
<span style="font-size:13px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">A single rectangle represents a TRACE_EVENT: where it began, and where it ended. When you see a stack of different rectangles on top of each other, it means that trace events were issued inside one another on the same thread. For example:</span><br />
<br />
<p dir="ltr" style="margin-left:30pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">foo() {</span></p>
<p dir="ltr" style="margin-left:30pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">  sleep 10ms</span></p>
<p dir="ltr" style="margin-left:30pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">  bar()</span></p>
<p dir="ltr" style="margin-left:30pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">  sleep 5ms</span></p>
<p dir="ltr" style="margin-left:30pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">}</span></p>
<p dir="ltr" style="margin-left:30pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">bar() {</span></p>
<p dir="ltr" style="margin-left:30pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">  sleep 5ms</span></p>
<p dir="ltr" style="margin-left:30pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">}</span></p>
<br />
<span style="font-size:13px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">Would look like this:</span></b>
<div><b style="font-family:Times;font-size:medium"><br />
</b></div>
<div><b><div style="display:block;text-align:center;margin-right:auto;margin-left:auto"><a href="http://www.chromium.org/developers/how-tos/trace-event-profiling-tool/trace-event-reading/fifth.png?attredirects=0" imageanchor="1"><img border="0" src="http://www.chromium.org/_/rsrc/1441251905766/developers/how-tos/trace-event-profiling-tool/trace-event-reading/fifth.png" /></a></div><br />
<br />
<font face="arial, sans-serif" size="2"><span style="font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">To study individual rectangles, you can click on them. This will display information about the rectangle: its </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Duration</span><span style="font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">, </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">ThreadDuration</span><span style="font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> (CPU time), </span><span style="vertical-align:baseline;white-space:pre-wrap;background-color:transparent">SelfTime</span><span style="font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> (time spent in the current slice, subtracting the time</span></font></b></div>
<div><font face="arial, sans-serif" size="2"><span style="vertical-align:baseline;background-color:transparent"><span style="white-space:pre-wrap">of all the children slices), <b>ThreadSelfTime</b> (CPU time spent in the current slice, subtracting the CPU time for all the children) and </span><span style="white-space:pre-wrap"><b>Occurrences</b></span><span style="white-space:pre-wrap"> (the number of times that event appeared in the selection).</span></span></font></div>
<div><font face="arial, sans-serif" size="2"><span style="white-space:pre-wrap">The information is sortable. Clicking on a title from the info table will expand all the slices for that event.<br />
</span><br />
For the Foo/Bar example, the SelfTime for Foo will be 15ms (20 - 5), while the SelfTime for Bar will be 5ms (Since it has no know children).</font></div>
<div><font face="arial, sans-serif" size="2"><br />
</font></div>
<div><font face="arial, sans-serif" size="2">The ThreadDuration is not available for all events and for all platforms, the SelfTime is omitted in cases where the Slice has no known children. </font><span style="background-color:transparent"><font face="arial, sans-serif" size="2">Asynchronous events has no SelfTime by def</font><font size="2">inition.</font></span></div>
<div><br />
<span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">In addition to clicking, you can drag the mouse in a rectangle over a group of trace events. This will give you a list of events that intersect that rectangle and summarize them for you:</span></div>
<div><font face="Arial" size="2"><span style="white-space:pre-wrap"><br /></span></font></div><div>
<div><font face="Arial" size="2" style="font-family:Times;font-size:medium"><span style="white-space:pre-wrap"><br />
</span></font><b style="font-family:Times;font-size:medium">
<div style="display:block;text-align:left"></div>
<div style="display:block;text-align:center;margin-right:auto;margin-left:auto"><a href="http://www.chromium.org/developers/how-tos/trace-event-profiling-tool/trace-event-reading/Selection.png?attredirects=0" imageanchor="1"><img border="0" src="http://www.chromium.org/_/rsrc/1394074376859/developers/how-tos/trace-event-profiling-tool/trace-event-reading/Selection.png" /></a></div>
</b><br />
<br />
<h4 dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold"><a name="TOC-Import-and-Export"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Import and Export</span></h4>
<span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Once recorded, you can give a trace file to someone else. Just press the save button. The resulting file is just JSON.</span><br />
<br />
<span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">To load a trace, use the load button, or grab the standalone trace viewer from </span><font face="Arial"><span style="font-size:13px;white-space:pre-wrap"><a href="https://github.com/catapult-project/catapult/tree/master/tracing">https://github.com/catapult-project/catapult/tree/master/tracing</a> </span></font><br />
<h3 dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold"><a name="TOC-3"></a><span style="font-size:16px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap"><br /></span></h3><h3 dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold"><a name="TOC-Investigating-Performance-Problems"></a><span style="font-size:16px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Investigating Performance Problems</span></h3>
<span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Now that you can navigate the basic view, let’s dive into a basic strategy for investigating a performance problem. Here’s an overview:</span><br />
<h4 dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold"><a name="TOC-Setting-up-a-good-trace-run"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Setting up a good trace run</span></h4>
<ol style="font-family:Times;font-size:medium;font-weight:bold;margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:decimal;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Start with only the tab you’re investigating and about:tracing open in a fresh browser session (see below for other methods of figuring out which tab is which if you need multiple).</span></li>
<li style="list-style-type:decimal;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Set up the tab for investigation to right before the point where the problem will occur (e.g. right before an animation is going to be triggered, or right before part of the page that scrolls slowly)</span></li>
<li style="list-style-type:decimal;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Start a tracing run in the about:tracing tab</span></li>
<li style="list-style-type:decimal;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Switch to the tab under investigation</span></li>
<li style="list-style-type:decimal;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Pause for a couple seconds to record empty space on the timeline (makes finding it later easier)</span></li>
<li style="list-style-type:decimal;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Perform the action to trigger the bad performance behavior (e.g. start the animation or scroll the page). Keeping the recorded activity under 10 seconds is a good idea.</span></li>
<li style="list-style-type:decimal;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Pause again</span></li>
<li style="list-style-type:decimal;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Switch back to the about:tracing tab and stop the recording.</span></li>
</ol>
<h4 dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold"><a name="TOC-Investigation-strategy"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Investigation strategy</span></h4>
<span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Now let’s find a problematic frame and see what caused the hitch or slowdown. See below for more details on the trace events </span>
<ol style="font-family:Times;font-size:medium;font-weight:bold;margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:decimal;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Look for the pause right before you started the problem action</span></li>
<li style="list-style-type:decimal;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Once you’ve found the beginning of the problem area, look for regular patterns that indicate drawing updates.</span></li>
<ol style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:lower-alpha;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">The entire time the renderer process is busy (i.e. doing anything at all) will be marked by MessageLoop::RunTask</span></li>
<li style="list-style-type:lower-alpha;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">A regular draw update will usually start with one of:</span></li>
<ol style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:lower-roman;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">an input event (RenderWidget::OnHandleInputEvent)</span></li>
<li style="list-style-type:lower-roman;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">a requestAnimationFrame callback (RenderWidget::AnimationCallback)</span></li>
<li style="list-style-type:lower-roman;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">a timer firing (ScheduledAction::Execute)</span></li>
</ol>
<li style="list-style-type:lower-alpha;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">...and the actual drawing is done in RenderWidget::DoDeferredUpdate</span></li>
</ol>
<li style="list-style-type:decimal;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Once you’ve found the pattern indicating frame updates by looking for a regular block of trace events and zooming in to confirm that they’re being called from what you expect, zoom back out to look for a problem area</span></li>
<ol style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:lower-alpha;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">If you’re investigating a hitch, look for an interruption to the regular pattern -- a block of tracing events that takes longer than the others.</span></li>
<li style="list-style-type:lower-alpha;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">If you’re investigating general slowness (e.g. scrolling), check to see if the entire draw block from the triggering event to the end of the deferred update are over frame budget (i.e. longer than 16ms on a 60hz screen).</span></li>
</ol>
<li style="list-style-type:decimal;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Once you’ve identified a problem frame, it’s time to figure out what caused that frame to take too long. Options are:</span></li>
<ol style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:lower-alpha;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Paint time</span></li>
<ol style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:lower-roman;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Look for PaintRect or CCLayerTreeHost::UpdateLayers events that take too long</span></li>
</ol>
<li style="list-style-type:lower-alpha;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Layout</span></li>
<ol style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:lower-roman;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Look for WebViewImpl::layout events that take too long</span></li>
</ol>
<li style="list-style-type:lower-alpha;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">JPEG decode/resize</span></li>
<ol style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:lower-roman;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Look for ImageOperations::ResizeSubPixel or ImagerOperations::ResizeBasic</span></li>
</ol>
<li style="list-style-type:lower-alpha;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Heavy input handling</span></li>
<ol style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:lower-roman;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Look for too much activity in RenderWidget::OnHandleInputEvent</span></li>
</ol>
</ol>
<li style="list-style-type:decimal;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">An orthogonal option is that you’re GPU bound.</span></li>
<ol style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:lower-alpha;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">If you have a ton of activity in the GPU process the card can be swamped -- in this case the renderer process might not be doing anything (won’t be in MessageLoop::RunTask) while the GPU is working feverishly. Look for lots of events in the GPU process but few in the renderer.</span></li>
<li style="list-style-type:lower-alpha;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Content updates as the GPU draws are under GPUScheduler::PutChanged, while the actual screen is updated (timed with a screen refresh, as Chrome vsyncs) during GLContext::SwapBuffers</span></li>
</ol>
</ol>
<h4 dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold"><a name="TOC-Next:-Fixing-it-"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Next: Fixing it!</span></h4>
<span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">What to do next depends on the nature of the problem. Options are:</span>
<ul style="font-family:Times;font-size:medium;font-weight:bold;margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Long paint times or long layout</span></li></ul>
<ul style="font-family:Times;font-size:medium;font-weight:bold;margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Paint’s show up in the web inspector’s timeline, too, so if you determine that your problem is heavy paints you can use the inspector to figure out when these paints are happening relative to your JavaScript events.</span></li>
<li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap">You can also turn on the Chrome flag </span><span style="font-size:13px;font-family:Courier New;color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap">--</span><span style="font-size:13px;font-family:Courier New;vertical-align:baseline;white-space:pre-wrap">show</span><span style="font-size:13px;font-family:Courier New;color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap">-</span><span style="font-size:13px;font-family:Courier New;vertical-align:baseline;white-space:pre-wrap">paint</span><span style="font-size:13px;font-family:Courier New;color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap">-</span><span style="font-size:13px;font-family:Courier New;vertical-align:baseline;white-space:pre-wrap">rects</span><span style="font-size:13px;vertical-align:baseline;white-space:pre-wrap"> to see which areas of the screen are painted when, which can help identify what’s being painted (and from there try to reduce the amount or frequency of what’s being painted).</span></li>
<li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Modify your CSS styles to try to isolate and remove the problem. </span><span style="font-size:13px;background-color:transparent;font-weight:bold;vertical-align:baseline;white-space:pre-wrap">This is by far the highest leverage way to make a site faster! </span><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Iterate in the following loop:</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:square;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Remove one of:</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">An entire element</span></li>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">A single CSS style (e.g. CSS class)</span></li>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">A single style modification (e.g. if you set style in JS)</span></li></ul>
<li style="list-style-type:square;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Grab another trace of the page</span></li>
<li style="list-style-type:square;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Check if the paint times (PaintRect or UpdateLayers) or style recalculation and layout (WebViewImpl::layout) times have gone down.</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">If they have, you’ve found your culprit (possibly one of many). Start adding parts of the style back in (if you removed a whole class) or experiment with an alternative way of getting the same visual effect but with different style rules.</span></li>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">If they haven’t, repeat the whole process and remove more.</span></li></ul></ul></ul>
<ul style="font-family:Times;font-size:medium;font-weight:bold;margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Heavy input</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">You should be doing as little as possible in your input handlers. Ensure that your V8EventListener::callListenerFunction inside of RenderWidget::OnHandleInputEvent take minimal time by simply saving some state in your input handler and then actually </span><span style="font-size:13px;background-color:transparent;font-style:italic;vertical-align:baseline;white-space:pre-wrap">acting</span><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> on that state in your requestAnimationFrame callback, for instance.</span></li></ul>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">JPEG decode/resize</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Unfortunately there isn’t a lot to do here at the moment. You can attempt to size your source images such that they won’t get resized, and you can attempt to invalidate them less frequently, but if necessary JPEG operations are what’s causing your woes there isn’t much you can do.</span></li></ul>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">GPU bound</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">If your page is composited and drawing to the GPU, make sure you aren’t invalidating more layers than necessary.</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:square;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">If only one thing is moving on the screen (e.g. an animation) it should be in its own layer</span></li>
<li style="list-style-type:square;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">If you’re scrolling and everything needs to be updated, you want to ensure that things that aren’t changing are in their own layers so they don’t get invalidated and can just be translated on the GPU</span></li>
<li style="list-style-type:square;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">But, if you have too many layers you’ll overwhelm the GPU -- so don’t put everything in its own layer just for the sake of it.</span></li>
<li style="list-style-type:square;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">In the future, we’ll have a way to see which layers are invalidated when (like </span><span style="font-size:13px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">--show-paint-rects</span><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> but for composited mode), but it’s not finished yet.</span></li></ul>
<li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">An easy way to force layer creation is to add a -webkit-transform:translateZ(0) to an element, which will stick it in its own layer but have no visual effect.</span></li>
<li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">An easy way to see what layers are being created for what content is to use the “show composited layer render borders” in about:flags.</span></li></ul></ul>
<h4 dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold"><a name="TOC-Tip:-trace-event-color"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Tip: trace event color</span></h4>
<span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Trace event types will have a common color across all runs and processes. This means that common events like MessageLoop::RunTask are always the same color, making them easy to identify.</span><br />
<h4 dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold"><a name="TOC-Tip:-which-tab-am-I-looking-at-"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Tip: which tab am I looking at?</span></h4>
<span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">It can be difficult to discern which tab is which in the renderer process. The easiest way by far to do this is just not to run any other tabs when you’re doing a tracing run. This way you’ll only end up with two renderer processes (one for about:tracing, one for your content tab)</span><br />
<br />
<span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Another method is to use about:memory, which lists all tabs, apps, and background pages along with their titles and process IDs. You can figure out which process ID you’re interested in here and then refer to the renderer with that process ID in about:tracing.</span><br />
<h3 dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold"><a name="TOC-Glossary:-Common-Trace-Events"></a><span style="font-size:16px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Glossary: Common Trace Events</span></h3>
<span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">There are a few common scenarios that can cause performance to suffer that the tracing tool is good at identifying. These examples are meant to give you some guidance on common signposts to look for.</span><br />
<h4 dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold"><a name="TOC-Common-Events"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Common Events</span></h4>
<ul style="font-family:Times;font-size:medium;font-weight:bold;margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">MessageLoop::RunTask</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">This notes that the process is busy. It’s important to tell when the process is even attempting to do anything vs. not, especially when trying to track down if performance problems are in the renderer, browser, or GPU processes.</span></li></ul>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">RenderWidget::OnHandleInputEvent</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">This is the browser handling an input event. Your JS event handling will also be in here as a sub-event (V8EventListener::callListenerFunction), and you can determine if that’s taking longer than it should.</span></li></ul>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">RenderWidget::DoDeferredUpdate</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">This is the renderer process updating the screen.</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:square;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Note that content may not go to the screen immediately because it’s a </span><span style="font-size:13px;background-color:transparent;font-style:italic;vertical-align:baseline;white-space:pre-wrap">deferred</span><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> update -- textures may be passed to the GPU process and from there to an eventual screen buffer, but these various buffering layers can cause delays.</span></li></ul>
<li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">The basic steps in a draw are:</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:square;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Animation</span></li>
<li style="list-style-type:square;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Layout (see </span></li>
<li style="list-style-type:square;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Painting and compositing in software, or updating and drawing on the GPU</span></li></ul></ul>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">V8EventListener::callListenerFunction</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">This is V8 executing an event listener callback, probably deferring to JS code you actually wrote. It’s a good place to stick your own trace events for further detail (see below).</span></li></ul>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">WebViewImpl::layout</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">This is page re-layout, which can be caused by DOM structure and style changes.</span></li>
<li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Page layout shows up in the web inspector’s timeline, too, so if you determine your problem is layout taking too long you can use the web inspector’s timeline to track it down (i.e. making changes to your page to try to reduce the time or frequency of layout).</span></li></ul>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">PaintRect</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">This is the renderer painting part of the screen that was invalidated.</span></li>
<li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">See “Fixing it” above for strategies on what to do if this is taking too long.</span></li></ul>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">ScheduledAction::Execute</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">This is a </span><span style="font-size:13px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">setTimeout</span><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> or </span><span style="font-size:13px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">setInterval</span><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> event firing.</span></li>
<li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Again, these show up in the web inspector so if you determine that a setTimeout event is getting in the way (blocking the renderer from drawing and causing a hitch, for instance) you can use the inspector to more easily identify and disect the related JavaScript.</span></li></ul>
<li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">ImageOperations::ResizeBasic and ImageOperations::ResizeSubPixel</span></li>
<ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">This is an image being resized, which can be expensive.</span></li>
<li style="list-style-type:circle;font-size:15px;font-family:Arial;background-color:transparent;font-weight:normal;vertical-align:baseline"><span style="font-size:13px;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">The best way to optimize these is probably to avoid them entirely whenever possible, e.g. by sizing your images correctly, but sometimes they’re unfortunately unavoidable.</span></li></ul></ul>
<br />
<h3 dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold"><a name="TOC-More-Investigation-Strategies"></a><span style="font-size:16px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">More Investigation Strategies</span></h3>
<h4 dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold"><a name="TOC-Adding-your-own-trace-events"></a><span style="font-size:15px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;font-weight:normal;font-style:italic;vertical-align:baseline;white-space:pre-wrap">Adding your own trace events</span></h4>
<span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">If you’re having trouble figuring out what part of your code maps to what part of the trace, it can be invaluable to add your own trace events. By doing so from JavaScript you can drop annotations onto the trace timeline, allowing easy identification of key points in your code (for instance, the beginning of a draw loop or the entrance of a particularly complicated bit of JS you fear is blowing your frame budget).</span><br />
<br />
<span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">Adding your own events is as simple as calling </span><span style="font-family:Courier New;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">console.time()</span><span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> and </span><span style="font-family:Courier New;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">console.timeEnd()</span><span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">:</span><br />
<p dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold;margin-left:36pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">function Foo() {</span></p>
<p dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold;margin-left:36pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">  console.time(“Foo”);</span></p>
<p dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold;margin-left:36pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">  var now = Date.now();</span></p>
<p dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold;margin-left:36pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">   while (Date.now() &lt; now + 1000);</span></p>
<p dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold;margin-left:36pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">  console.timeEnd("Foo");</span></p>
<p dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold;margin-left:36pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13px;font-family:Courier New;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">}</span></p>
<br />
<span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent">See </span><a href="http://www.chromium.org/developers/how-tos/trace-event-profiling-tool/tracing-event-instrumentation" style="font-family:Times;font-size:medium;font-weight:bold"><span style="font-size:13px;font-family:Arial;color:rgb(17,85,204);background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">this page</span></a><span style="font-family:Arial;font-size:13px;font-weight:normal;vertical-align:baseline;white-space:pre-wrap;background-color:transparent"> for more information on adding your own trace events to C++ code.</span><br />
</div><div><h4 dir="ltr"><a name="TOC-4"></a><font color="#666666" face="Arial"><span style="font-size:15px;font-weight:normal;white-space:pre-wrap"><i><br /></i></span></font></h4><h4 dir="ltr"><a name="TOC-Determining-which-IPC-message-is-active"></a><font color="#666666" face="Arial"><span style="font-size:15px;font-weight:normal;white-space:pre-wrap"><i>Determining which IPC message is active</i></span></font></h4>
</div>
<div><span style="color:rgb(34,34,34);font-family:arial,sans-serif">To determine what IPC message corresponds with the class and line shown in the trace:</span><br style="color:rgb(34,34,34);font-family:arial,sans-serif" />
<ol><li><span style="color:rgb(34,34,34);font-family:arial,sans-serif">Click on the </span><span style="color:rgb(34,34,34);font-family:arial,sans-serif">event and note the class and line values.</span></li>
<ul><li><span style="color:rgb(34,34,34);font-family:arial,sans-serif;font-size:10pt;background-color:transparent">e.g. <code>class: 41, line: 783</code></span></li></ul>
<li><span style="color:rgb(34,34,34);font-family:arial,sans-serif">Open the <a href="https://chromium.googlesource.com/chromium/src/+/master/ipc/ipc_message_start.h">ipc/ipc_message_start.h</a> for your build. </span></li>
<ul><li><span style="color:rgb(34,34,34);font-family:arial,sans-serif;font-size:10pt;background-color:transparent">Protip: If it's not ToT, you can pull the git hash from about:version and replace `master` in the URL with the hash.</span></li></ul>
<li><span style="color:rgb(34,34,34);font-family:arial,sans-serif"><span style="font-size:13.3333330154419px">Look at the IPCMessageStart enum to find your class. (If the enum values start at line 12, you'll find your class type on line <code>x+12 </code>;) </span></span></li>
<ul><li><span style="font-size:10pt;color:rgb(34,34,34);font-family:arial,sans-serif;background-color:transparent">e.g. class 41 maps to </span><a href="https://chromium.googlesource.com/chromium/src/+/4d31269c6cafb98eced74df70f5d1ccde3af0a44/ipc/ipc_message_start.h" style="font-size:10pt;font-family:arial,sans-serif;background-color:transparent">line 53</a><span style="font-size:10pt;color:rgb(34,34,34);font-family:arial,sans-serif;background-color:transparent">: </span><code style="font-size:10pt;background-color:transparent">ExtensionMsgStart</code></li></ul>
<li><font color="#222222" face="arial, sans-serif">Amongst <a href="https://code.google.com/p/chromium/codesearch#search/&amp;q=f:_messages.h&amp;sq=package:chromium&amp;type=cs">the xxx_messages.h files</a>, open the one that contains your class. </font></li>
<ul><li><span style="color:rgb(34,34,34);font-family:arial,sans-serif;font-size:10pt;background-color:transparent">e.g. Our match is in<a href="https://code.google.com/p/chromium/codesearch#chromium/src/extensions/common/extension_messages.h&amp;q=f:_messages.h%20ExtensionMsgStart&amp;sq=package:chromium&amp;type=cs&amp;l=33"> extension_messages.h</a></span></li></ul>
<li><span style="color:rgb(34,34,34);font-family:arial,sans-serif">Look at the corresponding line number in the xxx_messages.h file. Your desired declaration will typically be <i>ending</i> on the given line.</span></li>
<ul><li><span style="font-size:10pt;background-color:transparent">e.g. Line 783 is the end of the </span><code style="font-size:10pt;background-color:transparent">ExtensionHostMsg_DetailedConsoleMessageAdded</code><span style="font-size:10pt;background-color:transparent"> declaration. We've found our message!</span></li></ul>
</ol>
<div style="text-align:center">
<a href="http://www.chromium.org/developers/how-tos/trace-event-profiling-tool/trace-event-reading/Screen%20Shot%202015-09-02%20at%208.39.51%20PM.png?attredirects=0" imageanchor="1" style="font-size:10pt"><img border="0" src="http://www.chromium.org/_/rsrc/1441251623397/developers/how-tos/trace-event-profiling-tool/trace-event-reading/Screen%20Shot%202015-09-02%20at%208.39.51%20PM.png" /></a>
</div>
<div><br />
</div>
<div><font color="#222222" face="arial, sans-serif">
<div style="display:block;text-align:left"><br />
</div>
<div style="display:block;text-align:left"><br />
</div>
<br />
</font></div>
<h3 dir="ltr" style="font-family:Times;font-size:medium;font-weight:bold"><a name="TOC-Staying-Current"></a><span style="font-size:16px;font-family:Arial;color:rgb(102,102,102);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Staying Current</span></h3>
<span style="font-family:Arial;font-size:13px;background-color:transparent;font-weight:normal;vertical-align:baseline;white-space:pre-wrap">We continuously add new events and features to about:tracing to help us figure out what’s going on inside of Chrome. Some of the images above may not reflect all of these features, so don’t be surprised if there are new threads and events in your about:tracing view that aren’t listed here -- all follow the same basic pattern. We welcome additional documentation and use cases.</span></div>
</div>
</div>
</div>
</div>
</div></div></td></tr></tbody></table>
</div> 
</div> 
<div id="sites-canvas-bottom-panel">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-subpages"> </div>
<div id="sites-attachments-container">
</div>
<a xmlns="http://www.w3.org/1999/xhtml" name="page-comments"></a>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-comments"><div class="sites-comment-docos-wrapper"><div class="sites-comment-docos"><div class="sites-comment-docos-background"></div><div class="sites-comment-docos-header"><div class="sites-comment-docos-header-title">Comments</div></div><div id="sites-comment-docos-pane" class="sites-comment-docos-pane"></div></div></div></div>
</div>
</div> 
</td> 
</tr>
</table> 
</div> 
</div> 
<div id="sites-chrome-footer-wrapper">
<div id="sites-chrome-footer-wrapper-inside">
<div id="sites-chrome-footer">
</div>
</div>
</div>
</div> 
</div> 
<div id="sites-chrome-adminfooter-container">
<div xmlns="http://www.w3.org/1999/xhtml" class="sites-adminfooter" role="navigation"><p><a class="sites-system-link" href="https://www.google.com/a/UniversalLogin?service=jotspot&amp;continue=http://sites.google.com/a/chromium.org/dev/developers/how-tos/trace-event-profiling-tool/trace-event-reading">Sign in</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/recentChanges">Recent Site Activity</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/reportAbuse" target="_blank">Report Abuse</a><span aria-hidden="true">|</span><a class="sites-system-link" href="javascript:;" onclick="window.open(webspace.printUrl)">Print Page</a><span aria-hidden="true">|</span><span class="sites-system-link">Powered By</span> <b class="powered-by"><a href="http://sites.google.com">Google Sites</a></b></p></div>
</div>
</div> 
</div> 
<div id="sites-chrome-onebar-footer">
</div>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('sjl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" src="http://www.gstatic.com/sites/p/56e332/system/js/jot_min_view__en.js"></script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('jl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml">
      
          sites.core.Analytics.createTracker();
          sites.core.Analytics.trackPageview();
        
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
                    sites.Searchbox.initialize(
                        'sites-searchbox-search-button',
                        {"object":[]}['object'],
                        'search-site',
                        {"label":"Configure search options...","url":"/system/app/pages/admin/settings"});
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
      gsites.HoverPopupMenu.createSiteDropdownMenus('sites-header-nav-dropdown', false);
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("7648876402527094", "Navigation", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_7648876402527094');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("14720868319272995", "Quick links", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_14720868319272995');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("19690813310444355", "Other sites", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_19690813310444355');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
              new sites.CommentPane('//docs.google.com/comments/d/AAHRpnXvrAwjAfmld0ObrebBiGRq92KiKsHVY9mSucL3HQJxd5HqQJ1H6fqEop8y9o8I3SbCWOZomimLmC1PzIaRBCOClTE2QIbB-Sr8z3iffRC2jlN3s6G09hXRdkTHAAEm5m9IN_YY_/api/js?anon=true',
                  false, false);
            </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
  setTimeout(function() {
    var fingerprint = gsites.date.TimeZone.getFingerprint([]);
    gsites.Xhr.send('http://www.chromium.org/_/tz', null, null, 'GET', null, null, { afjstz: fingerprint });
  }, 500);
</script>
<script xmlns="http://www.w3.org/1999/xhtml">
                    window.onload = function() {
                      if (false) {
                        JOT_setMobilePreview();
                      }
                      var loadTimer = window.jstiming.load;
                      loadTimer.tick("ol");
                      loadTimer["name"] = "load," + webspace.page.type + ",user_page";
                      window.jstiming.report(loadTimer, {}, 'http://csi.gstatic.com/csi');
                    }
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
        JOT_insertAnalyticsCode(false,
            false);
      </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    var maestroRunner = new gsites.pages.view.SitesMaestroRunner(
        webspace, "en");
    maestroRunner.initListeners();
    maestroRunner.installEditRender();
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
  //<![CDATA[
    // Decorate any fastUI buttons on the page with a class of 'goog-button'.
    if (webspace.user.hasWriteAccess) {
      JOT_decorateButtons();
    }

    // Fires delayed events.
    (function() {
      JOT_fullyLoaded = true;
      var delayedEvents = JOT_delayedEvents;
      for (var x = 0; x < delayedEvents.length; x++) {
        var event = delayedEvents[x];
        JOT_postEvent(event.eventName, event.eventSrc, event.payload);
      }
      JOT_delayedEvents = null;
      JOT_postEvent('pageLoaded');
    })();
  //]]>
</script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    JOT_postEvent('decorateGvizCharts');
  </script>
<script type="text/javascript">
          JOT_setupPostRenderingManager();
        </script>
<script type="text/javascript">
          JOT_postEvent('renderPlus', null, 'sites-chrome-main');
        </script>
<div id="server-timer-div" style="display:none"> </div>
<script type="text/javascript">
          window.jstiming.load.tick('render');
          JOT_postEvent('usercontentrendered', this);
        </script>
</body>
</html>
