<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/WebPage">
<head>
<meta http-equiv="X-UA-Compatible" content="chrome=1" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var e="wtsrt_",g="tbsd_",h="tbnd_",k="start",l="_wtsrt",m="_tbnd",n="CSI/";(function(){function f(a){this.t={};this.tick=function(a,c,b){this.t[a]=[void 0!=b?b:(new Date).getTime(),c];if(void 0==b)try{window.console.timeStamp(n+a)}catch(d){}};this.tick(k,null,a)}var a;window.performance&&(a=window.performance.timing);var p=a?new f(a.responseStart):new f;window.jstiming={Timer:f,load:p};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick(l,void 0,c),b.tick(e,l,d),b.tick(g,e))}try{a=null,
window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick(m,void 0,window.chrome.csi().startE),b.tick(h,m,c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick(m,void 0,window.external.startE),b.tick(h,m,c))),a&&(window.jstiming.pt=a)}catch(q){}})(); })()
</script>
<link rel="shortcut icon" href="/_/rsrc/1354323194313/favicon.ico" type="image/x-icon" />
<link rel="apple-touch-icon" href="https://ssl.gstatic.com/sites/p/56e332/system/app/images/apple-touch-icon.png" type="image/png" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var d="",g="__duration__",h="function";function k(c){return document.getElementById(c)}window.byId=k;function l(c){return c.replace(/^\s+|\s+$/g,d)}window.trim=l;var m=[],n=0;window.JOT_addListener=function(c,a,b){var e=new String(n++);c={eventName:c,handler:a,compId:b,key:e};m.push(c);return e};window.JOT_removeListenerByKey=function(c){for(var a=0;a<m.length;a++)if(m[a].key==c){m.splice(a,1);break}};
window.JOT_removeAllListenersForName=function(c){for(var a=0;a<m.length;a++)m[a].eventName==c&&m.splice(a,1)};window.JOT_postEvent=function(c,a,b){var e={eventName:c,eventSrc:a||{},payload:b||{}};if(window.JOT_fullyLoaded)for(a=m.length,b=0;b<a&&b<m.length;b++){var f=m[b];f&&f.eventName==c&&(e.listenerCompId=f.compId||d,(f=typeof f.handler==h?f.handler:window[f.handler])&&f(e))}else window.JOT_delayedEvents.push({eventName:c,eventSrc:a,payload:b})};window.JOT_delayedEvents=[];
window.JOT_fullyLoaded=!1;window.JOT_formatRelativeToNow=function(c,a){var b=((new Date).getTime()-c)/6E4;if(1440<=b||0>b)return null;var e=0;60<=b&&(b/=60,e=2);2<=b&&e++;return a?window.JOT_siteRelTimeStrs[e].replace(g,Math.floor(b)):window.JOT_userRelTimeStrs[e].replace(g,Math.floor(b))}; })()
</script>
<script>

  

  var breadcrumbs = [{"path":"/chromium-os","deleted":false,"title":"Chromium OS","dir":"ltr"},{"path":"/chromium-os/how-tos-and-troubleshooting","deleted":false,"title":"How Tos and Troubleshooting","dir":"ltr"},{"path":"/chromium-os/how-tos-and-troubleshooting/kernel-rebase-notes","deleted":false,"title":"Kernel rebase notes","dir":"ltr"}];
  var JOT_clearDotPath = 'https://ssl.gstatic.com/sites/p/56e332/system/app/images/cleardot.gif';

  
  var JOT_userRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

  
  

  

  var webspace = {"enableAnalytics":true,"pageSharingId":"jotspot_page","enableUniversalAnalytics":false,"sharingPolicy":"OPENED_WITH_INDICATOR","siteTitle":"The Chromium Projects","isStartPageEnabled":true,"adsensePublisherId":null,"features":{"languageSelectDefaultTextSetToDefault":true,"validateClientGvizDataSourceUrls":true,"moreMobileStyleImprovements":true,"newInsertMenuIcons":true,"accessibleSortingButtons":true,"domainAnalyticsInGAOnly":true,"noCaptcha":true,"fileCabinetScreenReaderFix":true,"updatedTosAndPrivacyLinks":null,"pageDrafts":false,"mobileOrientationFix":true,"plusBadge":false,"pdfEmbedSupport":false,"jsClickFix":true},"isPublic":true,"isConsumer":false,"serverFlags":{"cajaBaseUrl":"//www.gstatic.com/caja","cajaDebugMode":false},"onepickBaseUrl":"https://docs.google.com","domainAnalyticsAccountId":"","plusPageId":"","signInUrl":"https://www.google.com/a/SelectSession?continue\u003dhttps://sites.google.com/a/chromium.org/dev/chromium-os/how-tos-and-troubleshooting/kernel-rebase-notes\u0026service\u003djotspot","analyticsAccountId":"UA-5484340-1","scottyUrl":"/_/upload","homePath":"/","siteNoticeUrlEnabled":null,"plusPageUrl":"","adsensePromoClickedOrSiteIneligible":true,"csiReportUri":"https://gg.google.com/csi","sharingId":"jotspot","termsUrl":"//www.google.com/intl/en/policies/terms/","gvizVersion":1,"editorResources":{"sitelayout":["https://ssl.gstatic.com/sites/p/56e332/system/app/css/sitelayouteditor.css"],"text":["https://ssl.gstatic.com/sites/p/56e332/system/js/codemirror.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codemirror_css.css","https://ssl.gstatic.com/sites/p/56e332/system/js/trog_edit__en.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/trogedit.css","/_/rsrc/1441580320000/system/app/css/editor.css","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codeeditor.css","/_/rsrc/1441580320000/system/app/css/camelot/editor-jfk-wlb.css"]},"sharingUrlPrefix":"/_/sharing","isAdsenseEnabled":true,"domain":"chromium.org","baseUri":"","name":"dev","siteTemplateId":false,"siteNoticeRevision":null,"siteNoticeUrlAddress":null,"siteNoticeMessage":null,"page":{"isRtlLocale":false,"canDeleteWebspace":null,"isPageDraft":null,"parentPath":"/chromium-os/how-tos-and-troubleshooting","parentWuid":"wuid:gx:72ecb36fa9c83ecd","siteLocale":"en","timeZone":"America/Los_Angeles","type":"text","title":"Kernel rebase notes","locale":"en","wuid":"wuid:gx:37b15b0681049aeb","revision":54,"path":"/chromium-os/how-tos-and-troubleshooting/kernel-rebase-notes","isSiteRtlLocale":false,"pageInheritsPermissions":null,"name":"kernel-rebase-notes","canChangePath":true,"state":"","properties":{},"bidiEnabled":false,"currentTemplate":{"path":"/system/app/pagetemplates/text","title":"Web Page"}},"canPublishScriptToAnyone":true,"user":{"keyboardShortcuts":true,"sessionIndex":"","guest_":true,"displayNameOrEmail":"guest","userName":"guest","uid":"","renderMobile":false,"domain":"","namespace":"","hasWriteAccess":false,"namespaceUser":false,"primaryEmail":"guest","hasAdminAccess":false},"gadgets":{"baseUri":"/system/app/pages/gadgets"}};
  webspace.page.breadcrumbs = breadcrumbs;

  
  var JOT_siteRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

</script>
<script type="text/javascript">
                window.jstiming.load.tick('scl');
              </script>
<meta name="title" content="Kernel rebase notes - The Chromium Projects" />
<meta itemprop="name" content="Kernel rebase notes - The Chromium Projects" />
<meta property="og:title" content="Kernel rebase notes - The Chromium Projects" />
<meta name="description" content="Home of the Chromium Open Source Project" />
<meta itemprop="description" content="Home of the Chromium Open Source Project" />
<meta id="meta-tag-description" property="og:description" content="Home of the Chromium Open Source Project" />
<style type="text/css">
</style>
<link rel="stylesheet" type="text/css" href="https://ssl.gstatic.com/sites/p/56e332/system/app/themes/beigeandblue/standard-css-beigeandblue-ltr-ltr.css" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/overlay.css?cb=beigeandblueundefineda100%25%25150goog-ws-leftthemedefaultstandard" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/camelot/allthemes-view.css" />
<!--[if IE]>
          <link rel="stylesheet" type="text/css" href="/system/app/css/camelot/allthemes%2die.css" />
        <![endif]-->
<title>Kernel rebase notes - The Chromium Projects</title>
<meta itemprop="image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<meta property="og:image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<script type="text/javascript">
                window.jstiming.load.tick('cl');
              </script>
</head>
<body xmlns="http://www.google.com/ns/jotspot" id="body" class=" en            ">
<div id="sites-page-toolbar" class="sites-header-divider">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-status" class="sites-status" style="display:none;"><div id="sites-notice" class="sites-notice" role="status" aria-live="assertive"> </div></div>
</div>
<div id="sites-chrome-everything-scrollbar">
<div id="sites-chrome-everything" class="">
<div id="sites-chrome-page-wrapper" style="direction: ltr">
<div id="sites-chrome-page-wrapper-inside">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-chrome-header-wrapper" style="height:auto;">
<table id="sites-chrome-header" class="sites-layout-hbox" cellspacing="0" style="height:auto;">
<tr class="sites-header-primary-row" id="sites-chrome-userheader">
<td id="sites-header-title" class="" role="banner"><div class="sites-header-cell-buffer-wrapper"><a href="https://www.chromium.org/" id="sites-chrome-userheader-logo"><img id="logo-img-id" src="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" alt="The Chromium Projects" class="sites-logo  " /></a><h2><a href="https://www.chromium.org/" dir="ltr" id="sites-chrome-userheader-title">The Chromium Projects</a></h2></div></td><td class="sites-layout-searchbox  "><div class="sites-header-cell-buffer-wrapper"><form id="sites-searchbox-form" action="/system/app/pages/search" role="search"><input type="hidden" id="sites-searchbox-scope" name="scope" value="search-site" /><input type="text" id="jot-ui-searchInput" name="q" size="20" value="" aria-label="Search this site" /><div id="sites-searchbox-button-set" class="goog-inline-block"><div role="button" id="sites-searchbox-search-button" class="goog-inline-block jfk-button jfk-button-standard" tabindex="0">Search this site</div></div></form></div></td>
</tr>
<tr class="sites-header-secondary-row" id="sites-chrome-horizontal-nav">
<td colspan="2" id="sites-chrome-header-horizontal-nav-container" role="navigation">
</td>
</tr>
</table>
</div>
<div id="sites-chrome-main-wrapper">
<div id="sites-chrome-main-wrapper-inside">
<table id="sites-chrome-main" class="sites-layout-hbox" cellspacing="0" cellpadding="{scmCellpadding}" border="0">
<tr>
<td id="sites-chrome-sidebar-left" class="sites-layout-sidebar-left initial" style="width:150px">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_7648876402527094" class="sites-embed" role="navigation"><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-projects" jotId="wuid:gx:10ae433dadbbab13" class="sites-navigation-link">Home</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/Home" jotId="wuid:gx:43582b9d2029d3af" class="sites-navigation-link">Chromium</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-os" jotId="wuid:gx:83df2ab1f8880ba" class="sites-navigation-link">Chromium OS</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_14720868319272995" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Quick links</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/for-testers/bug-reporting-guidelines" class="sites-navigation-link">Report bugs</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/developers/discussion-groups" class="sites-navigation-link">Discuss</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/system/app/pages/sitemap/hierarchy" jotId="wuid:gx:4b58a9a350ad12f" class="sites-navigation-link">网站地图</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19690813310444355" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Other sites</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://blog.chromium.org/" class="sites-navigation-link">Chromium Blog</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://code.google.com/chrome/extensions/" class="sites-navigation-link">Google Chrome Extensions</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="https://developers.google.com/chrome/chrome-frame/" class="sites-navigation-link">Google Chrome Frame</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19695218559354544" class="sites-embed" role="complementary"><h4 class="sites-embed-title"></h4><div class="sites-embed-content sites-embed-content-sidebar-textbox"><div dir="ltr"><span style="font-size:x-small">Except as otherwise </span><a href="http://developers.google.com/site-policies.html#restrictions"><span style="font-size:x-small">noted</span></a><span style="font-size:x-small">, the content of this page is licensed under a </span><a href="http://creativecommons.org/licenses/by/2.5/"><span style="font-size:x-small">Creative Commons Attribution 2.5 license</span></a><span style="font-size:x-small">, and examples are licensed under the </span><a href="http://src.chromium.org/viewvc/chrome/trunk/src/LICENSE" target="_blank"><span style="font-size:x-small">BSD License</span></a><span style="font-size:x-small">.<br /></span></div></div></div>
</td>
<td id="sites-canvas-wrapper">
<div id="sites-canvas" role="main">
<div id="goog-ws-editor-toolbar-container"> </div>
<div xmlns="http://www.w3.org/1999/xhtml" id="title-crumbs" style="">
<A href="/chromium-os" dir="ltr">Chromium OS</A>‎ &gt; ‎<A href="/chromium-os/how-tos-and-troubleshooting" dir="ltr">How Tos and Troubleshooting</A>‎ &gt; ‎
  </div>
<h3 xmlns="http://www.w3.org/1999/xhtml" id="sites-page-title-header" style="" align="left">
<span id="sites-page-title" dir="ltr" tabindex="-1" style="outline: none">Kernel rebase notes</span>
</h3>
<div id="sites-canvas-main" class="sites-canvas-main">
<div id="sites-canvas-main-content">
<table xmlns="http://www.w3.org/1999/xhtml" cellspacing="0" class="sites-layout-name-one-column sites-layout-hbox"><tbody><tr><td class="sites-layout-tile sites-tile-name-content-1"><div dir="ltr"><h2><a name="TOC-Overview"></a>Overview</h2><h3><a name="TOC-Flow"></a>Flow</h3><div>A kernel rebase consists of moving sets (ie, topics) of patches from one version to a later version.</div><div>The flow is:</div><div><ul><li>Separate current patches into topic branches</li><ul><li>git cherry-pick individual patches to common branches</li></ul><li>Rebase patches from old kernel version to new kernel version</li><ul><li>git rebase $new_version</li></ul><li>Merge new topics together on the new kernel version</li><ul><li>git merge $topics</li></ul></ul>This flow is iterative.  It can take a long time to cherry-pick all the changes into topics, then rebase, then merge.  In that time, more changes land which require a second or even third iteration of this sequence.<br /><h3><a name="TOC-Estimate-how-long-the-rebase-effort-will-take"></a>Estimate how long the rebase effort will take</h3></div><div>It took me 3 months to sort through about 5644 3.14 changes and rebase appropriately to 3.18.  And that was with help.  So I would estimate roughly 434 per week.</div><div>Really, ramping up on my git knowledge and settling on a set of useful tools took a significant amount of time, too.</div><h3><a name="TOC-Tools"></a>Tools</h3><div>Various git commands will be particularly important during the rebase.  gitk is a graphic tool that some folks use, but I used just the git command itself.</div><div><br /></div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code>git log --oneline --first-parent --reverse v3.14..m/master</code></div><div></div></div>This shows all the commits in our tree on top of v3.14.<div>--oneline shows just one line per commit: commit hash plus the one line summary.</div><div>--first-parent shows merge changes, but it excludes merge lineage (ie, all the changes that were actually being merged in).  Merges are rare after the rebase and are typically handled on a case by case basis.</div><div>--reverse shows the changes in the order they occur (oldest to newest) rather than the default order (newest to oldest).<br /><div>These parameters are the most important ones in my rebase (to 3.18).</div><div>Pipe to 'wc -l' shows how many commits you are dealing with.</div><div>Redirect to a file, say "gitlog.v3.14..", lets me examine the list in 'vi'.</div><div><br /></div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code>git show $COMMIT --oneline --name-only</code></div><div></div></div>--name-only shows the touched files.  This is important in determining which topic a change should be cherry-picked into.<br /><div><br /></div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code>set keywordprg=git\ show</code></div><div></div></div>in my ~/.vimrc file allows me to 'vi gitlog.v3.14..', position the cursor on the change_id, then "K" (the keyword program command in 'vi') runs 'git show' on that change_id.</div><div>This is useful for examining change details within the list of changes in which it appears.</div><div><br /></div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code>git rebase --onto master next topic</code></div><div></div></div>Rebase all changes between next and topic onto master, and move the current branch label (usually topic) to the resulting HEAD.<div>There were a number of times I decided to replay some subset of changes to a new head, and this is the way to do it.  I highly recommending closely examining 'git rebase --help', first.</div><div>It will basically say it changes this:</div><div><div></div></div><div class="sites-codeblock sites-codesnippet-block"><div><div><code>               o---o---o---o---o  master</code></div><div><code>                    \</code></div><div><code>                     o---o---o---o---o  next</code></div><div><code>                                      \</code></div><div><code>                                       o---o---o  topic</code></div></div><div></div></div>into this:<div><div></div></div><div class="sites-codeblock sites-codesnippet-block"><div><div><code>               o---o---o---o---o  master</code></div><div><code>                   |            \</code></div><div><code>                   |             o'--o'--o'  topic</code></div><div><code>                    \</code></div><div><code>                     o---o---o---o---o  next</code></div></div><div></div></div>Note that the master and next labels remain unchanged, but topic moves to the rebased HEAD.<div><br /></div><div>Did you screw up an important branch label with a bad rebase?</div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code>git reflog</code><br /><div></div><code>git reset --hard $change_ID</code></div><div></div></div>The reflog shows recent HEAD changes and the commands that changed them.  The first column is the resulting change_ID.<div>The reset changes the label to the specified change_ID.  --hard restores the files to that version.<br /><div><br /></div><div><br /><div><div><div class="sites-embed-align-right-wrapping-on"><div class="sites-embed-border-off sites-embed" style="width:250px;"><div class="sites-embed-content sites-embed-type-toc"><div class="goog-toc sites-embed-toc-maxdepth-6"><p>Contents</p><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Overview"><strong>1 </strong>Overview</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Flow"><strong>1.1 </strong>Flow</a></li><li class="goog-toc"><a href="#TOC-Estimate-how-long-the-rebase-effort-will-take"><strong>1.2 </strong>Estimate how long the rebase effort will take</a></li><li class="goog-toc"><a href="#TOC-Tools"><strong>1.3 </strong>Tools</a></li><li class="goog-toc"><a href="#TOC-Topic-Branches"><strong>1.4 </strong>Topic Branches</a></li><li class="goog-toc"><a href="#TOC-kernel-and-kernel-next-Repos"><strong>1.5 </strong>kernel and kernel-next Repos</a></li></ol></li><li class="goog-toc"><a href="#TOC-Rebase-process"><strong>2 </strong>Rebase process</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Step-1:-Add-upstream-mainline-stable-trees"><strong>2.1 </strong>Step 1: Add upstream mainline/stable trees</a></li><li class="goog-toc"><a href="#TOC-Step-2:-Set-up-Topic-branches"><strong>2.2 </strong>Step 2: Set up Topic branches</a></li><li class="goog-toc"><a href="#TOC-Step-3:-resync-Topic-Branches"><strong>2.3 </strong>Step 3: resync Topic Branches</a></li><li class="goog-toc"><a href="#TOC-Step-4:-sanity-check-Topic-Branches"><strong>2.4 </strong>Step 4: sanity-check Topic Branches</a></li><li class="goog-toc"><a href="#TOC-Step-5:-Mark-sync-in-master-branch"><strong>2.5 </strong>Step 5: Mark sync in master branch</a></li><li class="goog-toc"><a href="#TOC-Step-6:-Create-new-Topic-Branches"><strong>2.6 </strong>Step 6: Create new Topic-Branches</a></li><li class="goog-toc"><a href="#TOC-Step-7:-Rebase--base-Topic-branch-first"><strong>2.7 </strong>Step 7: Rebase -base Topic branch first</a><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Handling-Rebase-Conflicts"><strong>2.7.1 </strong>Handling Rebase Conflicts</a></li><li class="goog-toc"><a href="#TOC-Debugging-Boot"><strong>2.7.2 </strong>Debugging Boot</a></li></ol></li><li class="goog-toc"><a href="#TOC-Step-8:-Push--base-Topic-Branch"><strong>2.8 </strong>Step 8: Push -base Topic Branch</a></li><li class="goog-toc"><a href="#TOC-Step-9:-Rebase-other-Topic-branches"><strong>2.9 </strong>Step 9: Rebase other Topic branches</a></li><li class="goog-toc"><a href="#TOC-Step-10:-Merge-Topic-Branches"><strong>2.10 </strong>Step 10: Merge Topic Branches</a></li><li class="goog-toc"><a href="#TOC-Step-11:-Test-Merged-Branch"><strong>2.11 </strong>Step 11: Test Merged Branch</a></li><li class="goog-toc"><a href="#TOC-Step-12:-Change-the-manifests-for-kernel-next.git-and-ask-for-help"><strong>2.12 </strong>Step 12: Change the manifests for kernel-next.git and ask for help</a></li><li class="goog-toc"><a href="#TOC-Step-13:-Move-over-to-kernel.git-and-change-those-manifests"><strong>2.13 </strong>Step 13: Move over to kernel.git and change those manifests</a></li><li class="goog-toc"><a href="#TOC-Step-14:-Wait-and-debug"><strong>2.14 </strong>Step 14: Wait and debug</a></li></ol></li><li class="goog-toc"><a href="#TOC-Important-notes"><strong>3 </strong>Important notes</a></li></ol></div></div></div></div><font size="5">Source organization</font></div>
<div>
<div>
<h3><a name="TOC-Topic-Branches"></a><b><font size="3">Topic Branches</font></b></h3>
<p>The key to sanity when doing this is to do good topic branch split-ups. This reduces the scope of each branch to only cover a specific part of the kernel, or a specific set of functionality. <b><i>Multiple,smaller topic branches allow faster iterations.</i></b>  The following branches are in use for v3.0 and v3.2 rebase:</p>
</div>
</div>
<blockquote style="margin:0 0 0 40px;border:none;padding:0px">
<div>
<div>
<table border="1" bordercolor="#888" cellspacing="0" style="border-collapse:collapse;border-top-color:rgb(136,136,136);border-right-color:rgb(136,136,136);border-bottom-color:rgb(136,136,136);border-left-color:rgb(136,136,136);border-top-width:1px;border-right-width:1px;border-bottom-width:1px;border-left-width:1px">
<tbody>
<tr>
<td style="width:172px;height:68px"> chromeos-base-&lt;version&gt;</td>
<td style="width:497px;height:68px">This branch contains more or less all base changes we need to run ChromeOS on an x86 system: EFI, ACPI changes, build infrastructure, configs, and some of the chromeos-specific drivers we have picked up (should be very few left)</td>
</tr>
<tr>
<td style="width:172px;height:37px">chromeos-misc-&lt;version&gt;</td>
<td style="width:497px;height:37px">Kitchen sink for backported patches and misc other changes. It can sometimes be hard to decide what goes here vs in -base.</td>
</tr>
<tr>
<td style="width:172px;height:15px"> chromeos-gobi-&lt;version&gt;</td>
<td style="width:497px;height:15px">Our driver changes for qcserial and gobi. Given that gobi drivers have been rejected upstream we might have to carry this for the long run.</td>
</tr>
<tr>
<td style="width:172px;height:15px"> chromeos-verity-&lt;version&gt;</td>
<td style="width:497px;height:15px"> Verity device mapper module. This branch should hopefully go away once the patches have been accepted upstream.</td>
</tr>
<tr>
<td style="width:172px;height:15px"> chromeos-tegra-&lt;version&gt;</td>
<td style="width:497px;height:15px">All the Nvidia ARM Tegra changes. Quite a stack of patches that are slowly going upstream.</td>
</tr>
<tr>
<td style="width:172px;height:15px"> chromeos-input-&lt;version&gt;</td>
<td style="width:497px;height:15px"> Mouse/Touch/trackpad and related subsystem drivers (e.g. multi-touch support).</td></tr></tbody></table><br /></div></div></blockquote>Update from my 3.14-3.18 experience:<div><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><table border="1" bordercolor="#888" cellspacing="0" style="border-collapse:collapse;border-color:rgb(136,136,136);border-width:1px"><tbody><tr><td style="width:220px;height:14px"> chromeos-base-&lt;version&gt;</td><td style="width:496px;height:14px"> chromeos/config and chromeos/scripts changes</td></tr><tr><td style="width:220px;height:14px"> chromeos-misc-&lt;version&gt;</td><td style="width:496px;height:14px"> Miscellaneous software related patches: futex, ftrace, time, genalloc, FS, etc.</td></tr><tr><td style="width:220px;height:29px"> chromeos-platform-&lt;version&gt;</td><td style="width:496px;height:29px"> Similar to misc, but more hardware specific.  power, suspend, irq, NAND, MMC, MTD, ACPI, IIO, etc.</td></tr><tr><td style="width:220px;height:48px"> chromeos-drm-&lt;version&gt;</td><td style="width:496px;height:48px"> drivers/gpu/drm and related changes.  For 3.18, we dropped all 3.14 patches, and<br />Stephane provided a new set for 3.18.</td></tr></tbody></table><br /></blockquote><blockquote style="margin:0 0 0 40px;border:none;padding:0px"><div><div><br /></div>
</div>
</blockquote>
<div>
<div>
<p>Add new topic branches where there is active development. e.g. we might add chromeos-wifi-&lt;version&gt; for wifi drivers since they have plenty of backports.</p>
<h3><a name="TOC-kernel-and-kernel-next-Repos"></a>kernel and kernel-next Repos</h3>
<div>Today we have two kernel repos: kernel and kernel-next. The historical reason is repo tools don't allow to track two branches of one git repo in two locations in the directory structure. We needed two different base versions for quite a while -- one for x86 and one for ARM. We have since merged the bases, but "kernel-next" tree is still around.<br />
</div>
<div><br />
</div>
<div>The overview of the steps I work with the repos is:<br />
<ol><li>Do the original topic-branch split-up in the kernel.git repo since the patches reside on the main branch.</li>
<li>Move the topic branches to the kernel-next repo and do all the rebase work in kernel-next repo.</li>
<li>Merge the topic branches together to a combined branch and ask others to test the combined branch in kernel-next repo. <br />
</li>
<li>Warn "Testers" the topic-branches will get rebased and to NOT keep significant work on top of kernel-next combined branch.<br />
</li>
</ol>
</div>
<h2><a name="TOC-Rebase-process"></a><font size="5">Rebase process</font></h2>
<h3><a name="TOC-Step-1:-Add-upstream-mainline-stable-trees"></a><b><font size="3">Step 1: Add upstream mainline/stable trees</font></b></h3>
<div style="font-family:courier new,monospace;margin-left:40px"></div>
<div class="sites-codeblock sites-codesnippet-block">
<div style="font-family:courier new,monospace;margin-left:40px"><code>git remote add mainline git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git</code></div>
<div style="font-family:courier new,monospace;margin-left:40px"><code>git remote add linux-stable git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git</code></div><div style="margin-left:40px"><font color="#006000" face="monospace">git remote update mainline<br /></font>
<code style="font-family:courier new,monospace">git remote update linux-stable</code></div>
</div>
<br />
<div><br />
</div>
<div>This makes "interesting" tags available from upstream sources. This step can be done at any time before we need to use tags in upstream repos.<br />
</div>
<h3><a name="TOC-Step-2:-Set-up-Topic-branches"></a><b><font size="3">Step 2: Set up Topic branches</font></b></h3>
<div>Splitting the tree up into topic branches is something that you rarely have to do from scratch. This document will assume those exist.</div>
<div><br />
</div>
<div>Maintain the topic branches over time, syncing up from the main tracking branch every now and then and pushing them to the server. <i>Others should NOT base their work off of the topic branches.</i><br />
<br />
'git-new-workdir'  checks out a specific branch into a new directory but uses the same backing .git object storage. This allows us to check out each topic branch into one directory per topic and we won't have to sync up the .git contents when done.<br />
<br />
<b>WARNING: NEVER use git-new-workdir for a branch that you have checked out somewhere else, it is a recipe for disaster.</b>  In other words, delete the "split" directory (and it's children) created below before checking out any of the topic branches in some other location.<br />
<br />
</div>
<div>Under <span style="font-family:courier new,monospace">src/third_party/kernel/</span> , build the "topic branches":<span style="font-family:courier new,monospace"><br />
</span>
<div style="margin-left:40px;font-family:courier new,monospace"></div>
<div class="sites-codeblock sites-codesnippet-block">
<div style="margin-left:40px;font-family:courier new,monospace"><code>cd src/third_party/kernel</code><br />
<code>mkdir split</code><br />
<code>cd split</code><br />
<code>for d in base gobi misc verity tegra ; do</code><br />
</div>
<div style="margin-left:40px;font-family:courier new,monospace">
<div style="margin-left:40px"><code>/usr/share/git/contrib/workdir/git-new-workdir  ../../../../.repo/projects/src/third_party/kernel/files.git ${d} cros/chromeos-${d}-3.0</code><br />
<code>cd ${d}</code><br />
<code>git checkout -b chromeos-$d-3.0 cros/chromeos-$d-3.0</code><br />
<code>cd ..</code><br />
</div>
</div>
<div style="margin-left:40px"><span style="font-family:courier new,monospace"><code>done</code></span></div>
</div>
<br />
</div>
<div>
<div><br />
In case not all the topic branches are based on the same tree, run:<br />
<div style="margin-left:40px"><span style="font-family:courier new,monospace"><code>git rebase --onto v3.0 v3.0.3 HEAD</code></span><br />
</div>
<br />
in order to rebase all changes in "HEAD" from v3.0.3 back to v3.0.<br />
<br />
Then open one terminal window for each topic 
branch and two extra windows:<br />
<ul><li>add <font face="'courier new', monospace"><code>alias gp="git cherry-pick"</code></font> to ~/.bash_profile in the chroot (used below to shorten the command lines)<br />
</li>
<li>In the first 5 windows, cd into one of the 5 topic branch directories.</li>
<li>In the 6th window, to run/view <span style="font-family:courier new,monospace">git log <span style="font-family:arial,sans-serif">command (listed below)</span><br />
</span></li>
<li>Use the 7th for misc git commands to determine where conflicts are coming from, etc.</li></ul>
</div>
</div>
<div><p><font face="arial, sans-serif">In the 6th window </font><font face="arial, sans-serif">find the "sync point" (last commit that was cherry picked) with:<br />
</font></p>
<div style="margin-left:40px">
<div class="sites-codeblock sites-codesnippet-block"><font face="arial, sans-serif"><span style="font-family:courier new,monospace"><code>git log --oneline cros/chromeos-3.0</code></span></font></div>
</div>
<br />
</div>
<font face="arial, sans-serif">and search for "Merge".</font><font face="arial, sans-serif"> The "sync point" commit should look something like:</font><br />
</div>
<div>
<div><font face="arial, sans-serif"><span style="font-family:courier new,monospace"><span>    </span>e8f848b Merge branches 'chromeos-base-3.0', 'chromeos-misc-3.0', 'chromeos-verity-3.0', 'chromeos-gobi-3.0' and 'chromeos-tegra-3.0' into chromeos-3.0</span></font><br />
<p><font face="arial, sans-serif">One can also look at "git log" for each of the topic branches to find out the last cherry-picks into each of those and confirm the SHA1 </font><font face="arial, sans-serif">matches.</font></p>
</div>
<div>
<h3><a name="TOC-Step-3:-resync-Topic-Branches"></a><font size="3">Step 3: resync Topic Branches</font></h3>
<p>
Next, produce a list of commits that need to be cherry picked from cros/chromeos-3.0 into the topic branches:</p>
</div>
<div style="margin-left:40px">
</div><div style="margin-left:40px"><div class="sites-codeblock sites-codesnippet-block"><font face="'courier new', monospace"><code>git log </code></font><font color="#006000" face="monospace"><code>--date=short --pretty=format:"gp %h # %cd %s"</code></font><font face="'courier new', monospace"><code> </code><i><code>lastsyncpoint</code></i><code>..cros/chromeos-3.0 | </code></font><span style="font-family:courier new,monospace"><code>tac</code></span></div></div>
<div>
</div><p><font face="arial, sans-serif">Redirect output to a file or pipe into less if it's long.</font>
<font face="arial, sans-serif">
In the order listed, copy and paste each line of the output into one "corresponding" topic branch window. The "gp" alias will cherry-pick that commit, and everything after the '#' will be ignored.   Merge conflicts may occur if "gp" was accidentally pasted in the wrong window OR the change doesn't belong in that topic branch. Either way, </font><font face="'courier new', monospace">use git reset --hard </font><font face="arial, sans-serif">to "undo" the failed cherry-pick in order to retry on a different topic branch.<br /><br /></font></p><font face="arial, sans-serif">[<i>Some merge conflicts are likely to occur 
and require fix up if the original commit is based on a different 
release (e.g. v3.0.13) than the topic branch is based on (e.g. v.3.0). If topic branches were based on the same stable release (e.g. v3.0.13) at this point, such conflicts wouldn't occur.</i>]</font>
<div>
<h3><a name="TOC-Step-4:-sanity-check-Topic-Branches"></a><font size="3">Step 4: sanity-check Topic Branches</font><br />
</h3>
Here's how to make sure the local topic branches contain all commits (assumes chromeos-3.0 is based on v3.0.13):<br />
</div>
<div><br />
</div>
<div style="font-family:courier new,monospace;margin-left:40px">
<div class="sites-codeblock sites-codesnippet-block"><code>git checkout -b mergetest v3.0.13</code><br />
<code>git merge chromeos-base-3.0</code><br />
<code>git merge chromeos-misc-3.0</code><br />
<code>git merge chromeos-verity-3.0</code><br />
<code>git merge chromeos-gobi-3.0</code><br />
<code>git merge chromeos-tegra-3.0</code></div>
<br />
</div>
<div><br />
Fix up (using $EDITOR), then <code>git add</code> and <span style="font-family:courier new,monospace"><code>git commit</code></span> (to mergetest branch) conflicts between each merge.<br />
<br />
[Digression: Unfortunately, combining the topic branches into one merge command failed:<br />
<div style="margin-left:40px"><span style="font-family:courier new,monospace">git merge chromeos-{base,misc,verity,gobi,tegra}-3.0</span><br />
<br />
</div>
We think this is either a git merge bug or the merge conflicts in our case prevented the octopus merge from running.]<br />
</div>
<div><br />
Finally, we get to verify with:<br />
<div style="margin-left:40px">
<div class="sites-codeblock sites-codesnippet-block"><span style="font-family:courier new,monospace"><code>git diff cros/chromeos-3.0</code></span></div>
<br />
</div>
<br />
The diff should be empty. If it isn't, check first if one of the conflicts was resolved "unfavorably" and run <span style="font-family:courier new,monospace">git commit --amend</span> to preserve the update. If not, something is missing from a topic branch. Hunt it down and add to the topic branch.<br />
</div>
<div>
<div>
<h3><a name="TOC-Step-5:-Mark-sync-in-master-branch"></a><font size="3">Step 5: Mark sync in master branch</font></h3>
</div>
To indicate in the master branch the points in time where 
a topic branch sync occurred,  re-merge all the topic branches into the main 
branch:<br />
<b style="color:rgb(255,0,0)">  TBD [ git commands to "re-merge into main branch" ]</b><br />
<br />
Since the diff in Step 4 was empty, this results in an empty 
merge changeset that will be used as a marker for the next time one has to "resync". This is the same "mark" (searching for "Merge") was used in Step 2.<br />
</div>
<h3><a name="TOC-Step-6:-Create-new-Topic-Branches"></a><b><font size="3">Step 6: Create new Topic-Branches</font></b></h3>
<p>This is straight forward:</p>
</div>
<div class="sites-codeblock sites-codesnippet-block">
<div><span style="font-family:courier new,monospace"><code>for b in base misc gobi verity tegra ; do</code></span><br style="font-family:courier new,monospace" />
</div>
<div>
<div style="margin-left:40px"><span style="font-family:courier new,monospace"><code>git checkout -b chromeos-${b}-3.2 chromeos-${b}-3.0</code></span><br style="font-family:courier new,monospace" />
</div>
<span style="font-family:courier new,monospace"><code>done</code></span><br />
</div>
</div>
<br />
No need to use the git-new-workdir.
<p>
</p>
<h3><a name="TOC-Step-7:-Rebase--base-Topic-branch-first"></a><b><font size="3">Step 7: Rebase -base Topic branch first<br />
</font></b></h3>
<div>
<p>Rebase sounds simple. But it can get really really messy in some cases. Take it easy, be ready to throw away your work a couple of times and take plenty of notes.  Do one branch at a time.</p>
<p>We start with the -base branch since it contains the build infrastructure that's needed to build the kernel as an ebuild. This allows x86 builds/testing immediately. After <font face="'courier new', monospace">chromeos-base-3.2</font> is done,  boot that on an x86 system to confirm. Then rebase each branch, one-by-one and rebuild the kernel after each branch is done.</p>
<p>So, then in your main work dir:<br />
</p>
<div class="sites-codeblock sites-codesnippet-block"><code>git checkout chromeos-base-3.2</code><br />
<code>git rebase v3.2 </code></div>
<p><br />
git will stop on conflicts, you resolve them, <span style="font-family:courier new,monospace">git add</span> (don't commit), and <span style="font-family:courier new,monospace">git rebase --continue</span>. If conflicts get ugly, see "Handling Rebase Conflicts" advice below. When the rebase is done, do NOT commit until the result compiles. It's likely some kernel internal API changed and a merge was still referring to the old API. (e.g. v3.0 -&gt; v3.2 had INIT_GROUP_RWSEM() change to INIT_THREADGROUP_FORK_LOCK()). One can compile with:</p>
<div class="sites-codeblock sites-codesnippet-block"><code>FEATURES="noclean" emerge-$B chromeos-kernel</code></div>
<p>And once that compiles, try it. If the system boots, then run <font face="'courier new', monospace">git commit </font>for each file that was modified. Later, when we run "rebase -i" below, we will re-order and "squash" or "fixup" each of those changes. Prefix each commit with something like "REBASE_FIXUP" so it's obvious which commits are fixups that need to be squashed.</p>
<p>Make sure to document changes made to resolve conflicts AND to fix compile failures in the commit message. This can be simple as appending a one-liner like this to the commit message:</p>
<p>
</p>
<div style="margin-left:40px"><code>[$WHOAMI: resolved trivial conflicts for 3.2] </code><br />
<code>Signed-off-by: Chromium KernDev &lt;kerndev@chromium.org&gt;</code><br />
</div>
<div><br />
</div>
<div>Once kernel is booting with the given topic branch, run:</div>
<div class="sites-codeblock sites-codesnippet-block"><code>git rebase -i v3.2</code></div>
<p>The list of commits on the topic branch will be available to edit. See the comment at the bottom of that file to understand the options besides the default "pick".</p>
<p>Additional Cleanups to do while running git rebase command above:</p>
<ol><li><b>squash chromeos/config commits</b>: first just reorder commits together in <font face="'courier new', monospace">git rebase -i</font> commit list, then mark those commits as <font face="'courier new', monospace">fixup</font> instead of <font face="'courier new', monospace">pick</font>.</li>
<li><b>Drop reverted commits</b>:  If a change is later on reverted, delete both the pick line for the original and revert commits.</li>
<li><b>Clean up Commit log entries</b>: Someone missed the CHROMIUM: prefix? add it. Misformatted changelogs? Fix them up a bit. Etc.</li>
</ol>
Re-run the git rebase command as often as necessary to reduce the number of patches to a minimum. Add more topic branches if necessary.</div>
<h4><a name="TOC-Handling-Rebase-Conflicts"></a>Handling Rebase Conflicts</h4>
</div>
<div>As shown above, on the first try, run <font face="'courier new', monospace">git rebase &lt;newversion&gt;</font><font face="arial, sans-serif"> and see how ugly the conflicts get. Really lucky folks will get a few conflicts that can be resolved easily. The rest of us will find conflicting upstream changes.</font></div>
<div><font face="arial, sans-serif"><br />
<div>It's possible conflicts are due to a change appearing in multiple branches. Check and compare the contents of each topic branch with</div>
<div><br />
</div>
<div></div>
<div class="sites-codeblock sites-codesnippet-block">
<div><code>git log --oneline v3.2.. </code></div>
<div></div>
</div>
<br />
Don't understand a conflict?  Backported commits get weird. First find the related commits using one or more of the following:<br />
<br />
</font>
<div style="margin-left:40px"><font face="arial, sans-serif"><code>git log -S Sym v3.2 -- drivers/net/<span>   </span># list commits touching "Sym" in v3.2 branch under drivers/net</code></font></div>
<div style="margin-left:40px"><font color="#006000" face="monospace">git diff HEAD -- drivers/net/r8169.c  # compare diff with current branch contents - NOT a 2-way diff<br />
</font>
<font face="arial, sans-serif"><code>git log --stat<span><span> chromeos-base-3.0 -- drivers/gpu/drm/<span>  </span></span></span># find "big" diffs in </code></font><font face="arial, sans-serif"><code><span><span>chromeos-base-3.0</span></span></code></font><br />
</div>
<p><span style="font-family:arial,sans-serif"> and then look at them with "git show":</span></p>
<font face="arial, sans-serif">
For the very bad cases, do the same as during the split-up into topic branches, run </font><font face="'courier new', monospace"><code>git log --oneline | tac | ...</code> </font><font face="arial, sans-serif"> on the original branch and copy and paste each and every change over to have full control over what happens.<br />
<br />
In some cases it's easier to apply the contents with:<br />
</font>
<div style="margin-left:40px"><font face="'courier new', monospace" style="font-family:courier new,monospace"><code>git show &lt;changeset&gt; | patch -p1</code></font><br />
<font face="arial, sans-serif" style="font-family:courier new,monospace"><code># fix up failed hunks</code></font><br />
<font face="'courier new', monospace" style="font-family:courier new,monospace"><code>git commit -a -c &lt;original changeset&gt;</code></font><br />
</div>
<font face="arial, sans-serif"><br />
</font></div>
<div><font face="arial, sans-serif">There are probably more clever ways of fixing up conflicts with git. But this method mostly works.<br />
</font>
<h4><a name="TOC-Debugging-Boot"></a><font face="arial, sans-serif"><b>Debugging Boot</b></font></h4>
<font face="arial, sans-serif">Since dm-verity isn't entirely upstream, first is to build and install an image with </font><font face="'courier new', monospace">--noenable_rootfs_verification</font><span style="font-family:arial,sans-serif">. This will allow us to update the kernel for testing chromeos-base-3.2:</span></div>
<div>
<div style="margin-left:40px"><font face="arial, sans-serif"><code>./build_image --board=$B --test --noenable_rootfs_verification</code></font><br />
</div>
<font face="arial, sans-serif">
<div><font face="arial, sans-serif"><br />
</font></div>
Once we merge in chromes-verity-v3.2 topic branch, then we can rebuild normally.</font></div>
<div><font face="arial, sans-serif"><br />
Then get the kernel to spew it's verbage to the console. Here's the list the parameters to modify:<br />
</font>
<ul><li><font face="'courier new', monospace">quiet</font><font face="arial, sans-serif"> : delete this one</font></li>
<li><font face="'courier new', monospace">loglevel=1</font><font face="arial, sans-serif"> : replace with </font><font face="'courier new', monospace">loglevel=7</font><font face="arial, sans-serif"> or </font><font face="'courier new', monospace">debug</font></li>
<li><font face="'courier new', monospace">console=tty2</font><font face="arial, sans-serif"> : replace with </font><font face="'courier new', monospace">console=tty1.</font></li>
<li><font face="arial, sans-serif">Also add </font><font face="'courier new', monospace">console=ttyS0</font><font face="arial, sans-serif"> if serial console is available (<a href="https://www.chromium.org/chromium-os/servo">servo</a> or mini-PCIe serial card)</font></li></ul>
</div>
<div><font face="arial, sans-serif">One can modify the parameters in two places depending on which tools are used to push kernels:<br />
</font>
<ol><li><font face="'courier new', monospace">update_kernel.sh : vi ~/trunk/src/build/images/$B/latest/config.txt</font></li>
<li><font face="'courier new', monospace">build_image.sh : vi ~/trunk/src/scripts/build_kernel_image.sh</font><font face="arial, sans-serif"> and modify where this script writes out parameters to config.txt. Then (re)run build_image as shown above.</font></li>
</ol>
</div>
<div>
<h3><a name="TOC-Step-8:-Push--base-Topic-Branch"></a>Step 8: Push -base Topic Branch</h3>
<p><i><b>Before pushing your branch, contact </b></i><b><i><a href="https://groups.google.com/a/chromium.org/group/chromium-os-dev" target="_blank">Chromium OS dev</a></i></b><i><b> mailing list to request a push of a kernel.org/linus tag (e.g. v3.2) to kernel-next and kernel repos AND permissions to push a new branch to kernel-next and kernel repos. Please include a reference to this page so people understand what you are asking for.</b></i></p>
<p>Setup and push to chromium.org repo commands:</p>
</div>
<div class="sites-codeblock sites-codesnippet-block">
<div><code>git remote add kernel-ssh https://chromium.googlesource.com/chromiumos/third_party/kernel.git</code><br />
<code>git remote add kernel-next-ssh https://chromium.googlesource.com/chromiumos/third_party/kernel-next.git</code></div>
<div><code>git push kernel-next-ssh chromeos-base-3.2</code></div>
</div>
<div>
<p>If the chromeos-base-X.Y branch needs another rebase or drop some commits/whatever, push the branch again. If you haven't yet, also push the previous release branches (can be one command if preferred) that have been sync'd:</p>
<div></div>
<div class="sites-codeblock sites-codesnippet-block">
<div><code>git push kernel-next-ssh chromeos-gobi-3.0 </code></div>
<div>
<div><code>git push kernel-next-ssh chromeos-misc-3.0 </code></div>
</div>
<div>
<div><code>git push kernel-next-ssh chromeos-verity-3.0 </code></div>
</div>
<div><code>git push kernel-next-ssh chromeos-tegra-3.0</code></div>
</div>
</div>
<h3><a name="TOC-Step-9:-Rebase-other-Topic-branches"></a><font face="arial, sans-serif" size="3">Step 9: Rebase other Topic branches</font></h3>
<p>Topic branches other than -base, depend on -base. So we need to do the rebase slightly differently. -misc topic branch is used in the examples below but the process should be the same for any topic branch. Instructions here are essentially the same as "<b><i>Rebase -base Topic branch first</i></b>" step.</p>
<div class="sites-codeblock sites-codesnippet-block"><code>git checkout chromeos-misc-3.2</code><br />
<code>git rebase v3.2</code></div>
<br />
Fix up merge conflicts. Commit each file touched separately. Don't build (yet). Then squash fixups/cleanup into original commits with:
<div><br />
<div class="sites-codeblock sites-codesnippet-block"><code>git rebase -i v3.2</code><br />
</div>
<div><br />
</div>
Now build/test/ using a "junk branch" to park commits on:</div>
<div><br />
</div>
<div>
<div class="sites-codeblock sites-codesnippet-block"><code>git checkout -b mergetest chromeos-base-3.2</code><br />
<code>git merge chromeos-misc-3.2</code></div>
<br />
<div>Do the previously described build/boot/fixup/commit cycle until things look good (enough). Then we need to bring those changes back into the original topic branch we are working.</div>
<div><br />
</div>
<div>
<div>
<div class="sites-codeblock sites-codesnippet-block"><code>git checkout chromeos-misc-3.2</code><br />
<code>git log mergetest    # in one window</code><br />
<code>git cherry-pick &lt;mergetest commits&gt; # in another window</code></div>
</div>
<div><br />
</div>
<div>At this point. it's possible conflicts are due to a change appearing in multiple branchs. When working on a topic branch (checked out), check/record the contents of that topic branch with:</div>
<div><br />
</div>
<div>
<div></div>
</div>
<div class="sites-codeblock sites-codesnippet-block">
<div>
<div><code>git log --oneline v3.2.. </code></div>
</div>
<div></div>
</div>
<br />
<div>And as usual, squash, drop, or fix up and commit cleanups with "-i" parameter:</div>
<div><br />
</div>
<div class="sites-codeblock sites-codesnippet-block">
<div><code>git rebase -i v3.2</code></div>
</div>
<p>When done, tree builds and boots on a machine, then push the tree to kernel-next (or kernel) with:</p>
<div class="sites-codeblock sites-codesnippet-block">
<code>git push kernel-next-ssh chromeos-misc-3.2</code>
</div>
<h3><a name="TOC-Step-10:-Merge-Topic-Branches"></a><b style="font-family:arial,sans-serif;font-size:medium">Step 10: Merge Topic Branches</b></h3>
<div><font face="arial, sans-serif" size="2">Merge all the branches together (like you did at the end of the topic branch splitup), then try compiling and see how much is broken. e.g.:</font></div>
<div><font face="arial, sans-serif" size="2"><br />
</font></div>
<div></div>
<div class="sites-codeblock sites-codesnippet-block">
<div><font face="arial, sans-serif" size="2"><code>git checkout -b chromeos-3.2 chromeos-base-3.2</code></font></div>
<div><font face="arial, sans-serif" size="2"><code>git merge </code><code>chromeos-misc-3.2</code></font></div>
<div><font face="arial, sans-serif" size="2"><code>git merge chromeos-gobi-3.2</code></font></div>
<div><font face="arial, sans-serif" size="2"><code>git merge chromeos-verity-3.2</code></font></div>
<div><font face="arial, sans-serif" size="2"><code>git merge chromeos-input-3.2</code></font></div>
</div>
<div><font face="arial, sans-serif" size="2"><br />
</font></div>
Expect to fix ups conflicts/mistakes in earlier steps:<br />
<br />
<ol><li>commit each fixed file into the merged-together branch with "FIXUP" prefix (so they are easy to find later).</li>
<li>find the topic branch which has the conflicting change:<br />
<code>git log -S &lt;symbol&gt; -- &lt;filename&gt; # find candidate commits which touch &lt;symbol&gt;</code><br />
<code>git show &lt;SHA1&gt;   # confirm this is the conflict</code></li>
<li>Checkout the topic branch with the offending &lt;SHA1&gt;.</li>
<li>cherry pick the FIXUP &lt;SHA1&gt; into that topic branch.</li>
<li>git rebase -i v3.2 and squash the FIXUP into the commit that introduced the problem.</li>
</ol>
<div>The result is less noise in the change log, a cleaner history, and the branch will be more bisectable. </div>
<div><br />
</div>
<div>Then delete (or reset to pre-merge state) the "merge branch" (chromeos-3.2 in above example) and redo the merge from scratch. If you move the old branch aside, you can diff the two end results and make sure they are the same.</div>
<h3><a name="TOC-Step-11:-Test-Merged-Branch"></a>Step 11: Test Merged Branch</h3>
<div>The very first testing is to see if the system even comes up. It is easier to work with just one system on your desk. Once that comes up, suspend-resumes and reboots cleanly, I kick off a handful of labtest runs of bvt and regression.</div><div>
<div>
<h3><a name="TOC-Step-12:-Change-the-manifests-for-kernel-next.git-and-ask-for-help"></a><font face="arial, sans-serif" size="3">Step 12: Change the manifests for kernel-next.git and ask for help</font></h3>
</div>
<div><font face="arial, sans-serif" size="2">Send out a PSA saying "switching kernel-next over to track chromeos-X.Y" on chromium-os-dev, and change the internal and external manifests to track the new branch by default. I normally do this before I ask others to start pitching in on testing since it makes it easier to make sure you're tracking the right sources.</font></div>
<p><font face="arial, sans-serif" size="2">Also, this is the time when I start asking various subteams and other team members to start pitching in and testing the new kernel on whatever hardware they have. For 3.0, I created a large number of bugs in the bugtracker for sign-off, which worked quite well. I made those bugs blockers of the root "rebase to 3.0" bug.</font></p><div><font face="arial, sans-serif" size="2"><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code>cd ~/trunk/.repo</code></div><div><code>git branch   # see which branches are available</code></div><div><code>git checkout default</code></div><div><code>git pull</code></div><div><code>git branch update-kernelnext</code></div><div><code>$EDITOR oldlayout.xml  # update kernel-next version</code></div><div><code>git diff # review change</code></div><div><code>git commit  # "kernel-next: move to chromeos-3.2 branch"</code></div><div><code>git push origin HEAD:refs/for/master</code></div></div></font></div><h3><a name="TOC-Step-13:-Move-over-to-kernel.git-and-change-those-manifests"></a><font face="arial, sans-serif">Step 13: Move over to kernel.git and change those manifests</font></h3>
<p><font face="arial, sans-serif">Once testing in kernel-next.git look reasonably stable, the branches are clean (don't contain too much cruft), the time has come to move the branches back to the kernel.git repo. Use "<span style="font-family:courier new,monospace">git push</span>" to the kernel.git repo (appropriate permissions needed in gerrit):</font></p><div><font face="arial, sans-serif"><div class="sites-codeblock sites-codesnippet-block"><code>git push kernel-ssh chromeos-3.2</code></div></font></div><p><span style="font-family:arial,sans-serif">When the pushed branch looks good, update the manifest to point to the new branch just like for kernel-next. Send PSAs  to chromium-os-dev when before, during, and after changing the manifest:</span></p><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code>cd ~/trunk/.repo/manifests/</code></div><div><code># updating public manifest requires SSH access</code></div><div><code>git remote add manifest-ssh https://chromium.googlesource.com/chromiumos/manifest.git</code></div><div><code>git remote update</code></div><div><code>git branch -a  # see which branches are available</code></div><div><code>git checkout remotes/manifest-ssh/master</code></div><div><code>git branch update-kernel</code></div><div><code>git checkout update-kernel</code></div><div><code>$EDITOR oldlayout.xml  # update kernel version</code></div><div><code>git diff # review change</code></div><div><code>git commit  # "kernel: move to chromeos-3.2 branch"</code></div><div><code>git push manifest-ssh HEAD:refs/for/master</code></div><div><code><br /></code></div><div><code># internal manifest update: git push origin HEAD:refs/for/m</code><code>aster</code></div><div></div></div><br /><div>The above will create a gerrit change that needs to be reviewed/approved.</div><div><br /></div><div>(<i>Reminder: ChromeOS folks will also need to update manifest-internal</i>)</div>
<h3><a name="TOC-Step-14:-Wait-and-debug"></a><font face="arial, sans-serif">Step 14: Wait and debug</font></h3>
<div><font face="arial, sans-serif">Once the new kernel tree is in production, you will surely start hearing about problems. Have fun! :) Usually it's a smaller number of problems. If things look really bad, the manifest can always be switched back to the old branch.</font></div>
<h2><a name="TOC-Important-notes"></a><font face="arial, sans-serif" size="5"><b>Important notes</b></font></h2>
<div>
<ul><li><b style="font-family:arial,sans-serif">DOCUMENT YOUR WORK! </b><font face="arial, sans-serif">This is extremely important. If you have to touch up a commit, document it! The way to do it is in the commit message, adding your own Signed-off-by with a quick one-line comment above. For example:<br />
<span style="background-color:rgb(239,239,239)"><br />
<font color="#006000" face="monospace"><span style="line-height:13px">commit 462fd39525eb3221d320ff3f0eaaddec1ed28a80</span></font></span></font></li>
<li>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>Author: Yen Lin &lt;yelin@nvidia.com&gt;</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>Date:   Thu Aug 18 10:14:03 2011 -0700</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><br />
</div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    CHROMIUM: arm: tegra: reserve lp0_vec, fb and carveout</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    </code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    The fb, fb2 and carveout memory reserved are from high address memory.</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    That means with the current u-boot "mem=384M@0M nvmem=128M@384M mem=512M@512M"</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    cmdline parameter, there will be a 128MB hole wasted.</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    </code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    BUG=chrome-os-partner:5501</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    TEST=hot-plug HDMI then perform suspend/resume LP0</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    </code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    Change-Id: I1e8877623e62afa7f1a3ad0dd6938e83db5bd188</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    Signed-off-by: Yen Lin &lt;yelin@nvidia.com&gt;</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    Reviewed-on: http://gerrit.chromium.org/gerrit/6290</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    Reviewed-by: Bryan Freed &lt;bfreed@chromium.org&gt;</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    Tested-by: Bryan Freed &lt;bfreed@chromium.org&gt;</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    [olofj: split up in common.c change and board change, and cleanup]</code></div>
<div style="font-family:arial,sans-serif;line-height:13px;text-align:left;background-color:rgb(239,239,239)"><code>    Signed-off-by: Olof Johansson &lt;olofj@chromium.org&gt;</code></div>
</li></ul>
<ul><li style="text-align:left"><span style="font-family:arial,sans-serif">Likewise, just keep a short log of the patches that you drop due to conflicts at rebase, so you can come back and revisit them when the branch is done.<br />
<br />
</span></li>
<li style="text-align:left"><span style="font-family:arial,sans-serif">Keep track of which patches didn't apply, so you can tell people what work needs to be done. For example, I have traditionally not made much of an effort to bring wifi patches forward, since I know most of them are backports and Sam and Paul have been doing a good job of re-syncing it (they are the ones who know how to run the tests, and more importantly, parse the test results, in the first place). But keep a log of it, so you know who to ask for help later on.<br />
<br />
</span></li>
<li style="text-align:left"><span style="font-family:arial,sans-serif">During split-up, you might realize that someone has done a change that touches several topic branches. In most cases, this is a time when it makes sense to split up the commit into several ones. Typical case is when someone did a config change as part of a code change, or someone changed both ARM board code and a driver as one change. Split the commit and fixup the commit message as appropriate here. Use your judgement and taste for what is reasonable to do.<br />
<br />
</span></li>
<li style="text-align:left"><span style="font-family:arial,sans-serif">Compile often during rebase to catch build errors as soon as they are introduced as possible. If you miss them, then fix them up, commit into a separate change, and then go back and squash that change in with the offending commit (documenting the fixup in the Signed-off-by trail just like with other edits).<br />
<br />
</span></li>
<li style="text-align:left"><span style="font-family:arial,sans-serif">Once you move the code over to kernel.git, make sure noone is commiting to kernel-next.git. This causes pain if you want to keep the two trees in sync since things will merge in different order instead of just fast-forward when you merge over, and overall it can cause confusion.<br />
<br />
</span></li>
<li style="text-align:left"><span style="font-family:arial,sans-serif">I normally tell people that I will try to keep the new kernel.git checkins in sync with kernel-next.git (i.e. bring them over) once the rebase starts. In some cases people have still been submitting their code to both trees, which is OK but be careful that you do bring everything over since it can be easy to miss things when some is in already and some is not.<br />
<br />
</span></li>
<li style="text-align:left"><span style="font-family:arial,sans-serif">Do the rebase of the topic branches on top of the master mainline release (i.e. 3.0), but merge them together on top of the latest -stable at the time (3.0.8). This way next rebase will be easier. Make sure to split up into topic branches before you merge in a new stable release into kernel.git ToT as well (i.e. if you want to update that tree to 3.0.10).</span></li></ul>
</div>
<div><font face="arial, sans-serif"><br />
</font></div>
<div><br />
</div>
<div><br />
</div>
</div>
</div>
</div></div></div></div></div></div></td></tr></tbody></table>
</div> 
</div> 
<div id="sites-canvas-bottom-panel">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-subpages"> </div>
<div id="sites-attachments-container">
</div>
<a xmlns="http://www.w3.org/1999/xhtml" name="page-comments"></a>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-comments"><div class="sites-comment-docos-wrapper"><div class="sites-comment-docos"><div class="sites-comment-docos-background"></div><div class="sites-comment-docos-header"><div class="sites-comment-docos-header-title">Comments</div></div><div id="sites-comment-docos-pane" class="sites-comment-docos-pane"></div></div></div></div>
</div>
</div> 
</td> 
</tr>
</table> 
</div> 
</div> 
<div id="sites-chrome-footer-wrapper">
<div id="sites-chrome-footer-wrapper-inside">
<div id="sites-chrome-footer">
</div>
</div>
</div>
</div> 
</div> 
<div id="sites-chrome-adminfooter-container">
<div xmlns="http://www.w3.org/1999/xhtml" class="sites-adminfooter" role="navigation"><p><a class="sites-system-link" href="https://www.google.com/a/UniversalLogin?service=jotspot&amp;continue=https://sites.google.com/a/chromium.org/dev/chromium-os/how-tos-and-troubleshooting/kernel-rebase-notes">Sign in</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/recentChanges">Recent Site Activity</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/reportAbuse" target="_blank">Report Abuse</a><span aria-hidden="true">|</span><a class="sites-system-link" href="javascript:;" onclick="window.open(webspace.printUrl)">Print Page</a><span aria-hidden="true">|</span><span class="sites-system-link">Powered By</span> <b class="powered-by"><a href="http://sites.google.com">Google Sites</a></b></p></div>
</div>
</div> 
</div> 
<div id="sites-chrome-onebar-footer">
</div>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('sjl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" src="https://ssl.gstatic.com/sites/p/56e332/system/js/jot_min_view__en.js"></script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('jl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml">
      
          sites.core.Analytics.createTracker();
          sites.core.Analytics.trackPageview();
        
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
                    sites.Searchbox.initialize(
                        'sites-searchbox-search-button',
                        {"object":[]}['object'],
                        'search-site',
                        {"label":"Configure search options...","url":"/system/app/pages/admin/settings"});
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
      gsites.HoverPopupMenu.createSiteDropdownMenus('sites-header-nav-dropdown', false);
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("7648876402527094", "Navigation", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_7648876402527094');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("14720868319272995", "Quick links", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_14720868319272995');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("19690813310444355", "Other sites", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_19690813310444355');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
              new sites.CommentPane('//docs.google.com/comments/d/AAHRpnXvrAwjAfmld0ObrebBiGRq9pH7Af7f0VdjoxI7Z3Xn3WnTwmGQsXyJ4mLBLHPD5OXKDzWZQPStu1ghlZJoD7YZupn7mTHSYfu0rPX2FNazhB8HMUG_h3Gxhiw_lL4RfcGZ6R-tq/api/js?anon=true',
                  false, false);
            </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
  setTimeout(function() {
    var fingerprint = gsites.date.TimeZone.getFingerprint([]);
    gsites.Xhr.send('https://www.chromium.org/_/tz', null, null, 'GET', null, null, { afjstz: fingerprint });
  }, 500);
</script>
<script xmlns="http://www.w3.org/1999/xhtml">
                    window.onload = function() {
                      if (false) {
                        JOT_setMobilePreview();
                      }
                      var loadTimer = window.jstiming.load;
                      loadTimer.tick("ol");
                      loadTimer["name"] = "load," + webspace.page.type + ",user_page";
                      window.jstiming.report(loadTimer, {}, 'https://gg.google.com/csi');
                    }
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
        JOT_insertAnalyticsCode(false,
            false);
      </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    var maestroRunner = new gsites.pages.view.SitesMaestroRunner(
        webspace, "en");
    maestroRunner.initListeners();
    maestroRunner.installEditRender();
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
  //<![CDATA[
    // Decorate any fastUI buttons on the page with a class of 'goog-button'.
    if (webspace.user.hasWriteAccess) {
      JOT_decorateButtons();
    }

    // Fires delayed events.
    (function() {
      JOT_fullyLoaded = true;
      var delayedEvents = JOT_delayedEvents;
      for (var x = 0; x < delayedEvents.length; x++) {
        var event = delayedEvents[x];
        JOT_postEvent(event.eventName, event.eventSrc, event.payload);
      }
      JOT_delayedEvents = null;
      JOT_postEvent('pageLoaded');
    })();
  //]]>
</script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    JOT_postEvent('decorateGvizCharts');
  </script>
<script type="text/javascript">
          JOT_setupPostRenderingManager();
        </script>
<script type="text/javascript">
          JOT_postEvent('renderPlus', null, 'sites-chrome-main');
        </script>
<div id="server-timer-div" style="display:none"> </div>
<script type="text/javascript">
          window.jstiming.load.tick('render');
          JOT_postEvent('usercontentrendered', this);
        </script>
</body>
</html>
