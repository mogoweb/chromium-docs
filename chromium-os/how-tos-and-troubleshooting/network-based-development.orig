<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/WebPage">
<head>
<meta http-equiv="X-UA-Compatible" content="chrome=1" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var e="wtsrt_",g="tbsd_",h="tbnd_",k="start",l="_wtsrt",m="_tbnd",n="CSI/";(function(){function f(a){this.t={};this.tick=function(a,c,b){this.t[a]=[void 0!=b?b:(new Date).getTime(),c];if(void 0==b)try{window.console.timeStamp(n+a)}catch(d){}};this.tick(k,null,a)}var a;window.performance&&(a=window.performance.timing);var p=a?new f(a.responseStart):new f;window.jstiming={Timer:f,load:p};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick(l,void 0,c),b.tick(e,l,d),b.tick(g,e))}try{a=null,
window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick(m,void 0,window.chrome.csi().startE),b.tick(h,m,c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick(m,void 0,window.external.startE),b.tick(h,m,c))),a&&(window.jstiming.pt=a)}catch(q){}})(); })()
</script>
<link rel="shortcut icon" href="/_/rsrc/1354323194313/favicon.ico" type="image/x-icon" />
<link rel="apple-touch-icon" href="https://ssl.gstatic.com/sites/p/56e332/system/app/images/apple-touch-icon.png" type="image/png" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var d="",g="__duration__",h="function";function k(c){return document.getElementById(c)}window.byId=k;function l(c){return c.replace(/^\s+|\s+$/g,d)}window.trim=l;var m=[],n=0;window.JOT_addListener=function(c,a,b){var e=new String(n++);c={eventName:c,handler:a,compId:b,key:e};m.push(c);return e};window.JOT_removeListenerByKey=function(c){for(var a=0;a<m.length;a++)if(m[a].key==c){m.splice(a,1);break}};
window.JOT_removeAllListenersForName=function(c){for(var a=0;a<m.length;a++)m[a].eventName==c&&m.splice(a,1)};window.JOT_postEvent=function(c,a,b){var e={eventName:c,eventSrc:a||{},payload:b||{}};if(window.JOT_fullyLoaded)for(a=m.length,b=0;b<a&&b<m.length;b++){var f=m[b];f&&f.eventName==c&&(e.listenerCompId=f.compId||d,(f=typeof f.handler==h?f.handler:window[f.handler])&&f(e))}else window.JOT_delayedEvents.push({eventName:c,eventSrc:a,payload:b})};window.JOT_delayedEvents=[];
window.JOT_fullyLoaded=!1;window.JOT_formatRelativeToNow=function(c,a){var b=((new Date).getTime()-c)/6E4;if(1440<=b||0>b)return null;var e=0;60<=b&&(b/=60,e=2);2<=b&&e++;return a?window.JOT_siteRelTimeStrs[e].replace(g,Math.floor(b)):window.JOT_userRelTimeStrs[e].replace(g,Math.floor(b))}; })()
</script>
<script>

  

  var breadcrumbs = [{"path":"/chromium-os","deleted":false,"title":"Chromium OS","dir":"ltr"},{"path":"/chromium-os/how-tos-and-troubleshooting","deleted":false,"title":"How Tos and Troubleshooting","dir":"ltr"},{"path":"/chromium-os/how-tos-and-troubleshooting/network-based-development","deleted":false,"title":"Network-based Development","dir":"ltr"}];
  var JOT_clearDotPath = 'https://ssl.gstatic.com/sites/p/56e332/system/app/images/cleardot.gif';

  
  var JOT_userRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

  
  

  

  var webspace = {"enableAnalytics":true,"pageSharingId":"jotspot_page","enableUniversalAnalytics":false,"sharingPolicy":"OPENED_WITH_INDICATOR","siteTitle":"The Chromium Projects","isStartPageEnabled":true,"adsensePublisherId":null,"features":{"languageSelectDefaultTextSetToDefault":true,"validateClientGvizDataSourceUrls":true,"moreMobileStyleImprovements":true,"newInsertMenuIcons":true,"accessibleSortingButtons":true,"domainAnalyticsInGAOnly":true,"noCaptcha":true,"fileCabinetScreenReaderFix":true,"updatedTosAndPrivacyLinks":null,"pageDrafts":false,"mobileOrientationFix":true,"plusBadge":false,"pdfEmbedSupport":false,"jsClickFix":true},"isPublic":true,"isConsumer":false,"serverFlags":{"cajaBaseUrl":"//www.gstatic.com/caja","cajaDebugMode":false},"onepickBaseUrl":"https://docs.google.com","domainAnalyticsAccountId":"","plusPageId":"","signInUrl":"https://www.google.com/a/SelectSession?continue\u003dhttps://sites.google.com/a/chromium.org/dev/chromium-os/how-tos-and-troubleshooting/network-based-development\u0026service\u003djotspot","analyticsAccountId":"UA-5484340-1","scottyUrl":"/_/upload","homePath":"/","siteNoticeUrlEnabled":null,"plusPageUrl":"","adsensePromoClickedOrSiteIneligible":true,"csiReportUri":"https://gg.google.com/csi","sharingId":"jotspot","termsUrl":"//www.google.com/intl/en/policies/terms/","gvizVersion":1,"editorResources":{"sitelayout":["https://ssl.gstatic.com/sites/p/56e332/system/app/css/sitelayouteditor.css"],"text":["https://ssl.gstatic.com/sites/p/56e332/system/js/codemirror.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codemirror_css.css","https://ssl.gstatic.com/sites/p/56e332/system/js/trog_edit__en.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/trogedit.css","/_/rsrc/1441580320000/system/app/css/editor.css","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codeeditor.css","/_/rsrc/1441580320000/system/app/css/camelot/editor-jfk-wlb.css"]},"sharingUrlPrefix":"/_/sharing","isAdsenseEnabled":true,"domain":"chromium.org","baseUri":"","name":"dev","siteTemplateId":false,"siteNoticeRevision":null,"siteNoticeUrlAddress":null,"siteNoticeMessage":null,"page":{"isRtlLocale":false,"canDeleteWebspace":null,"isPageDraft":null,"parentPath":"/chromium-os/how-tos-and-troubleshooting","parentWuid":"wuid:gx:72ecb36fa9c83ecd","siteLocale":"en","timeZone":"America/Los_Angeles","type":"text","title":"Network-based Development","locale":"en","wuid":"wuid:gx:5699bf15ea36dfef","revision":34,"path":"/chromium-os/how-tos-and-troubleshooting/network-based-development","isSiteRtlLocale":false,"pageInheritsPermissions":null,"name":"network-based-development","canChangePath":true,"state":"","properties":{},"bidiEnabled":false,"currentTemplate":{"path":"/config/pagetemplates/network-based-development","title":"Network-based Development"}},"canPublishScriptToAnyone":true,"user":{"keyboardShortcuts":true,"sessionIndex":"","guest_":true,"displayNameOrEmail":"guest","userName":"guest","uid":"","renderMobile":false,"domain":"","namespace":"","hasWriteAccess":false,"namespaceUser":false,"primaryEmail":"guest","hasAdminAccess":false},"gadgets":{"baseUri":"/system/app/pages/gadgets"}};
  webspace.page.breadcrumbs = breadcrumbs;

  
  var JOT_siteRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

</script>
<script type="text/javascript">
                window.jstiming.load.tick('scl');
              </script>
<meta name="title" content="Network-based Development - The Chromium Projects" />
<meta itemprop="name" content="Network-based Development - The Chromium Projects" />
<meta property="og:title" content="Network-based Development - The Chromium Projects" />
<meta name="description" content="Home of the Chromium Open Source Project" />
<meta itemprop="description" content="Home of the Chromium Open Source Project" />
<meta id="meta-tag-description" property="og:description" content="Home of the Chromium Open Source Project" />
<style type="text/css">
</style>
<link rel="stylesheet" type="text/css" href="https://ssl.gstatic.com/sites/p/56e332/system/app/themes/beigeandblue/standard-css-beigeandblue-ltr-ltr.css" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/overlay.css?cb=beigeandblueundefineda100%25%25150goog-ws-leftthemedefaultstandard" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/camelot/allthemes-view.css" />
<!--[if IE]>
          <link rel="stylesheet" type="text/css" href="/system/app/css/camelot/allthemes%2die.css" />
        <![endif]-->
<title>Network-based Development - The Chromium Projects</title>
<meta itemprop="image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<meta property="og:image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<script type="text/javascript">
                window.jstiming.load.tick('cl');
              </script>
</head>
<body xmlns="http://www.google.com/ns/jotspot" id="body" class=" en            ">
<div id="sites-page-toolbar" class="sites-header-divider">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-status" class="sites-status" style="display:none;"><div id="sites-notice" class="sites-notice" role="status" aria-live="assertive"> </div></div>
</div>
<div id="sites-chrome-everything-scrollbar">
<div id="sites-chrome-everything" class="">
<div id="sites-chrome-page-wrapper" style="direction: ltr">
<div id="sites-chrome-page-wrapper-inside">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-chrome-header-wrapper" style="height:auto;">
<table id="sites-chrome-header" class="sites-layout-hbox" cellspacing="0" style="height:auto;">
<tr class="sites-header-primary-row" id="sites-chrome-userheader">
<td id="sites-header-title" class="" role="banner"><div class="sites-header-cell-buffer-wrapper"><a href="https://www.chromium.org/" id="sites-chrome-userheader-logo"><img id="logo-img-id" src="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" alt="The Chromium Projects" class="sites-logo  " /></a><h2><a href="https://www.chromium.org/" dir="ltr" id="sites-chrome-userheader-title">The Chromium Projects</a></h2></div></td><td class="sites-layout-searchbox  "><div class="sites-header-cell-buffer-wrapper"><form id="sites-searchbox-form" action="/system/app/pages/search" role="search"><input type="hidden" id="sites-searchbox-scope" name="scope" value="search-site" /><input type="text" id="jot-ui-searchInput" name="q" size="20" value="" aria-label="Search this site" /><div id="sites-searchbox-button-set" class="goog-inline-block"><div role="button" id="sites-searchbox-search-button" class="goog-inline-block jfk-button jfk-button-standard" tabindex="0">Search this site</div></div></form></div></td>
</tr>
<tr class="sites-header-secondary-row" id="sites-chrome-horizontal-nav">
<td colspan="2" id="sites-chrome-header-horizontal-nav-container" role="navigation">
</td>
</tr>
</table>
</div>
<div id="sites-chrome-main-wrapper">
<div id="sites-chrome-main-wrapper-inside">
<table id="sites-chrome-main" class="sites-layout-hbox" cellspacing="0" cellpadding="{scmCellpadding}" border="0">
<tr>
<td id="sites-chrome-sidebar-left" class="sites-layout-sidebar-left initial" style="width:150px">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_7648876402527094" class="sites-embed" role="navigation"><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-projects" jotId="wuid:gx:10ae433dadbbab13" class="sites-navigation-link">Home</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/Home" jotId="wuid:gx:43582b9d2029d3af" class="sites-navigation-link">Chromium</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-os" jotId="wuid:gx:83df2ab1f8880ba" class="sites-navigation-link">Chromium OS</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_14720868319272995" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Quick links</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/for-testers/bug-reporting-guidelines" class="sites-navigation-link">Report bugs</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/developers/discussion-groups" class="sites-navigation-link">Discuss</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/system/app/pages/sitemap/hierarchy" jotId="wuid:gx:4b58a9a350ad12f" class="sites-navigation-link">网站地图</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19690813310444355" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Other sites</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://blog.chromium.org/" class="sites-navigation-link">Chromium Blog</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://code.google.com/chrome/extensions/" class="sites-navigation-link">Google Chrome Extensions</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="https://developers.google.com/chrome/chrome-frame/" class="sites-navigation-link">Google Chrome Frame</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19695218559354544" class="sites-embed" role="complementary"><h4 class="sites-embed-title"></h4><div class="sites-embed-content sites-embed-content-sidebar-textbox"><div dir="ltr"><span style="font-size:x-small">Except as otherwise </span><a href="http://developers.google.com/site-policies.html#restrictions"><span style="font-size:x-small">noted</span></a><span style="font-size:x-small">, the content of this page is licensed under a </span><a href="http://creativecommons.org/licenses/by/2.5/"><span style="font-size:x-small">Creative Commons Attribution 2.5 license</span></a><span style="font-size:x-small">, and examples are licensed under the </span><a href="http://src.chromium.org/viewvc/chrome/trunk/src/LICENSE" target="_blank"><span style="font-size:x-small">BSD License</span></a><span style="font-size:x-small">.<br /></span></div></div></div>
</td>
<td id="sites-canvas-wrapper">
<div id="sites-canvas" role="main">
<div id="goog-ws-editor-toolbar-container"> </div>
<div xmlns="http://www.w3.org/1999/xhtml" id="title-crumbs" style="">
<A href="/chromium-os" dir="ltr">Chromium OS</A>‎ &gt; ‎<A href="/chromium-os/how-tos-and-troubleshooting" dir="ltr">How Tos and Troubleshooting</A>‎ &gt; ‎
  </div>
<h3 xmlns="http://www.w3.org/1999/xhtml" id="sites-page-title-header" style="" align="left">
<span id="sites-page-title" dir="ltr" tabindex="-1" style="outline: none">Network-based Development</span>
</h3>
<div id="sites-canvas-main" class="sites-canvas-main">
<div id="sites-canvas-main-content">
<table xmlns="http://www.w3.org/1999/xhtml" cellspacing="0" class="sites-layout-name-one-column sites-layout-hbox"><tbody><tr><td class="sites-layout-tile sites-tile-name-content-1"><div dir="ltr"><div><h2><a name="TOC-Motivation"></a>Motivation</h2>[If you are familiar with/sold on network-based development you can skip this introduction.]<br /><br />Development with a target device, where software is built on a separate host, is quite different from host-based development. Perhaps the biggest problem is that the host and target have different filesystems. The host filesystem is close to you, easy to interact with, large, fast and always available. The target filesystem is typically inaccessible from your host, has poor tools, is small, pretty slow and only exists when the target is running.<br /><br />Common problems are:<br /><ul><li>getting a new kernel onto your target;</li><li>changing kernel parameters (kernel command line);<br /></li><li>updating the root filesystem on your target;</li><li>installing into your target a new version of a software package you are working on;</li><li>using a GUI debugger on the host to debug software on the target;</li><li>accessing host data files on your target;</li><li>writing to log files on your host from your target.</li></ul>Many ad-hoc solutions are available for the above. You can use a USB stick or SD card to transport the kernel or a new root filesystem. You can change kernel parameters by rebuilding the kernel. If you have a network available you can use the scp command to copy over a program to run, copy log and data files around, etc. You can even use sshfs to run a filesystem over the network.<br /><br />These problems are worse when you want to have a lab full of targets all doing similar things. In this case each board must be reconfigured using an SD card and manual intervention when a kernel update is required, or a log file must be pulled off. In fact, anything which exists on the target device is something that might be out of date, something to check, or something that will make that target different in undesirable ways.<br /><br />In short it is desirable to keep as little as possible on the target device. If a network is available at all stages of the boot process, you can use that instead of the filesystem. At the minimum you need to identify the target, so it needs a name and perhaps a serial number. Everything else can be loaded from an attached network.<br /><br />Common objections to using a network, compared to an SD card say, are:<br /><ul><li>"But it is slower than having local storage in the target." Network speed is typically 10MB/s and can be faster. You should take account of the time spent copying onto the SD card as well as the time the target takes copying it off.</li><li>"But it makes my target boot process different from the way it will actually boot in the field." True, although you can easily test it, and for most testing purposes (with the notable exception of benchmarking) the boot device seldom affects operation.</li><li>"But I never change my kernel / root disk and never need to change files anyway." You are probably not doing development. Why are you reading this page?</li><li>"But I can never be sure what the target has actually picked up." You can check the kernel header, and touch a file visible to the target which you can check.</li><li>"But my target doesn't have a real time clock." Most ARM SOCs have a serviceable one built in, but in any case you don't really need one. If you need to, just set the time in a startup script using an ntp utility or similar.<br /></li><li>"But I don't have a network." You should have thought of that before you developed your device. Ethernet chips and connectors are cheap enough that they should be on your board for debug reasons alone. There is a valuable difference between development and production hardware. Failing that, perhaps a USB Ethernet adapter will help?<br /></li><li>"But it is too difficult to set up; I don't understand NFS; the 
network around here is unreliable; I am allergic to NFS servers; tftp is 
insecure; I don't have a spare network port; it feels unnatural; I have 
an SD card for this purpose; my parents didn't use a network for 
embedded development when I was growing up; etc." You will need to work through these issues yourself.<br />
</li></ul><h2><a name="TOC-Chromium-OS-Approach"></a>Chromium OS Approach</h2>(ARM only, for now).<br /><br />Our approach to network-based development is:<br /></div><ul><li>U-Boot is flashed into the board as a starting point<br /></li><li>U-Boot environment variables specify boot method, including network servers</li><li>DHCP is used to obtain an IP address</li><li>TFTP is used to read the kernel</li><li>NFS Root is used to provide the root disk<br /></li></ul><div>The remainder of this page shows how to set this up.<br /><h2><a name="TOC-U-Boot-on-the-board"></a>U-Boot on the board</h2>Chromium OS has several variants of U-Boot for each board, one of which is <b>the developer variant</b>. The developer variant has a number of additional features useful to devs: network support, an expanded command set and a saved environment.<br /><br />First, make sure that you have flashed the developer U-Boot onto your board. For more information see the <a href="https://www.chromium.org/developers/u-boot">U-Boot page</a>.<br /><h3><a name="TOC-Supported-USB-Ethernet-Adapters-USB-Ethernet-Dongles"></a>Supported USB Ethernet Adapters / USB Ethernet Dongles</h3>Only the ASIX AX88772 chip is supported at present. The following supported adapters are shown as {vendor, device}. Type <code>lsusb</code>, on a machine running Linux, with the adapter attached to see the vendor and device numbers for your adapter.<br /><br /><code>    { 0x05ac, 0x1402 },    /* Apple USB Ethernet Adapter */</code><br /><code>    { 0x07d1, 0x3c05 },    /* D-Link DUB-E100 H/W Ver B1 */</code><br /><code>    { 0x0b95, 0x772a },    /* Cables-to-Go USB Ethernet Adapter */  </code><font color="#ff0000">TODO(dianders): This didn't work for me.</font><br /><code>    { 0x0b95, 0x7720 },    /* Trendnet TU2-ET100 V3.0R */</code><br /><code>    { 0x0b95, 0x1720 },    /* SMC */</code><br /><code>    { 0x0db0, 0xa877 },    /* MSI - ASIX 88772a */</code><br /><code>    { 0x13b1, 0x0018 },    /* Linksys 200M v2.1 */</code><br /><code>    { 0x1557, 0x7720 },    /* 0Q0 cable ethernet */</code><br /><code>    { 0x2001, 0x3c05 },    /* DLink DUB-E100 H/W Ver B1 Alternate */</code><br /><h2><a name="TOC-U-Boot-Environment-Variables"></a>U-Boot Environment Variables</h2>When you start the developer U-Boot for the first time it will likely complain that the environment is not present, and give you a default environment. Type <code>printenv</code> to see what it defines.<br /><br />To set your board up for full network booting you need to set the following. Replace the IP addresses in the following with the address of your server. In fact, typical U-Boot flow is to use <code>serverip</code> for all the server addresses, and have this obtained automatically from the DHCP server. However in many corporate network environments this is difficult.<br /><br />Note: It is a great idea if your DHCP server can give you the same IP address each time. It does this by looking at the MAC address on your board / Ethernet adapter.  Note that you should replace <code><b>yourUsernameHere</b></code> with the username you'll be using on your host machine and <span style="color:rgb(0,96,0);font-family:monospace"><b>yourSerialNumberHere</b></span> with anything you want.  You should also change the IP address to be the IP addresses of your servers.<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>setenv serverip 172.22.73.60</code><br /><code>setenv tftpserverip 172.22.73.60</code><br /><code>setenv nfsserverip 172.22.73.60</code><br /><code>setenv board </code><span style="color:rgb(0,96,0);font-family:monospace">tegra2_seaboard</span><br /><code>setenv serial# <b>yourSerialNumberHere</b></code><br /><code>setenv user <b>yourUsernameHere</b><br />setenv tftppath /uImage-${user}-${board}-${serial#}<br />saveenv<br /></code></div><br />Other variables are set automatically by the boot scripts:<br /><div class="sites-codeblock sites-codesnippet-block"><code>rootpath=/export/nfsroot-${user}-${board}-${serial#}</code><br /></div><br />There are two paths that your server must provide. The first is the path to your kernel on your tftp server, and the second is the path to your root disk on your NFS server. By adding the username, board and serial number it makes it possible for a team to share a single TFTP/NFS server.<br /><br />By default the IP address is obtained using DHCP. If you don't have a DHCP server you can set the environment variables directly. You will need to create your own boot flow which skips bootp.<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>gatewayip=172.22.73.1</code><br /><code>netmask=255.255.255.0</code><br /><code>ipaddr=172.22.73.81</code></div><h3><a name="TOC-U-Boot-Boot-Flow"></a>U-Boot Boot Flow</h3>U-Boot starts by running an environment variable called <code>bootcmd</code>. This starts up USB then tries various ways of obtaining a kernel:<br /><ul><li><code>dhcp_boot</code> - uses DHCP to get an IP address, TFTPs the kernel from a fixed server, then boots with NFS root from a fixed server<br /></li><li><code>keynfs_boot</code> - reads the kernel from file '/uImage' on an attached USB stick (first partition in ext2 format), then boots with NFS root</li><li><code>usb_boot</code> - reads a developer image in standard Chromium OS format from a USB stick (not network boot)<br /></li><li><code>mmc_boot</code> - reads a developer image in standard Chromium OS format from eMMC (not network boot)</li></ul>The first method to succeed is used for the boot. This means that if you don't have a network attached, and your USB stick does not have uImage on it, then it will try to read a Chromium OS format image from the stick. If no stick is inserted, it will try to boot from internal eMMC.<br /><br />To adjust the boot flow you should create your own boot command. For example you might create a method that loads a kernel from partition 2 of the USB stick, so replacing <code>nfskey_boot</code>,. Then change the <code>bootcmd</code> so it only runs your flow (NOTE: you may need to paste it a little bit at a time):</div><div><br /><div class="sites-codeblock sites-codesnippet-block"><br /><code>setenv mynfs_setup 'setenv rootpath /export/nfsroot-${user}-${board}-${serial#}; run regen_net_bootargs'</code><br /><code>setenv mynfs_boot 'run keynfs_setup; ext2load usb 0:2 ${loadaddr} uImage; bootm ${loadaddr}'</code><br /><code>setenv bootcmd run mynfs_boot</code><br /><code>saveenv</code></div><br /><h2><a name="TOC-Setting-up-a-DHCP-server"></a>Setting up a DHCP server</h2>The DHCP server provides IP addresses to targets on your network. If you have a DHCP server already, skip to the end of this section to test it. Otherwise you will need to set one up. This is a very brief guide.<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>sudo aptitude install dhcp3-server</code></div><br />Edit /etc/dhcp3/dhcpd.conf and add details about your subnet, including the range of IP addresses you want to give out and any fixed IP addresses you want to allocate for your targets:<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>subnet 192.168.4.0 netmask 255.255.255.0 {</code><br /><code>  range 192.168.4.20 192.168.4.50;</code><br /><code>  option routers 192.168.4.1;</code><br /><code>}</code><br /><br /><code>host seaboard {</code><br /><code>  hardware ethernet 00:23:7d:09:80:0e;</code><br /><code>  fixed-address seboard0;</code><br /><code>}</code></div><br />(you may want to put seaboard0 in your <code>/etc/hosts</code> file in this example, or you can use a numeric address)<br /><br />Then start up the server:<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>/etc/init.d/dhcp3-server restart</code></div><br />If there are no errors (<code>tail /var/log/syslog</code>) you should be in business.<br /><br /><h4><a name="TOC-Testing-your-DHCP-server"></a>Testing your DHCP server<br /></h4>At this stage you should be able to boot your target and see it get a valid IP address:<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>CrOS&gt; usb start</code><br /><code>(Re)start USB...</code><br /><code>USB:   Tegra ehci init hccr c5008100 and hcor c5008140 hc_length 64</code><br /><code>Register 10011 NbrPorts 1</code><br /><code>USB EHCI 1.00</code><br /><code>scanning bus for devices... 5 USB Device(s) found</code><br /><code>       scanning bus for storage devices... 1 Storage Device(s) found</code><br /><code>       scanning bus for ethernet devices... 1 Ethernet Device(s) found</code><br /><code>CrOS&gt; bootp</code><br /><code>Waiting for Ethernet connection... done.</code><br /><code>BOOTP broadcast 1</code><br /><code>DHCP client bound to address 172.22.73.81</code><br /><code>CrOS&gt; </code></div><br /><h3><a name="TOC-Setting-up-a-TFTP-server"></a>Setting up a TFTP server</h3>The TFTP server will send a kernel to U-Boot when it asks. If you have one already skip to the end of this section to test it.<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>sudo aptitude install tftpd-hpa</code></div><br /><br />Then edit <code>/etc/default/tftpd-hpa</code> like this replacing <span style="color:rgb(0,96,0);font-family:monospace;line-height:13px"><b>yourUsernameHere</b></span> with your own username (<code>echo $USER</code>):<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>TFTP_USERNAME="<b>yourUsernameHere</b>"</code><br /><code>TFTP_DIRECTORY="/tftpboot"</code><br /><code>TFTP_ADDRESS="0.0.0.0:69"</code><br /><code>TFTP_OPTIONS="-v"</code></div><br />Notes:</div><div><ul><li>We remove <font face="'courier new', monospace">--secure</font> from default config, since we want to access a symlink that doesn't exist in the <code>tftpboot</code> directory.</li><li>We move from <code>/var/lib/tftpboot</code> to <code>/tftpboot</code>, since we need to specify full path when <code>--secure</code> isn't needed and <code>/tftpboot</code> is shorter.</li><li>We don't use the <code>tftp</code> username, since it can't access the kernel we build.</li></ul><div>Suggestions for good workflows that fix some of the above would be appreciated.</div></div><div><br /></div><div><br /></div><div>Now prepare it. We want a symlink from the /tftpboot directory to you kernel, so the target can easily read it. Replace the filename with your user, board and serial.  NOTE: this assumes that you've got your chromiumos source code in <code>/home/$USER/chromiumos</code>:<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>cd /tftpboot</code><br /><code>sudo ln -s /home/$USER/chromiumos/chroot/build/tegra2_seaboard/boot/vmlinux.uimg uImage-$USER-tegra2_seaboard-</code><span style="color:rgb(0,96,0);font-family:monospace"><b>yourSerialNumberHere</b></span><br /><code>sudo restart tftpd-hpa</code></div><h4><a name="TOC-Testing-your-TFTP-server"></a>Testing your TFTP server</h4>Ensure that you have an IP address (as shown in the DHCP section above). Then this should read in the kernel (assuming you've built it):</div><div><br /></div><div></div><div class="sites-codeblock sites-codesnippet-block"><div><code>tftpboot ${loadaddr} ${tftpserverip}:/tftpboot/uImage-${user}-${board}-${serial#}</code></div><div></div></div><br /><div>You'll see this output if things are working well:<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>Waiting for Ethernet connection... done.<br />Using asx0 device<br />TFTP from server 172.22.73.60; our IP address is 172.22.73.81<br />Filename '/tftpboot/uImage-yourUsernameHere-seaboard-</code><span style="color:rgb(0,96,0);font-family:monospace">yourSerialNumberHere</span><span style="color:rgb(0,96,0);font-family:monospace">'.<br /></span><span style="color:rgb(0,96,0);font-family:monospace">Load address: 0x40c000<br /></span><span style="color:rgb(0,96,0);font-family:monospace">Loading: #################################################################<br /></span><span style="color:rgb(0,96,0);font-family:monospace">     #################################################################<br /></span><span style="color:rgb(0,96,0);font-family:monospace">     #################################################################<br /></span><span style="color:rgb(0,96,0);font-family:monospace">     ###############################################<br /></span><span style="color:rgb(0,96,0);font-family:monospace">done<br /></span><span style="color:rgb(0,96,0);font-family:monospace">Bytes transferred = 3545596 (3619fc hex)</span></div><br />If you have got this far, congratulations! You are about half way there: the target is reading a kernel directly from your machine and is ready to boot it. Now we need to get the root disk organized.<br /><h2><a name="TOC-NFS-Root"></a>NFS Root</h2>NFS root is a simple way to keep your target's root disk be kept on the network.<br /><br /><div>Advantages:</div><div><ul><li>You can 
make a change anywhere in the filesystem from your host, and the target 
see it almost immediately and without any special manual transfer</li><li>You can make use of the effectively infinite disc space of most hosts (great for debug builds)<br /></li><li>Build / debug turnaround time is quick since there is no need to transfer the image via USB. (But see also the dev_server)</li><li>You can set things up with symlinks so that the host and target can use the same filepaths</li></ul><div>Disadvantages:</div></div><div><ul><li>It takes a bit of setup</li><li>Slower than a local disc unless you have a fast Gigabit Ethernet (non-USB)</li></ul></div>Linux
 requires a root filesystem which it mounts immediately after booting. 
If you have a suitable network device attached to the client you can use
 an NFS server to provide this root filesystem. This means that your 
client can have full access to your server filesystem, thus removing the
 need to manually move files from the host to the client for execution, 
and back again for editing / viewing.<br /><br />You can find information about setting up NFS root <a href="https://wiki.archlinux.org/index.php/NFSv4">here</a>.
 These instructions replicate much of that, and generally follow the 
same pattern but are more specific to Chromium OS. Note that you can use
 NFSv3 instead but here we will use NFSv4 as it has additional features.
 <br /><br />The steps you need to take are:<br /><ul><li>Set up an NFS server on your host, or use one that you already have</li><li>Build a kernel with suitable filesystem and driver options</li><li>Set up your boot loader to tell the kernel to use an NFS root</li></ul><h3><a name="TOC-Setting-up-an-NFS-server"></a>Setting up an NFS server</h3>First,
 install the NFS server package (these instructions for Ubuntu 10.04 
Lucid). This enables the NFS server built into your kernel. When it 
starts you may notice that a number of new modules have been loaded into
 your kernel (nfsd, exportfs, lockd, etc.)<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>sudo aptitude install nfs-kernel-server</code></div><br />The server needs to know which directories you want to 'export' for clients. This is specified in the <code>/etc/exports</code> file. Edit this (<code>sudo nano /etc/exports</code> or similar) to look something like this (changing IP subnets as appropriate):<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>/export            172.16.0.0/16(rw,fsid=0,no_subtree_check,async)</code><br /><code>/export/nfsroot-<b>yourUsernameHere</b>-tegra2_seaboard-</code><span style="color:rgb(0,96,0);font-family:monospace"><b>yourSerialNumberHere</b></span><span style="color:rgb(0,96,0);font-family:monospace">    172.16.0.0/16(rw,nohide,no_subtree_check,async,no_root_squash)</span></div><br />The first entry sets the base of the NFS exports. Every directory which is exported must be accessible from within <code>/export</code>.
 The second entry is the nfsroot directory which will contain your root 
filesystem. This is the directory that the client will see when it 
mounts the NFS root. The IP address should be changed to match your 
local setup - it sets the range of IP addresses which are allowed to access this mount on the server. For example it might be <code>192.168.1.0/24</code>.<br /><br />A number of options are provided, briefly:<br /><ul><li><b>rw</b>
 - the target will have both read and write access. You can also use ro 
for readonly but the system will not boot with a read-only root 
filesystem (without a bit of work!)<br /></li><li><b>fsid=0</b> - tells NFS that this is the root of all exported filesystems</li><li><b>no_subtree_check</b>
 disables checking for accesses outside the exported portion of a 
filesystem. This speeds up and simplifies things for the client and 
server.</li><li><b>async</b> - requests are acknowledged before data is 
actually written. For example if the client writes to a file, the server
 will respond that the write has completed, and then continue in the 
background to actually do the write, perhaps to a disc drive. This 
improves performance.</li><li><b>no_root_squash</b> - the target can 
access files as root, with full unrestricted permissions. This is 
important for the root filesystem because the kernel would otherwise not
 have access to devices in /dev, log files in /var/log, etc.</li><li><b>nohide</b> - tells the NFS server to show the contents of a directory even if it is mounted from elsewhere<br /></li></ul>We now need to make the root filesystem appear in <code>/export/nfsroot</code>. Rather than just copy it there, we will use a 'bind mount' to paste the true location onto <code>/export/nfsroot</code>. First we need to unpack a suitable image (see the build instructions for how to build an image).<br /><br />Let's assume that you have your Chromium trunk directory as <code>~/cosarm</code> and you are using a <code>tegra2_seaboard</code> build:<br /><div class="sites-codeblock sites-codesnippet-block"><br /><code># go to the directory with the latest build<br />cd ~/cosarm/src/build/images/tegra2_seaboard/latest</code><br /><br /><code># mount it into /tmp/m</code><br /><code>~/cosarm/src/scripts/mount_gpt_image.sh -f . -i chromiumos_test_image.bin</code><code><br /><br /># copy out the contents of the image<br />sudo cp -a /tmp/m nfsroot</code><br /><br /><code># unmount the image from /tmp/m<br /></code><code>~/cosarm/src/scripts/mount_gpt_image.sh -u</code><code><br /></code></div><br />This will put a full copy of the build image root disc into <code>~/cosarm/src/build/images/tegra2_seaboard/latest/nfsroot</code>. Now we need to make it appear in <code>/export/nfsroot</code>. Edit your <code>/etc/fstab</code> file with the full path:<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>/full/path/to/cosarm/src/build/images/tegra2_seaboard/latest/nfsroot /export/nfsroot-<b>yourUsernameHere</b>-tegra2_seaboard-<b>yourSerialNumberHere</b>    none    bind    0 0</code></div><br />Note this must appear all on one line and you can use tabs or spaces between fields. See <code style="color:rgb(0,96,0)">man fstab</code> for more information.<div><br /></div><div>You will need to create an /export/nfsroot directory:</div><div><br /></div><div><div class="sites-codeblock sites-codesnippet-block"><code>$ sudo mkdir -p /export/nfsroot</code><code>-<b>yourUsernameHere</b>-tegra2_seaboard-</code><span style="color:rgb(0,96,0);font-family:monospace"><b>yourSerialNumberHere</b></span></div></div><div><br /></div><div> This
 will be activated automatically when your server reboots, but since it 
is already running, ask it to mount this now. After the mount you will 
see that the root filesystem has appeared at <code>/export/nfsroot</code> as desired.<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>$ sudo mount /export/nfsroot</code><code>-<b>yourUsernameHere</b>-tegra2_seaboard-</code><span style="color:rgb(0,96,0);font-family:monospace"><b>yourSerialNumberHere</b></span><br /><code>$ ls /export/nfsroot</code><code>-<b>yourUsernameHere</b>-tegra2_seaboard-</code><code><b>yourSerialNumberHere</b>/</code><br /><code>bin   dev  home  lost+found  mnt  postinst  root  share  tmp     usr</code><br /><code>boot  etc  lib   media       opt  proc      sbin  sys    u-boot  var</code><br /><code>$</code></div><br />Check that your <code>/etc/idmapd.conf</code>
 is correct. You can leave the domain as is if you like. If you change 
it, be careful that the same domain is used on the client side (not 
relevant for NFS root though). This file sets up mapping of user and 
group names between the client and server and is a key benefit of NFSv4 
over NFSv3.<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>[General]</code><br /><br /><code>Verbosity = 0</code><br /><code>Pipefs-Directory = /var/lib/nfs/rpc_pipefs</code><br /><code>Domain = local.domain.edu</code><br /><br /><code>[Mapping]</code><br /><br /><code>Nobody-User = nobody</code><br /><code>Nobody-Group = nogroup</code></div><br />Also check your portmap settings. If this is wrong then the boot will fail with a message like 'VFS: Unable to mount root fs via NFS, trying floppy.'. The settings are in <code>/etc/defaults/portmap</code>. Make sure it is set to provide the service to other machines. If your options are set to "-i 127.0.0.1" then it will only work locally (not a useful server!). Change it to <code>OPTIONS=""</code> and then 'restart portmap'. You can test this:<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>$ rpcinfo -p 172.22.73.60    # use hostname or IP address of your NFS server</code><br /><code>rpcinfo: can't contact portmapper: RPC: Remote system error - Connection refused</code></div><br />If it is working you will see something like:<br /><div class="sites-codeblock sites-codesnippet-block"><code>$ rpcinfo -p 172.22.73.60 |grep nfs</code><br /><code>    100003    2   udp   2049  nfs</code><br /><code>    100003    3   udp   2049  nfs</code><br /><code>    100003    4   udp   2049  nfs</code><br /><code>    100003    2   tcp   2049  nfs</code><br /><code>    100003    3   tcp   2049  nfs</code><br /><code>    100003    4   tcp   2049  nfs</code></div><br />Restart the NFS kernel server if you are superstitious:<br /><div class="sites-codeblock sites-codesnippet-block"><br /><code>$ sudo /etc/init.d/nfs-kernel-server restart</code><br /><code> * Stopping NFS kernel daemon                                            [ OK ] </code><br /><code> * Unexporting directories for NFS kernel daemon...                      [ OK ] </code><br /><code> * Exporting directories for NFS kernel daemon...                        [ OK ] </code><br /><code> * Starting NFS kernel daemon                                            [ OK ]</code></div><div><br /></div><div>Test your nfs server setup. This example just mounts the nfsroot on the same machine, but it is useful to do this from another machine is possible (if you can, use your server host name instead of localhost).<br /></div><div><br /></div><div class="sites-codeblock sites-codesnippet-block"><div><code>$ sudo mkdir -p /tmp/nfs4</code></div><div><code>$ sudo mount -t nfs4 localhost:/nfsroot /tmp/nfs4</code></div><div><code>$ ls /tmp/nfs4</code></div><div><code>bin  boot  build  dev  etc  home  lib  lost+found  media  mnt  opt  postinst  proc  root  sbin  share  sys  tmp  usr  var</code></div><div><code>$ sudo umount /tmp/nfs4</code></div></div><div><br /></div>Finally, the standard firewall setup in Chromium OS does not permit NFS. You may wish to simply disable the firewall - the <code>/export/nfsroot</code><code>-<span style="line-height:13px"><b>yourUsernameHere</b></span>-tegra2_seaboard-</code><code><span style="line-height:13px"><b>yourSerialNumberHere</b></span>/etc/init/iptables.conf</code> file should be changed to do this. At the top, change the <code>start on</code> line to <code>start on never</code>.
 If you don't do this you will likely boot to a login prompt, but then 
you will see 'NFS server not responding' messages once the firewall 
kicks in.</div><h3><a name="TOC-Build-a-suitable-kernel"></a>Build a suitable kernel</h3>You can build an NFS-enabled kernel for Chromium OS with something like:<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>USE=nfs emerge-tegra2_seaboard chromeos-kernel</code></div><br /></div><div>This puts a kernel in /build/&lt;board&gt;/boot/vmlinux.uimg.</div><div><br /></div><div><br /></div><div><font color="#ff0000">TODO(dianders): Maybe this is what we want?</font></div><div><br /></div><div><div class="sites-codeblock sites-codesnippet-block"><code>USE=nfs FEATURES="noclean" cros_workon_make --board=${BOARD} --install kernel</code><br /></div><br /><h4><a name="TOC-Longer-Explanation"></a>Longer Explanation</h4>There are quite a 
few options that you need to enable in the kernel to support NFS root. 
First you need to make sure that a suitable network driver is compiled 
in, and secondly you need to enable all the network filesystem options. 
The following list for a USB network adapter setup gives you an idea of 
what is required. Some of the important options are:<br /><ul><li>CONFIG_USB_USBNET - enables the USB network subsystem</li><li>CONFIG_NET_AX8817X - enables the particular USB driver. This is a Cisco / Linksys 1000Mbit USB 2.0 Ethernet dongle</li><li>CONFIG_NETWORK_FILESYSTEMS - enables network filesystem support</li><li>CONFIG_NFS_COMMON, CONFIG_NFS_FS - enable NFS client in kernel</li><li>CONFIG_ROOT_NFS - enable NFS root function</li><li>CONFIG_IP_PNP, CONFIG_IP_PNP_DHCP - required if parameter ip=dhcp is passed to kernel<br /></li></ul><a href="https://www.chromium.org/chromium-os/how-tos-and-troubleshooting/kernel-configuration">See here</a> for more information about kernel configuration.<br /><br /><div></div><div>Note: some of the options below are required for NFS root, some for NFS mounting and some for NFS serving<font color="#ff0000">.<br /></font><br /><div class="sites-codeblock sites-codesnippet-block"><code>chromeos/config/armel/config.flavour.chromeos-tegra2</code>:<br /><code>CONFIG_USB_NET_AX8817X=y</code><br /><br /><span style="border-collapse:separate;color:rgb(0,0,0);font-family:Times New Roman;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:normal;text-indent:0px;text-transform:none;white-space:normal;word-spacing:0px;font-size:medium"><span style="color:rgb(0,96,0);font-family:monospace;font-size:14px;line-height:14px">chromeos/config/config.common.chromeos:</span></span><br /><code>+CONFIG_DNOTIFY=y</code><br /><code>+CONFIG_DNS_RESOLVER=y</code><br /><code>+CONFIG_LOCKD=y</code><br /><code>+CONFIG_LOCKD_V4=y</code><br /><code>+CONFIG_NETWORK_FILESYSTEMS=y</code><br /><code>+CONFIG_NFSD=m</code><br /><code>+CONFIG_NFSD_V3=y</code><br /><code>+CONFIG_NFSD_V4=y</code><br /><code>+CONFIG_NFS_COMMON=y</code><br /><code>+CONFIG_NFS_FS=y</code><br /><code>+CONFIG_NFS_USE_KERNEL_DNS=y</code><br /><code>+CONFIG_NFS_V3=y</code><br /><code>+CONFIG_NFS_V4=y</code><br /><code>+CONFIG_ROOT_NFS=y</code><br /><code>+CONFIG_RPCSEC_GSS_KRB5=y</code><br /><code>+CONFIG_SUNRPC=y</code><br /><code>+CONFIG_SUNRPC_GSS=y</code><br /><code>+CONFIG_USB_USBNET=y</code><code><br />+CONFIG_IP_PNP=y<br />+CONFIG_IP_PNP_DHCP=y<br /></code></div><br /><h2><a name="TOC-Putting-it-all-together"></a>Putting it all together<br /></h2>You are now ready to try out your new kernel. Just start up your target and type 'boot'.<br /><br />A partial boot trace is shown below to show the sequence of events:<br /><br /><div class="sites-codeblock sites-codesnippet-block"><code>U-Boot 2010.09-00199-g4c814f0-dirty (Feb 14 2011 - 16:33:28)<br /><br />TEGRA2 <br />Board:   Tegra2 Seaboard.developer<br />DRAM:  1 GiB<br />NAND:  0 MiB<br />SF: Detected W25Q16B with page size 256, total 2 MiB<br />In:    tegra-kbc<br />Out:   lcd<br />Err:   lcd<br />Net:   No ethernet found.<br />Hit any key to stop autoboot:  2<br />CrOS&gt; boot<br />(Re)start USB...<br />USB:   Tegra ehci init hccr c5008100 and hcor c5008140 hc_length 64<br />Register 10011 NbrPorts 1<br />USB EHCI 1.00<br />scanning bus for devices... 5 USB Device(s) found<br />       scanning bus for storage devices... 1 Storage Device(s) found<br />       scanning bus for ethernet devices... 1 Ethernet Device(s) found<br />Waiting for Ethernet connection... done.<br />BOOTP broadcast 1<br />BOOTP broadcast 2<br />*** Unhandled DHCP Option in OFFER/ACK: 208<br />*** Unhandled DHCP Option in OFFER/ACK: 208<br />DHCP client bound to address 172.22.73.81<br />Waiting for Ethernet connection... done.<br />Using asx0 device<br />TFTP from server 172.22.73.60; our IP address is 172.22.73.81<br />Filename '/tftpboot/uImage-sjg-seaboard-261347'.<br />Load address: 0x40c000<br />Loading: #################################################################<br />     #################################################################<br />     #################################################################<br />     ###############################################<br />done<br />Bytes transferred = 3545596 (3619fc hex)<br />## Booting kernel from Legacy Image at 0040c000 ...<br />   Image Name:   Linux-2.6.37-00890-g3506cb6c-dir<br />   Image Type:   ARM Linux Kernel Image (uncompressed)<br />   Data Size:    3545532 Bytes = 3.4 MiB<br />   Load Address: 00008000<br />   Entry Point:  00008000<br />   Verifying Checksum ... OK<br />   Loading Kernel Image ... OK<br />OK<br /><br />Starting kernel ...<br /><br />Uncompressing Linux... done, booting the kernel.<br />[    0.000000] Initializing cgroup subsys cpuset<br />[    0.000000] Initializing cgroup subsys cpu<br />[    0.000000] Linux version 2.6.37-00890-g3506cb6c-dirty (sjg@kiwi.mtv.corp.google.com) (gcc version 4.4.3 (Gentoo Hardened 4.4.3-r4 p1.2, pie-0.4.1) ) #25 SMP PREEMPT Mon Feb 14 14:16:06 PST 2011<br />[    0.000000] CPU: ARMv7 Processor [411fc090] revision 0 (ARMv7), cr=10c53c7f<br />[    0.000000] CPU: VIPT nonaliasing data cache, VIPT aliasing instruction cache<br />[    0.000000] Machine: seaboard<br />[    0.000000] Ignoring unrecognised tag 0x54410008<br />[    0.000000] Memory policy: ECC disabled, Data cache writealloc<br />[    0.000000] PERCPU: Embedded 7 pages/cpu @c0f8a000 s7264 r8192 d13216 u32768<br />[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 227328<br />[    0.000000] Kernel command line: console=ttyS0,115200n8 lp0_vec=0x2000@0x1C406000 mem=384M@0M nvmem=128M@384M mem=512M@512M noinitrd dev=/dev/nfs4 rw nfsroot=172.22.73.60:/export/nfsroot-sjg-seaboard-261347 ip=dhcp<br />[    0.000000] PID hash table entries: 4096 (order: 2, 16384 bytes)<br /><br />...<br /><br /><br />[   24.249981] usb 3-1.1: New USB device strings: Mfr=1, Product=2, SerialNumber=3<br />[   24.249991] usb 3-1.1: Product: AX88x72A<br />[   24.249998] usb 3-1.1: Manufacturer: ASIX Elec. Corp.<br />[   24.250005] usb 3-1.1: SerialNumber: 000001<br />[   25.196440] asix 3-1.1:1.0: eth0: register 'asix' at usb-tegra-ehci.2-1.1, ASIX AX88772 USB 2.0 Ethernet, 68:7f:74:9f:f6:f2<br />[   25.303359] usb 3-1.2: new high speed USB device using tegra-ehci and address 4<br /><br />...<br /><br />[   25.845564] eth0: link down<br />[   25.854603] ADDRCONF(NETDEV_UP): eth0: link is not ready<br /><br />...<br /><br />[   26.863238] Sending DHCP requests .<br />[   27.198754] ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready<br />[   27.206441] eth0: link up, 100Mbps, full-duplex, lpa 0xCDE1<br />[   29.223214] ., OK<br />[   29.283223] IP-Config: Got DHCP answer from 172.24.11.52, my address is 172.22.73.81<br />[   29.292032] IP-Config: Complete:<br />[   29.295104]      device=eth0, addr=172.22.73.81, mask=255.255.252.0, gw=172.22.75.254,<br />[   29.302952]      host=seaboard0.mtv.corp.google.com, domain=mtv.corp.google.com, nis-domain=(none),<br />[   29.312000]      bootserver=172.24.11.52, rootserver=172.22.73.60, rootpath=<br />[   29.319579] mount nfs, dev=172.22.73.60:/export/nfsroot-sjg-seaboard-261347, flags=32768, root_data=nolock,addr=172.22.73.60VFS: Mounted root (nfs filesystem) on device 0:16.<br />[   29.345192] mount nfs done<br />[   29.348171] devtmpfs: mounted<br />[   29.351372] Freeing init memory: 268K<br />[   29.357144] Not activating Mandatory Access Control now since /sbin/tomoyo-init doesn't exist.<br />[   29.956410] mount used greatest stack depth: 4884 bytes left<br />[   30.736770] ply-image used greatest stack depth: 4668 bytes left<br />[   31.070665] rm used greatest stack depth: 4620 bytes left<br />[   31.227262] mknod used greatest stack depth: 4388 bytes left<br />[   31.428835] chown used greatest stack depth: 4372 bytes left<br />[   31.673332] chown used greatest stack depth: 4292 bytes left<br />[   31.755995] unknown ioctl code<br />[   31.759218] NvRmIoctls_NvRmFbControl: deprecated <br />NVRM_DAEMON(1261): skipping Audi[   31.779495] nvrm_notifier_store: nvrm_daemon=801<br />oFx initialization<br />[   31.792064] nvrm_notifier_show: blocking<br />[   31.852343] mkdir used greatest stack depth: 3956 bytes left<br />udevd[837]: unknown key 'HOTPLUG' in /etc/udev/rules.d/99-monitor-hotplug.rules:2<br /><br />[   32.327921] udevd (853): /proc/853/oom_adj is deprecated, please use /proc/853/oom_score_adj instead.<br /><br />Developer Console<br /><br />To return to the browser, press:<br /><br />  [ Ctrl ] and [ Alt ] and [ F1 ]<br /><br />To use this console, the developer mode switch must be engaged.<br />Doing so will destroy any saved data on the system.<br /><br />In developer mode, it is possible to<br />- login and sudo as user 'chronos'<br />- require a password for sudo and login(*)<br />- disable power management behavior (screen dimming):<br />  sudo initctl stop powerd<br />- install your own operating system image!<br /><br />* To set a password for 'chronos', run the following as root:<br /><br />echo "chronos:$(openssl passwd -1)" &gt; /mnt/stateful_partition/etc/devmode.passwd<br /><br /><br />Have fun and send patches!<br /><br />localhost login: <br /></code></div></div><div><br /></div><div><font color="#ff0000">TODO: Troubleshooting?</font></div><h3><a name="TOC-NFS-Caveats"></a>NFS Caveats</h3><div>Some things to be aware of:</div><ul><li>If your network goes down, so does your mount. If you are using NFS root on eth0, then typing <code>ifconfig eth0 down</code> will lock your target since the root filesystem goes away. Recovery is via a reboot</li><li>If the kernel cannot find the NFS server, or has a permissions problem, your kernel will not boot</li></ul></div></div></td></tr></tbody></table>
</div> 
</div> 
<div id="sites-canvas-bottom-panel">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-subpages"> </div>
<div id="sites-attachments-container">
</div>
<a xmlns="http://www.w3.org/1999/xhtml" name="page-comments"></a>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-comments"><div class="sites-comment-docos-wrapper"><div class="sites-comment-docos"><div class="sites-comment-docos-background"></div><div class="sites-comment-docos-header"><div class="sites-comment-docos-header-title">Comments</div></div><div id="sites-comment-docos-pane" class="sites-comment-docos-pane"></div></div></div></div>
</div>
</div> 
</td> 
</tr>
</table> 
</div> 
</div> 
<div id="sites-chrome-footer-wrapper">
<div id="sites-chrome-footer-wrapper-inside">
<div id="sites-chrome-footer">
</div>
</div>
</div>
</div> 
</div> 
<div id="sites-chrome-adminfooter-container">
<div xmlns="http://www.w3.org/1999/xhtml" class="sites-adminfooter" role="navigation"><p><a class="sites-system-link" href="https://www.google.com/a/UniversalLogin?service=jotspot&amp;continue=https://sites.google.com/a/chromium.org/dev/chromium-os/how-tos-and-troubleshooting/network-based-development">Sign in</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/recentChanges">Recent Site Activity</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/reportAbuse" target="_blank">Report Abuse</a><span aria-hidden="true">|</span><a class="sites-system-link" href="javascript:;" onclick="window.open(webspace.printUrl)">Print Page</a><span aria-hidden="true">|</span><span class="sites-system-link">Powered By</span> <b class="powered-by"><a href="http://sites.google.com">Google Sites</a></b></p></div>
</div>
</div> 
</div> 
<div id="sites-chrome-onebar-footer">
</div>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('sjl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" src="https://ssl.gstatic.com/sites/p/56e332/system/js/jot_min_view__en.js"></script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('jl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml">
      
          sites.core.Analytics.createTracker();
          sites.core.Analytics.trackPageview();
        
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
                    sites.Searchbox.initialize(
                        'sites-searchbox-search-button',
                        {"object":[]}['object'],
                        'search-site',
                        {"label":"Configure search options...","url":"/system/app/pages/admin/settings"});
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
      gsites.HoverPopupMenu.createSiteDropdownMenus('sites-header-nav-dropdown', false);
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("7648876402527094", "Navigation", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_7648876402527094');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("14720868319272995", "Quick links", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_14720868319272995');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("19690813310444355", "Other sites", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_19690813310444355');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
              new sites.CommentPane('//docs.google.com/comments/d/AAHRpnXvrAwjAfmld0ObrebBiGRq9VAUL9lJaXN7JADO5YMxYmIFZlLL9X6p5mZzFjaU-VsszzTVWK186LtXRT1ynrxVN3fr9wWahpYSo6IPk496aWnxZ3_DGI17X_NWlOUst8sI7j9mb/api/js?anon=true',
                  false, false);
            </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
  setTimeout(function() {
    var fingerprint = gsites.date.TimeZone.getFingerprint([]);
    gsites.Xhr.send('https://www.chromium.org/_/tz', null, null, 'GET', null, null, { afjstz: fingerprint });
  }, 500);
</script>
<script xmlns="http://www.w3.org/1999/xhtml">
                    window.onload = function() {
                      if (false) {
                        JOT_setMobilePreview();
                      }
                      var loadTimer = window.jstiming.load;
                      loadTimer.tick("ol");
                      loadTimer["name"] = "load," + webspace.page.type + ",user_page";
                      window.jstiming.report(loadTimer, {}, 'https://gg.google.com/csi');
                    }
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
        JOT_insertAnalyticsCode(false,
            false);
      </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    var maestroRunner = new gsites.pages.view.SitesMaestroRunner(
        webspace, "en");
    maestroRunner.initListeners();
    maestroRunner.installEditRender();
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
  //<![CDATA[
    // Decorate any fastUI buttons on the page with a class of 'goog-button'.
    if (webspace.user.hasWriteAccess) {
      JOT_decorateButtons();
    }

    // Fires delayed events.
    (function() {
      JOT_fullyLoaded = true;
      var delayedEvents = JOT_delayedEvents;
      for (var x = 0; x < delayedEvents.length; x++) {
        var event = delayedEvents[x];
        JOT_postEvent(event.eventName, event.eventSrc, event.payload);
      }
      JOT_delayedEvents = null;
      JOT_postEvent('pageLoaded');
    })();
  //]]>
</script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    JOT_postEvent('decorateGvizCharts');
  </script>
<script type="text/javascript">
          JOT_setupPostRenderingManager();
        </script>
<script type="text/javascript">
          JOT_postEvent('renderPlus', null, 'sites-chrome-main');
        </script>
<div id="server-timer-div" style="display:none"> </div>
<script type="text/javascript">
          window.jstiming.load.tick('render');
          JOT_postEvent('usercontentrendered', this);
        </script>
</body>
</html>
