<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/WebPage">
<head>
<meta http-equiv="X-UA-Compatible" content="chrome=1" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var e="wtsrt_",g="tbsd_",h="tbnd_",k="start",l="_wtsrt",m="_tbnd",n="CSI/";(function(){function f(a){this.t={};this.tick=function(a,c,b){this.t[a]=[void 0!=b?b:(new Date).getTime(),c];if(void 0==b)try{window.console.timeStamp(n+a)}catch(d){}};this.tick(k,null,a)}var a;window.performance&&(a=window.performance.timing);var p=a?new f(a.responseStart):new f;window.jstiming={Timer:f,load:p};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick(l,void 0,c),b.tick(e,l,d),b.tick(g,e))}try{a=null,
window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick(m,void 0,window.chrome.csi().startE),b.tick(h,m,c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick(m,void 0,window.external.startE),b.tick(h,m,c))),a&&(window.jstiming.pt=a)}catch(q){}})(); })()
</script>
<link rel="shortcut icon" href="/_/rsrc/1354323194313/favicon.ico" type="image/x-icon" />
<link rel="apple-touch-icon" href="http://www.gstatic.com/sites/p/56e332/system/app/images/apple-touch-icon.png" type="image/png" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var d="",g="__duration__",h="function";function k(c){return document.getElementById(c)}window.byId=k;function l(c){return c.replace(/^\s+|\s+$/g,d)}window.trim=l;var m=[],n=0;window.JOT_addListener=function(c,a,b){var e=new String(n++);c={eventName:c,handler:a,compId:b,key:e};m.push(c);return e};window.JOT_removeListenerByKey=function(c){for(var a=0;a<m.length;a++)if(m[a].key==c){m.splice(a,1);break}};
window.JOT_removeAllListenersForName=function(c){for(var a=0;a<m.length;a++)m[a].eventName==c&&m.splice(a,1)};window.JOT_postEvent=function(c,a,b){var e={eventName:c,eventSrc:a||{},payload:b||{}};if(window.JOT_fullyLoaded)for(a=m.length,b=0;b<a&&b<m.length;b++){var f=m[b];f&&f.eventName==c&&(e.listenerCompId=f.compId||d,(f=typeof f.handler==h?f.handler:window[f.handler])&&f(e))}else window.JOT_delayedEvents.push({eventName:c,eventSrc:a,payload:b})};window.JOT_delayedEvents=[];
window.JOT_fullyLoaded=!1;window.JOT_formatRelativeToNow=function(c,a){var b=((new Date).getTime()-c)/6E4;if(1440<=b||0>b)return null;var e=0;60<=b&&(b/=60,e=2);2<=b&&e++;return a?window.JOT_siteRelTimeStrs[e].replace(g,Math.floor(b)):window.JOT_userRelTimeStrs[e].replace(g,Math.floor(b))}; })()
</script>
<script>

  

  var breadcrumbs = [{"path":"/chromium-os","deleted":false,"title":"Chromium OS","dir":"ltr"},{"path":"/chromium-os/chromiumos-design-docs","deleted":false,"title":"Design Documents","dir":"ltr"},{"path":"/chromium-os/chromiumos-design-docs/verified-boot","deleted":false,"title":"Verified Boot","dir":"ltr"}];
  var JOT_clearDotPath = 'http://www.gstatic.com/sites/p/56e332/system/app/images/cleardot.gif';

  
  var JOT_userRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

  
  

  

  var webspace = {"enableAnalytics":true,"pageSharingId":"jotspot_page","enableUniversalAnalytics":false,"sharingPolicy":"OPENED_WITH_INDICATOR","siteTitle":"The Chromium Projects","isStartPageEnabled":true,"adsensePublisherId":null,"features":{"languageSelectDefaultTextSetToDefault":true,"validateClientGvizDataSourceUrls":true,"moreMobileStyleImprovements":true,"newInsertMenuIcons":true,"accessibleSortingButtons":true,"domainAnalyticsInGAOnly":true,"noCaptcha":true,"fileCabinetScreenReaderFix":true,"updatedTosAndPrivacyLinks":null,"pageDrafts":false,"mobileOrientationFix":true,"plusBadge":false,"pdfEmbedSupport":false,"jsClickFix":true},"isPublic":true,"isConsumer":false,"serverFlags":{"cajaBaseUrl":"//www.gstatic.com/caja","cajaDebugMode":false},"onepickBaseUrl":"https://docs.google.com","domainAnalyticsAccountId":"","plusPageId":"","signInUrl":"https://www.google.com/a/SelectSession?continue\u003dhttp://sites.google.com/a/chromium.org/dev/chromium-os/chromiumos-design-docs/verified-boot\u0026service\u003djotspot","analyticsAccountId":"UA-5484340-1","scottyUrl":"/_/upload","homePath":"/","siteNoticeUrlEnabled":null,"plusPageUrl":"","adsensePromoClickedOrSiteIneligible":true,"csiReportUri":"http://csi.gstatic.com/csi","sharingId":"jotspot","termsUrl":"//www.google.com/intl/en/policies/terms/","gvizVersion":1,"editorResources":{"sitelayout":["http://www.gstatic.com/sites/p/56e332/system/app/css/sitelayouteditor.css"],"text":["http://www.gstatic.com/sites/p/56e332/system/js/codemirror.js","http://www.gstatic.com/sites/p/56e332/system/app/css/codemirror_css.css","http://www.gstatic.com/sites/p/56e332/system/js/trog_edit__en.js","http://www.gstatic.com/sites/p/56e332/system/app/css/trogedit.css","/_/rsrc/1441580320000/system/app/css/editor.css","http://www.gstatic.com/sites/p/56e332/system/app/css/codeeditor.css","/_/rsrc/1441580320000/system/app/css/camelot/editor-jfk-wlb.css"]},"sharingUrlPrefix":"/_/sharing","isAdsenseEnabled":true,"domain":"chromium.org","baseUri":"","name":"dev","siteTemplateId":false,"siteNoticeRevision":null,"siteNoticeUrlAddress":null,"siteNoticeMessage":null,"page":{"isRtlLocale":false,"canDeleteWebspace":null,"isPageDraft":null,"parentPath":"/chromium-os/chromiumos-design-docs","parentWuid":"wuid:gx:2eb69dd73ece341e","siteLocale":"en","timeZone":"America/Los_Angeles","type":"text","title":"Verified Boot","locale":"en","wuid":"wuid:gx:26240468701bb12e","revision":8,"path":"/chromium-os/chromiumos-design-docs/verified-boot","isSiteRtlLocale":false,"pageInheritsPermissions":null,"name":"verified-boot","canChangePath":true,"state":"","properties":{},"bidiEnabled":false,"currentTemplate":{"path":"/system/app/pagetemplates/text","title":"Web Page"}},"canPublishScriptToAnyone":true,"user":{"keyboardShortcuts":true,"sessionIndex":"","guest_":true,"displayNameOrEmail":"guest","userName":"guest","uid":"","renderMobile":false,"domain":"","namespace":"","hasWriteAccess":false,"namespaceUser":false,"primaryEmail":"guest","hasAdminAccess":false},"gadgets":{"baseUri":"/system/app/pages/gadgets"}};
  webspace.page.breadcrumbs = breadcrumbs;

  
  var JOT_siteRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

</script>
<script type="text/javascript">
                window.jstiming.load.tick('scl');
              </script>
<meta name="title" content="Verified Boot - The Chromium Projects" />
<meta itemprop="name" content="Verified Boot - The Chromium Projects" />
<meta property="og:title" content="Verified Boot - The Chromium Projects" />
<meta name="description" content="Home of the Chromium Open Source Project" />
<meta itemprop="description" content="Home of the Chromium Open Source Project" />
<meta id="meta-tag-description" property="og:description" content="Home of the Chromium Open Source Project" />
<style type="text/css">
</style>
<link rel="stylesheet" type="text/css" href="http://www.gstatic.com/sites/p/56e332/system/app/themes/beigeandblue/standard-css-beigeandblue-ltr-ltr.css" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/overlay.css?cb=beigeandblueundefineda100%25%25150goog-ws-leftthemedefaultstandard" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/camelot/allthemes-view.css" />
<!--[if IE]>
          <link rel="stylesheet" type="text/css" href="/system/app/css/camelot/allthemes%2die.css" />
        <![endif]-->
<title>Verified Boot - The Chromium Projects</title>
<meta itemprop="image" content="http://www.chromium.org/_/rsrc/1258650225205/chromium-os/chromiumos-design-docs/verified-boot/diag2png" />
<meta property="og:image" content="http://www.chromium.org/_/rsrc/1258650225205/chromium-os/chromiumos-design-docs/verified-boot/diag2png" />
<script type="text/javascript">
                window.jstiming.load.tick('cl');
              </script>
</head>
<body xmlns="http://www.google.com/ns/jotspot" id="body" class=" en            ">
<div id="sites-page-toolbar" class="sites-header-divider">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-status" class="sites-status" style="display:none;"><div id="sites-notice" class="sites-notice" role="status" aria-live="assertive"> </div></div>
</div>
<div id="sites-chrome-everything-scrollbar">
<div id="sites-chrome-everything" class="">
<div id="sites-chrome-page-wrapper" style="direction: ltr">
<div id="sites-chrome-page-wrapper-inside">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-chrome-header-wrapper" style="height:auto;">
<table id="sites-chrome-header" class="sites-layout-hbox" cellspacing="0" style="height:auto;">
<tr class="sites-header-primary-row" id="sites-chrome-userheader">
<td id="sites-header-title" class="" role="banner"><div class="sites-header-cell-buffer-wrapper"><a href="http://www.chromium.org/" id="sites-chrome-userheader-logo"><img id="logo-img-id" src="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" alt="The Chromium Projects" class="sites-logo  " /></a><h2><a href="http://www.chromium.org/" dir="ltr" id="sites-chrome-userheader-title">The Chromium Projects</a></h2></div></td><td class="sites-layout-searchbox  "><div class="sites-header-cell-buffer-wrapper"><form id="sites-searchbox-form" action="/system/app/pages/search" role="search"><input type="hidden" id="sites-searchbox-scope" name="scope" value="search-site" /><input type="text" id="jot-ui-searchInput" name="q" size="20" value="" aria-label="Search this site" /><div id="sites-searchbox-button-set" class="goog-inline-block"><div role="button" id="sites-searchbox-search-button" class="goog-inline-block jfk-button jfk-button-standard" tabindex="0">Search this site</div></div></form></div></td>
</tr>
<tr class="sites-header-secondary-row" id="sites-chrome-horizontal-nav">
<td colspan="2" id="sites-chrome-header-horizontal-nav-container" role="navigation">
</td>
</tr>
</table>
</div>
<div id="sites-chrome-main-wrapper">
<div id="sites-chrome-main-wrapper-inside">
<table id="sites-chrome-main" class="sites-layout-hbox" cellspacing="0" cellpadding="{scmCellpadding}" border="0">
<tr>
<td id="sites-chrome-sidebar-left" class="sites-layout-sidebar-left initial" style="width:150px">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_7648876402527094" class="sites-embed" role="navigation"><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-projects" jotId="wuid:gx:10ae433dadbbab13" class="sites-navigation-link">Home</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/Home" jotId="wuid:gx:43582b9d2029d3af" class="sites-navigation-link">Chromium</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-os" jotId="wuid:gx:83df2ab1f8880ba" class="sites-navigation-link">Chromium OS</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_14720868319272995" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Quick links</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/for-testers/bug-reporting-guidelines" class="sites-navigation-link">Report bugs</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/developers/discussion-groups" class="sites-navigation-link">Discuss</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/system/app/pages/sitemap/hierarchy" jotId="wuid:gx:4b58a9a350ad12f" class="sites-navigation-link">网站地图</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19690813310444355" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Other sites</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://blog.chromium.org/" class="sites-navigation-link">Chromium Blog</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://code.google.com/chrome/extensions/" class="sites-navigation-link">Google Chrome Extensions</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="https://developers.google.com/chrome/chrome-frame/" class="sites-navigation-link">Google Chrome Frame</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19695218559354544" class="sites-embed" role="complementary"><h4 class="sites-embed-title"></h4><div class="sites-embed-content sites-embed-content-sidebar-textbox"><div dir="ltr"><span style="font-size:x-small">Except as otherwise </span><a href="http://developers.google.com/site-policies.html#restrictions"><span style="font-size:x-small">noted</span></a><span style="font-size:x-small">, the content of this page is licensed under a </span><a href="http://creativecommons.org/licenses/by/2.5/"><span style="font-size:x-small">Creative Commons Attribution 2.5 license</span></a><span style="font-size:x-small">, and examples are licensed under the </span><a href="http://src.chromium.org/viewvc/chrome/trunk/src/LICENSE" target="_blank"><span style="font-size:x-small">BSD License</span></a><span style="font-size:x-small">.<br /></span></div></div></div>
</td>
<td id="sites-canvas-wrapper">
<div id="sites-canvas" role="main">
<div id="goog-ws-editor-toolbar-container"> </div>
<div xmlns="http://www.w3.org/1999/xhtml" id="title-crumbs" style="">
<A href="/chromium-os" dir="ltr">Chromium OS</A>‎ &gt; ‎<A href="/chromium-os/chromiumos-design-docs" dir="ltr">Design Documents</A>‎ &gt; ‎
  </div>
<h3 xmlns="http://www.w3.org/1999/xhtml" id="sites-page-title-header" style="" align="left">
<span id="sites-page-title" dir="ltr" tabindex="-1" style="outline: none">Verified Boot</span>
</h3>
<div id="sites-canvas-main" class="sites-canvas-main">
<div id="sites-canvas-main-content">
<table xmlns="http://www.w3.org/1999/xhtml" cellspacing="0" class="sites-layout-name-one-column sites-layout-hbox"><tbody><tr><td class="sites-layout-tile sites-tile-name-content-1"><div dir="ltr"><div class="sites-embed-align-right-wrapping-on"><div class="sites-embed-border-off sites-embed" style="width:250px;"><div class="sites-embed-content sites-embed-type-toc"><div class="goog-toc sites-embed-toc-maxdepth-6"><p>Contents</p><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Abstract"><strong>1 </strong>Abstract</a></li><li class="goog-toc"><a href="#TOC-Goals-of-verified-boot"><strong>2 </strong>Goals of verified boot</a></li><li class="goog-toc"><a href="#TOC-Getting-to-the-kernel-safely"><strong>3 </strong>Getting to the kernel safely</a></li><li class="goog-toc"><a href="#TOC-Extending-verification-from-the-ker"><strong>4 </strong>Extending verification from the kernel on upward</a></li><li class="goog-toc"><a href="#TOC-Mitigating-potential-bottlenecks"><strong>5 </strong>Mitigating potential bottlenecks</a></li><li class="goog-toc"><a href="#TOC-Handling-updates"><strong>6 </strong>Handling updates</a></li><li class="goog-toc"><a href="#TOC-The-implementation"><strong>7 </strong>The implementation</a></li><li class="goog-toc"><a href="#TOC-Other-issues-ideas-and-notes"><strong>8 </strong>Other issues, ideas, and notes</a></li><li class="goog-toc"><a href="#TOC-Attack-cases"><strong>9 </strong>Attack cases</a></li></ol></div></div></div></div>
<h2><a name="TOC-Abstract"></a>Abstract</h2>
<div style="margin-top:0px;margin-bottom:0px">
<ul style="margin-top:0px;margin-bottom:0px"><li style="margin-top:0px;margin-bottom:0px"><span style="font-family:arial,sans-serif;border-collapse:collapse">The Chromium OS team is implementing a verified boot solution that strives to ensure that users feel secure when logging into a Chromium OS device. Verified boot starts with a read-only portion of firmware, which only executes the next chunk of boot code after verification.</span></li>
<li style="margin-top:0px;margin-bottom:0px"><span style="font-family:arial,sans-serif;border-collapse:collapse">Verified boot strives to ensure that all executed code comes from the Chromium OS source tree, rather than from an attacker or corruption.</span></li>
<li style="margin-top:0px;margin-bottom:0px">Verified boot is focused on stopping the opportunistic attacker. While verified boot is not expected to detect every attack, the goal is to be a significant deterrent which will be improved upon iteratively.</li>
<li style="margin-top:0px;margin-bottom:0px">Verification during boot is performed on-the-fly to avoid delaying system start up.  It uses stored cryptographic hashes and may be compatible with any trusted kernel.</li></ul>
</div>
<p>This document extends and expands on the <a href="http://www.chromium.org/chromium-os/chromiumos-design-docs/firmware-boot-and-recovery">Firmware Boot and Recovery</a> and <a href="http://www.chromium.org/chromium-os/chromiumos-design-docs/verified-boot-crypto">Verified Boot Crypto</a> documents.</p>
Verified
Boot should provide a mechanism that aids the user in detecting when
their system is in need of recovery due to boot path changes. In particular, it should meet these requirements:<br />
<ul><li>Detect non-volatile memory changes from expected state (rw firmware)</li>
<li>Detect file system changes relevant to system boot (kernel, init, modules, fs metadata, policies)<br />
</li>
<li>Support functionality upgrades in the field<br />
</li></ul>
This
feature is not expected to provide 100% detection of attacks. Instead,
it is meant to raise the attack bar significantly and in a way that can
be improved upon iteratively.<br />
<br />
It is important to note that
restraining the boot path to only Chromium-project-supplied code is not a
goal. The focus is to ensure that when code is run that is not
provided for or maintained by upstream, that the user will have the
option to immediately reset the device to a known-good state. Along
these lines, there is no dependence on remote attestation or other
external authorization. Users will always own their computers.<br />
<h2><a name="TOC-Goals-of-verified-boot"></a>Goals of verified boot<br />
</h2>
The primary attacker in this model is an opportunistic attacker. This means that the attacker has accessed the system using:<br />
<ul><li>a remote vector, such as the Chromium-based browser or a browser plugin<br />
</li>
<li>a local vector, such as booting to a USB drive and changing files (but <b>not</b> by replacing the write-protected firmware)<br />
</li></ul>
If we assume attackers access the system via a remote vector and bypass all run-time defenses, then they will have access to modify the root partition (kernel, modules, browser, ...), update read-write firmware, inject code into SMRAM, and so on. In addition,
the attacker can now access any data in the currently-logged-in user's
account such as locally stored media and website cookies. The attacker
may collect passwords when typed by the user into the Chromium-based browser or the
screenlocker.<br />
<br />
An opportunistic <i>local</i> attacker will have a completely different level of access. Access will be achieved using a USB boot drive, or other out-of-band bootable material supported by the firmware. Once the system is running the attacker's operating system, she will be able to modify the root file system and encrypted user-data blobs. She won't have any visibility into the encrypted information but may copy it or modify it.<br />
<br />
While Chromium OS
does as much as possible to guard against such remote and local breaches, no software
system is impervious to successful attacks. Therefore, it is important
that the attacker cannot continue to "own" a machine through permanent, local changes. To that end, on
boot, the firmware and other accessible regions of the system
internals are verified to be in a known good state. If they aren't,
then the firmware recovery process will be initiated (or the user can
request permission to proceed, which would make sense in the case of a development install, for example).<br />
<br />
The
important factor to consider with the attackers considered above is that if
an attacker gains access via the Chromium browser, they can presumably modify the Chromium browser's startup (or bookmarks or server-side settings) to re-attack
the machine at next reboot. This is why it is important to be able to
ensure that a safe recovery/reinstall is possible outside of what can
be done by an attacker on the machine. (Obviously, this is no
deterrent for a <b>determined</b> attacker willing to modify the system physically.)<br />
<h2><a name="TOC-Getting-to-the-kernel-safely"></a>Getting to the kernel safely<br />
</h2>
As
outlined in the Firmware Boot and Recovery document, verification will
occur in several places. Initially, the small read-only stub code will
compute a SHA-2 hash (either with internal code or using a provided
SHA-2 accelerator) of the read-write portion of the firmware. An RSA
signature of this hash will then be verified using a permanently
stored public key (of, <a href="http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57-Part1-revised2_Mar08-2007.pdf" title="ideally">ideally</a>, 2048 bits or more).<br />
<br />
The
read-write firmware is then responsible for computing hashes of any
other non-volatile memory and the kernel that will be executed. It will contain its own <i>subkey</i> and a list of cryptographic hashes for the data to be verified: kernel, initrd, master boot record, and so on. These additional hashes will be signed by the subkey so that they may be updated without requiring the write-protected key to be used for every update. (Note, the kernel+initrd signed hashes may be stored with the kernel+initrd on disk to avoid needing a firmware update when they change.)<br />
<br />
Once we're in the kernel, we've successfully performed a verified boot.<br />
<h2><a name="TOC-Extending-verification-from-the-ker"></a>Extending verification from the kernel on upward<br />
</h2>
In
general, once we're running, integrity measurements become less
useful. We can ensure that the Chromium browser that we execute has not been
tampered with, but we can't guarantee that the same attack that
compromised it the first time won't compromise it a second time
without updating.<br />
<br />
To ensure that an update is possible, the executables, modules, and configuration files that allow the system to receive updates must be authentic and untampered with. Getting to that point requires network access and a running autoupdater. Given that Chromium OS keeps a very minimal root file system, it's easier to just verify everything on it.<br />
<br />
While that sounds great in theory, in practice it is hard to guarantee an intact file system without paying the cost for upfront checks. If the read-write firmware were to verify the entire root partition before proceeding to boot, it would add at least 5 seconds to the boot-time on current netbooks. This delay is untenable.<br />
<br />
Instead of performing full file system verification in advance, it can be done on demand from a verified kernel. A transparent block device will be layered between the run-time system and all running processes. It will be configured during kernel startup using either in-kernel code changes or from a firmware-verified initial ramdisk image. Each block that is accessed via the transparent block device layer will be checked against a cryptographic hash which is stored in a central collection of hashes for the verifiable block device.  This may be in a standalone partition or trailing the filesystem on the verifiable block device.<br />
<br />
Initially, blocks will be 4KB in size. For a root file system of roughly ~75MB, there will be roughly 19,200 SHA-1 hashes. On current x86 and ARM based systems, computing the SHA-1 hash of 4KB takes between 0.2ms and 0.5ms. There will be additional overhead (TBD) incurred by accessing the correct block hash and comparing the cryptographic digests.  Once verified, blocks should live in the page cache above the block layer. This will mean that verification does not occur on every read event. To further amortize time-costs, the block hashes will be segmented into logical bundles of block hashes. Each bundle will be hashed. The subsequent list of bundle hashes will then be hashed. This layering can be repeated as needed to build a tree.  The final, single hash will be hard coded into the kernel or supplied through a device interface from a trusted initial RAM disk.<br />
<br />
<div style="display:block;margin-top:5px;margin-right:auto;margin-bottom:0pt;text-align:left"><br />
<div style="display:block;text-align:center;margin-right:auto;margin-left:auto"><a href="http://sites.google.com/a/chromium.org/dev/chromium-os/chromiumos-design-docs/verified-boot/diag2.png?attredirects=0" imageanchor="1"></a>
<div style="display:block;text-align:center;margin-right:auto;margin-left:auto"><a href="http://sites.google.com/a/chromium.org/dev/chromium-os/chromiumos-design-docs/verified-boot/diag2.png?attredirects=0" imageanchor="1"><img border="0" src="http://www.chromium.org/_/rsrc/1258650225205/chromium-os/chromiumos-design-docs/verified-boot/diag2png" /></a></div>
<br />
</div>
<br />
</div>
<br />
<br />
Note that SHA-1 is considered to be <a href="http://csrc.nist.gov/groups/ST/toolkit/secure_hashing.html" target="_blank">unsafe after 2010 by NIST</a> for general use. The biggest risk here is that specific block collisions can be found and made such that they provide an alternate execution path. We could use any hashing algorithm supported by the Linux kernel in our implementation. SHA-1 is just a specific example.<br />
<div>
<h2><a name="TOC-Mitigating-potential-bottlenecks"></a>Mitigating potential bottlenecks<br />
</h2>
Loading hashes off the same disk as the data for each block would affect performance during a read. Right now, the plan is to read in signed bundles of hashes as blocks in that bundle range are accessed. Once a bundle is loaded into memory, it is kept there. If we assume that we're looking at something like 20k-hashes, then that will require around 400KB of memory. Even if the needed hashes grow to twice that, allocating 1MB of kernel memory doesn't seem too onerous. In addition, keeping the block hashes in memory will provide for easy linear addressing of the hashes since they will be in block-order.<br />
<h2><a name="TOC-Handling-updates"></a>Handling updates<br />
</h2>
For Chromium OS, the autoupdater will update the collection of hashes specific to the partition it is updating.  In general, the complete collection of hashes for a specific partition will be generated by running a lightweight utility directly on the filesystem image. It will walk the origin block device and emit an image file that
contains the properly formatted hash collection. In addition, it will
emit the SHA-1 hash of the bundle hashes. This will be the
authoritative hash that will need to be either signed or stored in a
signed/verified location, such as in the kernel. The resulting file can either be appended to the filesystem image or stored in a standalone partition (hash partition).    On update, a direct difference of the new hash collection can be taken using bsdiff against the last versions.  However, it may be that more efficient difference generation approaches may be used as long as the end result is the same.<br />
<h2><a name="TOC-The-implementation"></a>The implementation</h2>
Post-firmware verified boot will most likely be implemented as a device mapper target. It will provide the transparent, verifying block layer. Initially, it will be assumed that there will be a verified initrd that can be used to set up the root partition using the dm device. A simple utility tool will be written that will directly hash a given block device and emit a compatible binary blob that contains the collection of hashes. It will take the format:</div>
<div><span style="font-family:courier new,monospace"><font face="&amp;apos;trebuchet ms&amp;apos;"><br />
</font>
   hash</span><sub style="font-family:courier new,monospace">block_1</sub><span style="font-family:courier new,monospace"> . . . hash</span><sub style="font-family:courier new,monospace">block_n</sub><span style="font-family:courier new,monospace"><br />
   </span><span style="font-family:courier new,monospace">hash</span><sub style="font-family:courier new,monospace">bundle_1</sub><span style="font-family:courier new,monospace">. . . </span><span style="font-family:courier new,monospace">hash</span><sub style="font-family:courier new,monospace">bundle_m</sub><span style="font-family:courier new,monospace"><br />
</span><br />
This data will live either in its own partition or be appended to the verified partition (aligned on a block boundary). Its location, the hash algorithm used, and the hash of bundle hashes should be passed in as arguments to the device mapper setup process (either using dmsetup from an initrd or directly in the kernel).<br />
</div><div><br /></div><div>Living implementation documentation can be found <a href="https://chromium.googlesource.com/chromiumos/third_party/kernel/+/master/Documentation/device-mapper/dm-verity.txt">here</a> and <a href="https://chromium.googlesource.com/chromiumos/third_party/kernel/+/master/Documentation/device-mapper/dm-bht.txt">here</a>.</div>
<h2><a name="TOC-Other-issues-ideas-and-notes"></a>Other issues, ideas, and notes<br />
</h2>
<ul><li>All
verification performed after the kernel is running should be
independent of the firmware verification. This allows for developers
to run their own builds as well as for the boot-time verification to be
compatible with a TCG-style boot.
</li>
<li>The partition table should be validated to some extent by the read-write firmware, but if there are any kernel/firmware partition parsing bugs, we may be able to catch them with audits as well.<br />
</li>
<li>Verified Boot can play nicely with the
TPM. Once a signed kernel is up, it can initialize the TPM's PCR
registers and use those for measurement tracking. In particular, we
have the option of using it (Linux-IMA style) to perform disk
encryption key protection and possibly even other pre-login state
protection where the key becomes available only if we've booted without
modification.</li>
<li>The hash partition will be subject to
replay attack unless the kernel version that pairs with it is included
in the file and the kernel is upgraded when the hashes are. However,
the kernel+initrd will suffer the same attack for the next level up.
Avoiding replay/rollback attacks is non-trivial since the firmware can't guarantee the local clock is not changed. A local TPM tickstamp
blob would need to be included in the signed hash payloads to solve the problem to some degree. If autoupdates
were customized per-download, this may be possible, but at present,
this is not planned.<br />
</li>
<li>Key management is of utmost importance for the key used to sign the read-only firmware. That key should only be used on the R/W firmware which should be
updated much less frequently than the rest of the system. If possible,
this key should never be exposed on a network-enabled machine, but that is out of scope for this design.</li>
<li>Having a fully tamper-evident root file system means that if desired, a manifest of service-specific public keys/certificates could be stored on the root partition. These keys could then be used to verify the authenticity and integrity any data stored on the stateful partition that was signed by a remote server (Google or another provider).</li>
<li>There is no plan to support any remote inspection of whether a Chromium OS installation is using a 'verified boot' or a development version.</li>
<li>The autoupdate process currently has a file-centric view. This means that it could be possible for file system layout to diverge across machines. If this is the case, block hashes may still be used, but a more file-centric view may be needed. If the updater moves towards file system image differencing, this design will work as is.</li></ul>
<h2><a name="TOC-Attack-cases"></a>Attack cases</h2>
<p>This
section only discusses the current threat model, but many of the
attacks can be generalized to other attack vectors. In addition, these
scenarios ignore all other attack mitigation techniques not included in
the document above. In reality, various system-level and Chromium-level
defenses should aid in making run-time attacks difficult and unreliable.</p>
<p><i>Vector</i>: Opportunistic local attacker with a USB stick or bootable SD card.<br />
<i>Scenario</i>:
Attacker boots the system off of an external boot device. The attacker then changes files and copies the entire system.<br />
<i>Coverage</i>: Verified Boot will detect this tampering. Encrypted user data will still be protected.<br />
<i>Exposure: </i>None. User will need to recover their system.</p>
<p><i>Scenario</i>:
Attacker boots the system off of an external boot device and leaves the system running a "fake" Chromium OS to phish user data.<br />
<i>Coverage</i>: Verified Boot will not impact this <i>unless<u> </u></i>the user reboots the system before logging in.<br />
<i>Exposure: </i>None to complete depending on if the user reboots prior to logging in. If the user left the machine at the screenlocker, a fake screenlocker could be used in the phishing OS since it is unlikely a user will reboot before unlocking. This may be addressed in the future with clever authentication use (PCR+TPM, ?). However, a paranoid user that left their machine in an unsafe place may just want to reboot to be safe.</p>
<p><i>Vector</i>: Determined local attacker with a USB drive and a toolkit<br />
<i>Scenario</i>:
Attacker opens the system up and enables the write-pin on the write-protected firmware. The attacker then boots the system off of an external boot device. The root file system is changed along with the formerly write-protected and read-write firmware.<br />
<i>Coverage</i>: Verified Boot will operate normally and will not detect any variance.<br />
<i>Exposure: </i>Complete; a determined attacker that will physically modify the machine cannot be easily stopped. They may also install hardware keyboard sniffers, microphones, cameras, etc.</p>
<p><i>Vector</i>: Chromium or a Chromium plugin<br />
<i>Scenario</i>:
No superuser privileges are gained, but the attacker can modify Chromium data. The attacker changes bookmarks, starting pages, marks their
pages as ok for popups, and disables safe browsing. In addition,
cookies and stored passwords are harvested and posted to a remote
server.<br />
<i>Coverage</i>: Verified Boot has no impact.<br />
<i>Exposure: </i>Only the initially compromised user is exposed.</p>
<p><i>Scenario</i>:
Attacker gains superuser privileges. The attacker remounts root partition read-write directly. The attacker then replaces
/usr/bin/chromeos-chrome with their own build of Chromium that includes
malware/illegal ad revenue and password/credit card sniffing.<br />
<i>Coverage</i>: Verified Boot will detect after the next reboot (not after a suspend to RAM).<br />
<i>Exposure: </i>Until reboot, any user that logs in is exposed (password, cookies, encrypted data).</p>
<p><i>Scenario</i>: Attacker gains superuser privileges. The
attacker remounts root partition read-write directly. The attacker then adds a kernel
module in the form of a rootkit for the system to load on next reboot.<br />
<i>Coverage</i>: Verified Boot will detect after the next reboot.<br />
<i>Exposure: </i>Until reboot, any user that logs in is exposed (password, cookies, encrypted data).</p>
<p><i>Scenario</i>: Attacker gains superuser privileges. The attacker then modifies the encrypted file system metadata which exploits a file system bug in the kernel on next login.<br />
<i>Coverage</i>: Verified Boot has no direct impact. However, if the autoupdater runs before next login, the vulnerability may be patched.<br />
<i>Exposure</i>: On next login, the tampered with encrypted file system metadata attack will trigger.</p>
<p><i>Scenario</i>:
Attacker gains superuser privileges. The attacker then
replaces the hash-partition with an older version and replaces system image with one that has known vulnerabilities (which may be easier
to exploit reliably than the vector used for attack). The attacker
will then change the current user's configuration to auto-open an
attack URL to re-exploit the system immediately after reboot. If the
attacker can gain superuser privileges repeatedly, then it will be difficult for autoupdate to repair.<br />
<i>Coverage</i>: Verified Boot will not be able to detect hash-partition
replay attacks easily. It may be possible to retroactively detect then
by the autoupdater after the network is up, but an attacker will always
be able to the system appear to just be out-of-date.<br />
<i>Exposure</i>: Any user that logs in is exposed across reboots.<br />
<i>Notes</i>: Downgrade/replay attacks of this nature will be less
dangerous if autoupdater is able to run prior to Chromium starting, but
there will most likely be a race between the two. It may make sense to
include a version check early in the Chromium startup process to detect
seriously out-of-date browsers/systems prior to their opening dangerous
pages.</p>
<p><i>Exposure summary:</i></p>
<ul><li>Run-time attacks against unsignable data: Chromium configuration</li>
<li>Persisted attacks by defaulting Chromium to launch the attack site on next start</li>
<li>Logged-in user data is exposed immediately after compromise.<br />
</li>
<ul><li>With partial signing, a Chromium replacement would result in cross-user exposure after reboot.</li>
<li>With full signing, other system users would be notified prior to exposure<br />
</li></ul>
<li>Metadata attacks against the kernel will not be caught by signing per-file.</li>
<li>Downgraded
manifest file attacks are difficult to detect since there is no current
way to encoded tamperproof system time into manifest files.</li></ul></div></td></tr></tbody></table>
</div> 
</div> 
<div id="sites-canvas-bottom-panel">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-subpages"> </div>
<div id="sites-attachments-container">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-attachments">
<div class="sites-attachments-row"><div class="sites-attachments-icon" style="left:0px;"><span aria-label="Attachments" title="Attachments"><div class="sites-translucent sites-symbol" aria-hidden="true">Č</div></span></div><div id="sites-attachments-update-div" class="sites-attachments-inner-div" style="display:none;"><span class="sites-attachments-update-icon"><img src="http://www.gstatic.com/sites/p/56e332/system/app/images/spinner.gif" /></span><div class="sites-attachments-update-text">Updating...</div></div></div><div class="sites-attachments-separator"></div>
<div id="attachment-wuid:gx:a8f7719f99cd816"><div class="sites-attachments-row"><div class="sites-attachments-icon sites-attachments-icon-accessible" style="left:5px"><div class="sites-translucent sites-symbol" aria-label="File" title="File">ċ</div></div><div class="sites-attachments-inner-div"><div class="sites-attachments-name">diag2png <div class="sites-translucent">(60k)</div></div><div class="sites-attachments-author">Jed Hartman, <div class="sites-translucent">Nov 19, 2009, 9:03 AM</div></div></div><div class="sites-attachments-version sites-attachments-version-accessible"><a href="/system/app/pages/admin/revisions?wuid=wuid:gx:a8f7719f99cd816">v.1</a></div><div id="attachment-download-wuid:gx:a8f7719f99cd816" class="sites-attachments-icon sites-attachments-icon-accessible" style="right:0px"><a href="/chromium-os/chromiumos-design-docs/verified-boot/diag2png?attredirects=0&amp;d=1" aria-label="Download diag2png" title="Download" role="button"><span class="sites-symbol" aria-hidden="true">ď</span></a></div></div><div class="sites-attachments-separator"></div></div>
<div style="height: 10px"></div>
</div>
</div>
<a xmlns="http://www.w3.org/1999/xhtml" name="page-comments"></a>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-comments"><div class="sites-comment-docos-wrapper"><div class="sites-comment-docos"><div class="sites-comment-docos-background"></div><div class="sites-comment-docos-header"><div class="sites-comment-docos-header-title">Comments</div></div><div id="sites-comment-docos-pane" class="sites-comment-docos-pane"></div></div></div></div>
</div>
</div> 
</td> 
</tr>
</table> 
</div> 
</div> 
<div id="sites-chrome-footer-wrapper">
<div id="sites-chrome-footer-wrapper-inside">
<div id="sites-chrome-footer">
</div>
</div>
</div>
</div> 
</div> 
<div id="sites-chrome-adminfooter-container">
<div xmlns="http://www.w3.org/1999/xhtml" class="sites-adminfooter" role="navigation"><p><a class="sites-system-link" href="https://www.google.com/a/UniversalLogin?service=jotspot&amp;continue=http://sites.google.com/a/chromium.org/dev/chromium-os/chromiumos-design-docs/verified-boot">Sign in</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/recentChanges">Recent Site Activity</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/reportAbuse" target="_blank">Report Abuse</a><span aria-hidden="true">|</span><a class="sites-system-link" href="javascript:;" onclick="window.open(webspace.printUrl)">Print Page</a><span aria-hidden="true">|</span><span class="sites-system-link">Powered By</span> <b class="powered-by"><a href="http://sites.google.com">Google Sites</a></b></p></div>
</div>
</div> 
</div> 
<div id="sites-chrome-onebar-footer">
</div>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('sjl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" src="http://www.gstatic.com/sites/p/56e332/system/js/jot_min_view__en.js"></script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('jl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml">
      
          sites.core.Analytics.createTracker();
          sites.core.Analytics.trackPageview();
        
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
                    sites.Searchbox.initialize(
                        'sites-searchbox-search-button',
                        {"object":[]}['object'],
                        'search-site',
                        {"label":"Configure search options...","url":"/system/app/pages/admin/settings"});
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
      gsites.HoverPopupMenu.createSiteDropdownMenus('sites-header-nav-dropdown', false);
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("7648876402527094", "Navigation", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_7648876402527094');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("14720868319272995", "Quick links", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_14720868319272995');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("19690813310444355", "Other sites", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_19690813310444355');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
              new sites.CommentPane('//docs.google.com/comments/d/AAHRpnXvrAwjAfmld0ObrebBiGRq9hqxn8sD_Mf-YDr_AFUWPFmIIxHjvk631MCELt4e7E0pZtWO2BPeFrlDg1fmrqD5CCOQMMnOArGDJ74ZWWRfXLGxRvsiXG-j02pkSXYacCGuMS50O/api/js?anon=true',
                  false, false);
            </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
  setTimeout(function() {
    var fingerprint = gsites.date.TimeZone.getFingerprint([]);
    gsites.Xhr.send('http://www.chromium.org/_/tz', null, null, 'GET', null, null, { afjstz: fingerprint });
  }, 500);
</script>
<script xmlns="http://www.w3.org/1999/xhtml">
                    window.onload = function() {
                      if (false) {
                        JOT_setMobilePreview();
                      }
                      var loadTimer = window.jstiming.load;
                      loadTimer.tick("ol");
                      loadTimer["name"] = "load," + webspace.page.type + ",user_page";
                      window.jstiming.report(loadTimer, {}, 'http://csi.gstatic.com/csi');
                    }
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
        JOT_insertAnalyticsCode(false,
            false);
      </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    var maestroRunner = new gsites.pages.view.SitesMaestroRunner(
        webspace, "en");
    maestroRunner.initListeners();
    maestroRunner.installEditRender();
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
  //<![CDATA[
    // Decorate any fastUI buttons on the page with a class of 'goog-button'.
    if (webspace.user.hasWriteAccess) {
      JOT_decorateButtons();
    }

    // Fires delayed events.
    (function() {
      JOT_fullyLoaded = true;
      var delayedEvents = JOT_delayedEvents;
      for (var x = 0; x < delayedEvents.length; x++) {
        var event = delayedEvents[x];
        JOT_postEvent(event.eventName, event.eventSrc, event.payload);
      }
      JOT_delayedEvents = null;
      JOT_postEvent('pageLoaded');
    })();
  //]]>
</script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    JOT_postEvent('decorateGvizCharts');
  </script>
<script type="text/javascript">
          JOT_setupPostRenderingManager();
        </script>
<script type="text/javascript">
          JOT_postEvent('renderPlus', null, 'sites-chrome-main');
        </script>
<div id="server-timer-div" style="display:none"> </div>
<script type="text/javascript">
          window.jstiming.load.tick('render');
          JOT_postEvent('usercontentrendered', this);
        </script>
</body>
</html>
