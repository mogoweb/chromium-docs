<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/WebPage">
<head>
<meta http-equiv="X-UA-Compatible" content="chrome=1" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var e="wtsrt_",g="tbsd_",h="tbnd_",k="start",l="_wtsrt",m="_tbnd",n="CSI/";(function(){function f(a){this.t={};this.tick=function(a,c,b){this.t[a]=[void 0!=b?b:(new Date).getTime(),c];if(void 0==b)try{window.console.timeStamp(n+a)}catch(d){}};this.tick(k,null,a)}var a;window.performance&&(a=window.performance.timing);var p=a?new f(a.responseStart):new f;window.jstiming={Timer:f,load:p};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick(l,void 0,c),b.tick(e,l,d),b.tick(g,e))}try{a=null,
window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick(m,void 0,window.chrome.csi().startE),b.tick(h,m,c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick(m,void 0,window.external.startE),b.tick(h,m,c))),a&&(window.jstiming.pt=a)}catch(q){}})(); })()
</script>
<link rel="shortcut icon" href="/_/rsrc/1354323194313/favicon.ico" type="image/x-icon" />
<link rel="apple-touch-icon" href="https://ssl.gstatic.com/sites/p/56e332/system/app/images/apple-touch-icon.png" type="image/png" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var d="",g="__duration__",h="function";function k(c){return document.getElementById(c)}window.byId=k;function l(c){return c.replace(/^\s+|\s+$/g,d)}window.trim=l;var m=[],n=0;window.JOT_addListener=function(c,a,b){var e=new String(n++);c={eventName:c,handler:a,compId:b,key:e};m.push(c);return e};window.JOT_removeListenerByKey=function(c){for(var a=0;a<m.length;a++)if(m[a].key==c){m.splice(a,1);break}};
window.JOT_removeAllListenersForName=function(c){for(var a=0;a<m.length;a++)m[a].eventName==c&&m.splice(a,1)};window.JOT_postEvent=function(c,a,b){var e={eventName:c,eventSrc:a||{},payload:b||{}};if(window.JOT_fullyLoaded)for(a=m.length,b=0;b<a&&b<m.length;b++){var f=m[b];f&&f.eventName==c&&(e.listenerCompId=f.compId||d,(f=typeof f.handler==h?f.handler:window[f.handler])&&f(e))}else window.JOT_delayedEvents.push({eventName:c,eventSrc:a,payload:b})};window.JOT_delayedEvents=[];
window.JOT_fullyLoaded=!1;window.JOT_formatRelativeToNow=function(c,a){var b=((new Date).getTime()-c)/6E4;if(1440<=b||0>b)return null;var e=0;60<=b&&(b/=60,e=2);2<=b&&e++;return a?window.JOT_siteRelTimeStrs[e].replace(g,Math.floor(b)):window.JOT_userRelTimeStrs[e].replace(g,Math.floor(b))}; })()
</script>
<script>

  

  var breadcrumbs = [{"path":"/chromium-os","deleted":false,"title":"Chromium OS","dir":"ltr"},{"path":"/chromium-os/testing","deleted":false,"title":"Testing Home","dir":"ltr"},{"path":"/chromium-os/testing/autoserv-packaging","deleted":false,"title":"Autoserv Packaging","dir":"ltr"}];
  var JOT_clearDotPath = 'https://ssl.gstatic.com/sites/p/56e332/system/app/images/cleardot.gif';

  
  var JOT_userRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

  
  

  

  var webspace = {"enableAnalytics":true,"pageSharingId":"jotspot_page","enableUniversalAnalytics":false,"sharingPolicy":"OPENED_WITH_INDICATOR","siteTitle":"The Chromium Projects","isStartPageEnabled":true,"adsensePublisherId":null,"features":{"languageSelectDefaultTextSetToDefault":true,"validateClientGvizDataSourceUrls":true,"moreMobileStyleImprovements":true,"newInsertMenuIcons":true,"accessibleSortingButtons":true,"domainAnalyticsInGAOnly":true,"noCaptcha":true,"fileCabinetScreenReaderFix":true,"updatedTosAndPrivacyLinks":null,"pageDrafts":false,"mobileOrientationFix":true,"plusBadge":false,"pdfEmbedSupport":false,"jsClickFix":true},"isPublic":true,"isConsumer":false,"serverFlags":{"cajaBaseUrl":"//www.gstatic.com/caja","cajaDebugMode":false},"onepickBaseUrl":"https://docs.google.com","domainAnalyticsAccountId":"","plusPageId":"","signInUrl":"https://www.google.com/a/SelectSession?continue\u003dhttps://sites.google.com/a/chromium.org/dev/chromium-os/testing/autoserv-packaging\u0026service\u003djotspot","analyticsAccountId":"UA-5484340-1","scottyUrl":"/_/upload","homePath":"/","siteNoticeUrlEnabled":null,"plusPageUrl":"","adsensePromoClickedOrSiteIneligible":true,"csiReportUri":"https://gg.google.com/csi","sharingId":"jotspot","termsUrl":"//www.google.com/intl/en/policies/terms/","gvizVersion":1,"editorResources":{"sitelayout":["https://ssl.gstatic.com/sites/p/56e332/system/app/css/sitelayouteditor.css"],"text":["https://ssl.gstatic.com/sites/p/56e332/system/js/codemirror.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codemirror_css.css","https://ssl.gstatic.com/sites/p/56e332/system/js/trog_edit__en.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/trogedit.css","/_/rsrc/1441580320000/system/app/css/editor.css","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codeeditor.css","/_/rsrc/1441580320000/system/app/css/camelot/editor-jfk-wlb.css"]},"sharingUrlPrefix":"/_/sharing","isAdsenseEnabled":true,"domain":"chromium.org","baseUri":"","name":"dev","siteTemplateId":false,"siteNoticeRevision":null,"siteNoticeUrlAddress":null,"siteNoticeMessage":null,"page":{"isRtlLocale":false,"canDeleteWebspace":null,"isPageDraft":null,"parentPath":"/chromium-os/testing","parentWuid":"wuid:gx:2e2ee5668f423109","siteLocale":"en","timeZone":"America/Los_Angeles","type":"text","title":"Autoserv Packaging","locale":"en","wuid":"wuid:gx:34092bd6fd5781c0","revision":11,"path":"/chromium-os/testing/autoserv-packaging","isSiteRtlLocale":false,"pageInheritsPermissions":null,"name":"autoserv-packaging","canChangePath":true,"state":"","properties":{},"bidiEnabled":false,"currentTemplate":{"path":"/system/app/pagetemplates/text","title":"Web Page"}},"canPublishScriptToAnyone":true,"user":{"keyboardShortcuts":true,"sessionIndex":"","guest_":true,"displayNameOrEmail":"guest","userName":"guest","uid":"","renderMobile":false,"domain":"","namespace":"","hasWriteAccess":false,"namespaceUser":false,"primaryEmail":"guest","hasAdminAccess":false},"gadgets":{"baseUri":"/system/app/pages/gadgets"}};
  webspace.page.breadcrumbs = breadcrumbs;

  
  var JOT_siteRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

</script>
<script type="text/javascript">
                window.jstiming.load.tick('scl');
              </script>
<meta name="title" content="Autoserv Packaging - The Chromium Projects" />
<meta itemprop="name" content="Autoserv Packaging - The Chromium Projects" />
<meta property="og:title" content="Autoserv Packaging - The Chromium Projects" />
<meta name="description" content="Home of the Chromium Open Source Project" />
<meta itemprop="description" content="Home of the Chromium Open Source Project" />
<meta id="meta-tag-description" property="og:description" content="Home of the Chromium Open Source Project" />
<style type="text/css">
</style>
<link rel="stylesheet" type="text/css" href="https://ssl.gstatic.com/sites/p/56e332/system/app/themes/beigeandblue/standard-css-beigeandblue-ltr-ltr.css" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/overlay.css?cb=beigeandblueundefineda100%25%25150goog-ws-leftthemedefaultstandard" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/camelot/allthemes-view.css" />
<!--[if IE]>
          <link rel="stylesheet" type="text/css" href="/system/app/css/camelot/allthemes%2die.css" />
        <![endif]-->
<title>Autoserv Packaging - The Chromium Projects</title>
<meta itemprop="image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<meta property="og:image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<script type="text/javascript">
                window.jstiming.load.tick('cl');
              </script>
</head>
<body xmlns="http://www.google.com/ns/jotspot" id="body" class=" en            ">
<div id="sites-page-toolbar" class="sites-header-divider">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-status" class="sites-status" style="display:none;"><div id="sites-notice" class="sites-notice" role="status" aria-live="assertive"> </div></div>
</div>
<div id="sites-chrome-everything-scrollbar">
<div id="sites-chrome-everything" class="">
<div id="sites-chrome-page-wrapper" style="direction: ltr">
<div id="sites-chrome-page-wrapper-inside">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-chrome-header-wrapper" style="height:auto;">
<table id="sites-chrome-header" class="sites-layout-hbox" cellspacing="0" style="height:auto;">
<tr class="sites-header-primary-row" id="sites-chrome-userheader">
<td id="sites-header-title" class="" role="banner"><div class="sites-header-cell-buffer-wrapper"><a href="https://www.chromium.org/" id="sites-chrome-userheader-logo"><img id="logo-img-id" src="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" alt="The Chromium Projects" class="sites-logo  " /></a><h2><a href="https://www.chromium.org/" dir="ltr" id="sites-chrome-userheader-title">The Chromium Projects</a></h2></div></td><td class="sites-layout-searchbox  "><div class="sites-header-cell-buffer-wrapper"><form id="sites-searchbox-form" action="/system/app/pages/search" role="search"><input type="hidden" id="sites-searchbox-scope" name="scope" value="search-site" /><input type="text" id="jot-ui-searchInput" name="q" size="20" value="" aria-label="Search this site" /><div id="sites-searchbox-button-set" class="goog-inline-block"><div role="button" id="sites-searchbox-search-button" class="goog-inline-block jfk-button jfk-button-standard" tabindex="0">Search this site</div></div></form></div></td>
</tr>
<tr class="sites-header-secondary-row" id="sites-chrome-horizontal-nav">
<td colspan="2" id="sites-chrome-header-horizontal-nav-container" role="navigation">
</td>
</tr>
</table>
</div>
<div id="sites-chrome-main-wrapper">
<div id="sites-chrome-main-wrapper-inside">
<table id="sites-chrome-main" class="sites-layout-hbox" cellspacing="0" cellpadding="{scmCellpadding}" border="0">
<tr>
<td id="sites-chrome-sidebar-left" class="sites-layout-sidebar-left initial" style="width:150px">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_7648876402527094" class="sites-embed" role="navigation"><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-projects" jotId="wuid:gx:10ae433dadbbab13" class="sites-navigation-link">Home</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/Home" jotId="wuid:gx:43582b9d2029d3af" class="sites-navigation-link">Chromium</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-os" jotId="wuid:gx:83df2ab1f8880ba" class="sites-navigation-link">Chromium OS</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_14720868319272995" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Quick links</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/for-testers/bug-reporting-guidelines" class="sites-navigation-link">Report bugs</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/developers/discussion-groups" class="sites-navigation-link">Discuss</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/system/app/pages/sitemap/hierarchy" jotId="wuid:gx:4b58a9a350ad12f" class="sites-navigation-link">网站地图</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19690813310444355" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Other sites</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://blog.chromium.org/" class="sites-navigation-link">Chromium Blog</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://code.google.com/chrome/extensions/" class="sites-navigation-link">Google Chrome Extensions</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="https://developers.google.com/chrome/chrome-frame/" class="sites-navigation-link">Google Chrome Frame</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19695218559354544" class="sites-embed" role="complementary"><h4 class="sites-embed-title"></h4><div class="sites-embed-content sites-embed-content-sidebar-textbox"><div dir="ltr"><span style="font-size:x-small">Except as otherwise </span><a href="http://developers.google.com/site-policies.html#restrictions"><span style="font-size:x-small">noted</span></a><span style="font-size:x-small">, the content of this page is licensed under a </span><a href="http://creativecommons.org/licenses/by/2.5/"><span style="font-size:x-small">Creative Commons Attribution 2.5 license</span></a><span style="font-size:x-small">, and examples are licensed under the </span><a href="http://src.chromium.org/viewvc/chrome/trunk/src/LICENSE" target="_blank"><span style="font-size:x-small">BSD License</span></a><span style="font-size:x-small">.<br /></span></div></div></div>
</td>
<td id="sites-canvas-wrapper">
<div id="sites-canvas" role="main">
<div id="goog-ws-editor-toolbar-container"> </div>
<div xmlns="http://www.w3.org/1999/xhtml" id="title-crumbs" style="">
<A href="/chromium-os" dir="ltr">Chromium OS</A>‎ &gt; ‎<A href="/chromium-os/testing" dir="ltr">Testing Home</A>‎ &gt; ‎
  </div>
<h3 xmlns="http://www.w3.org/1999/xhtml" id="sites-page-title-header" style="" align="left">
<span id="sites-page-title" dir="ltr" tabindex="-1" style="outline: none">Autoserv Packaging</span>
</h3>
<div id="sites-canvas-main" class="sites-canvas-main">
<div id="sites-canvas-main-content">
<table xmlns="http://www.w3.org/1999/xhtml" cellspacing="0" class="sites-layout-name-one-column sites-layout-hbox"><tbody><tr><td class="sites-layout-tile sites-tile-name-content-1"><div dir="ltr"><span style="background-color:transparent;font-family:Trebuchet MS;font-size:17px;white-space:pre-wrap;line-height:1.15">Autoserv at a glance</span><br /><span><br /><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><a href="https://github.com/autotest/autotest/wiki/Autoserv" style="text-decoration:none"><span style="font-size:15px;font-family:Arial;color:rgb(17,85,204);background-color:transparent;text-decoration:underline;vertical-align:baseline;white-space:pre-wrap">Autoserv</span></a><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> -- as described on its documentation page -- is a framework for automating machine control.  It can do things like power cycle, install kernels, run arbitrary commands, transfer files, and run autotest tests.  While a “machine” can be virtual, local, or remote, autoserv is largely used on chromeOS for remotely controlling chromebooks for automated testing purposes.</span></p><br /><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Autoserv includes specific support for Autotest.  It’s able to install Autotest on host devices, run control files on them, and then fetch results back to the server.  To install the appropriate files onto a host device, autoserv’s </span><span style="font-size:15px;font-family:Arial;background-color:transparent;font-style:italic;vertical-align:baseline;white-space:pre-wrap">packaging system </span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">is used. Since autotest is it's own package it can change at a rate independent of the image, and changes to one do not require changes to the other. Using packages also allows us continue with our suite scheduling logic while non-essential packages are staged asynchronously.</span></p><br /><h2 dir="ltr" style="line-height:1.15;margin-top:10pt;margin-bottom:0pt"><a name="TOC-Autoserv-packaging-high-level-overview"></a><span style="font-size:17px;font-family:Trebuchet MS;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Autoserv packaging high-level overview</span></h2><br /><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Autoserv’s packaging system is essentially a set of functions to fetch, upload, install, and remove packages that are necessary to control a device under test (DUT).  Each package is a collection of files that is tarred and bzipped (into a *.tar.bz2 file) to facilitate the transferring of files onto the DUT.  When transferring packages to a DUT, the system computes an MD5 checksum for each package to determine whether or not any previously-installed package has changed and needs to be re-installed.  A package is only installed if it has changed according to the checksum (or, of course, if the package is not already on the DUT).</span></p><br /><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">There are 3 types of packages: those associated with test code (“test”); with profiler code (“profiler”); and with dependencies (“dep”).  These packages are all generally handled the same by the packaging system, but they’re installed into different subfolders on the DUT.  There is also a special package that is used to bundle the autotest client code (“client”). </span></p><br /><h2 dir="ltr" style="line-height:1.15;margin-top:10pt;margin-bottom:0pt"><a name="TOC-Implementation-details"></a><span style="font-size:17px;font-family:Trebuchet MS;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Implementation details</span></h2><br /><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Much of the packaging system is implemented in </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">client/common_lib/base_packages.py</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">.  It contains the logic for fetching packages from either HTTP or from a local filesystem (class </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">HttpFetcher</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> and class </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">LocalFilesystemFetcher</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">, respectively).  Class </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">BasePackageManager</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> in that file also contains the logic for creating package files (</span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">tar_package</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">), fetching and installing (i.e., untarring) package files (</span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">fetch_pkg</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> and </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">install_pkg</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">), and working with checksums.</span></p><br /><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">The autotest client code is installed via the packaging system from the </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">server/autotest.py</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> file.  Autotest deps are installed via </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">setup_dep</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> in </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">client/bin/job.py</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">.  The </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">utils/packager.py</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> file also calls into the packaging system to create packages.</span></p><br /><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">For test code, packages are generally created at emerge time (this is specific to chromeOS).  They are simply bzipped versions of corresponding test code located in the source directory at </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">client/site_tests</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">.  If a previously-built package is missing from both a DUT and the server, autoserv will bundle a temporary package using local source and send it to the DUT.  Otherwise, if the server finds a previously-built package, it will send it to the DUT only if it’s changed from what’s already there.  In this case, local changes to source code are ignored because the previously-built package is used instead.  </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">autotest_quickmerge</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> works around this by deleting the package files for altered tests to force autoserv to build and use temporary packages created from local source.</span></p><br /><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">The interesting package fetching work for test code occurs as part of the autotest harness, which can be found in </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">client/bin/harness_autoserv.py</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">.  This contains the </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">AutoservFetcher</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> (if you see log messages about fetching from an autoserv:// repo, this is what's being used). The fetching logic then ends up in </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">server/autotest.py</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> in </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">_process_line</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> and more interestingly </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">_send_tarball</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">, which sends the .tar.bz2 package file, or generates one using PackageManager's </span><span style="font-size:15px;font-family:Courier New;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">tar_package</span><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> function if it doesn't exist.</span></p><br /><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Currently, fetching packages via autoserv is only used in non-prod situations, such as with run_remote_tests.sh.  In prod, all of the packages are instead pulled from devservers via the HttpFetcher using the job_repo_url.  This is a result of </span><a href="http://crbug.com/212641" style="text-decoration:none"><span style="font-size:15px;font-family:Arial;color:rgb(17,85,204);background-color:transparent;text-decoration:underline;vertical-align:baseline;white-space:pre-wrap">crbug.com/212641</span></a><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> and </span><a href="http://crbug.com/216918" style="text-decoration:none"><span style="font-size:15px;font-family:Arial;color:rgb(17,85,204);background-color:transparent;text-decoration:underline;vertical-align:baseline;white-space:pre-wrap">crbug.com/216918</span></a><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">; we were hitting a case where fetching would hang (it creates a fifo that gets written to, once the package has been pushed down to the DUT).  A few CLs were subsequently pushed so that fetching from autoserv could be disabled in prod (</span><a href="https://gerrit.chromium.org/gerrit/#/c/33804/2" style="text-decoration:none"><span style="font-size:15px;font-family:Arial;color:rgb(17,85,204);background-color:transparent;text-decoration:underline;vertical-align:baseline;white-space:pre-wrap">https://gerrit.chromium.org/gerrit/#/c/33804/2</span></a><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"> and </span><a href="https://gerrit.chromium.org/gerrit/#/c/34665/3" style="text-decoration:none"><span style="font-size:15px;font-family:Arial;color:rgb(17,85,204);background-color:transparent;text-decoration:underline;vertical-align:baseline;white-space:pre-wrap">https://gerrit.chromium.org/gerrit/#/c/34665/3</span></a><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">).</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap"><br /></span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">At a high level, this is what happens: </span></p><p style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">1. In the simplest case, a reimage job runs, after which a server jobs runs. </span><span style="background-color:transparent;font-family:Arial;font-size:15px;white-space:pre-wrap;line-height:1.15">The reimage job stages autotest packages and sets the job_repo_url as part of</span></p><p style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="background-color:transparent;font-family:Arial;font-size:15px;white-space:pre-wrap;line-height:1.15">    the autoupdate 'test'. </span><span style="background-color:transparent;font-family:Arial;font-size:15px;white-space:pre-wrap;line-height:1.15">These packages contain the tests (one bz file for each test), the dependencies (like chrome_test) and client-autotest.</span></p><p dir="ltr" style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">2. </span><span style="font-family:Arial;font-size:15px;line-height:17px;white-space:pre-wrap">job_repo_url is set in add_cros_version_labels_and_job_repo_url, and points to the devserver where the required packages are staged.</span></p></span><span><p style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">3. Server job kicks off autotest.py/site_autotest.py, which are the classes responsible for installing autotest on the client.</span></p><p style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">4. autotest.py gets the job_repo_url through site_autotest's get_fetch_location, and creates a PackageManager in _install_using_packaging</span></p><p style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">5. This package manager is the aforementioned HttpFetcher, which does a wget from the given url to fetch packages; This happens through  </span></p><p style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="background-color:transparent;font-family:Arial;font-size:15px;white-space:pre-wrap;line-height:1.15">     client/common_lib/base_packages install_pkg.</span></p><p style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="background-color:transparent;font-family:Arial;font-size:15px;white-space:pre-wrap;line-height:1.15"><br /></span></p><p style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="background-color:transparent;font-family:Arial;font-size:15px;white-space:pre-wrap;line-height:1.15"><b>Deps:</b></span></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">An example of a dep is pyauto. The actual installation of this dep happens through </span></font><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial">bin/job.install_packages on the DUT, though the steps are pretty general for package installation and are as follows:</span></p><p style="margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial"><br /></span></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">1. Installs packages using packages.PackageManager </span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">    <span> </span>- Remove the install dir and reinstalls by default.<br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">2. The installation happens through </span></font><span style="font-family:Arial;font-size:15px;line-height:17px;white-space:pre-wrap">PackageManager.</span><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial">fetch_pkg</span></p></span><span><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><span>    </span>The name of the tarball to get from the repo_url is constructed as pkg_type-name.tar.bz2. In the case of pyauto this is dep-pyauto.tar.bz2<br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><br /></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">3. Check if the package has already been fetched<br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><span>    </span>If not, check if we need to fetch: </span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">             a. Check if a checksum exists on the DUT<br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">             b. Fetch checksum from package url if it doesn't, through fetch_pkg_file<br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">             c. Parse the contents of the checksum file into a per package dictionary<br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">             d. Create an md5 checksum of the package present at /usr/local/autotest/packages/client-autotest.tar.bz2 on the DUT<br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">             e. Update the checksum file on the DUT  so we don't pull the same package again through _save_checksum_dict<br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">             f. If the checksums don't match untar contents of the package via untar_pkg<br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">             g. This will essentially run a tar command on the DUT, recompute the checksums, and rewrite them to the DUT.</span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial"><br /></span></p><p style="margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial">4. If fetching is needed, invoke base_packages.</span><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial">fetch_pkg_file which will lead to a wget in the case of pyauto:</span></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">wget --connect-timeout=15 --retry-connrefused --wait=5 -nv http://devserver:port/static/archive/build/autotest/packages/dep-pyauto_dep.tar.bz2 -O /usr/local/autotest/packages/dep-pyauto_dep.tar.bz2</span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">5. Place the package in /usr/local/autotest/packages<br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">6. Update the checksum<br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><span style="font-family:Arial;font-size:15px;line-height:17px;white-space:pre-wrap">7. Install the package through base_packages.install_pkg</span></p></span><span><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">8. Check to see if the install dir exists: ls /usr/local/autotest/packages/install_dir<br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">8. The actual untarring happens in base_packages.untar_pkg, before this we mkdir install_dir</span></font><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial"> </span><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial">untar_pkg runs </span><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial">tar xjf from_path -C dest_dir</span></p><div><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><br /></span></font></div><div><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">In an end to end run of a pyauto test, the following packages will get installed through the process described above:</span></font></div><div><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><br /></span></font></div><p style="margin-top:0pt;margin-bottom:0pt"><span style="font-family:Arial;font-size:15px;line-height:17px;white-space:pre-wrap">On the server, install client-autotest on the DUT:</span></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">1. mkdir /usr/local/autotest/packages</span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">2. Copy autotest client packages to /usr/local/autotest/packages/client-autotest.tar.bz2</span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">3. Untar the package if the checksum doesn't match, as described above.</span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><span><span><span><span><span><span><br /></span></span></span></span></span></span></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><span><span><span><span><span><span>On the DUT, install the tests and pyauto dep: </span></span></span></span></span></span></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">1. Execute a command like: </span></font><span style="color:rgb(34,34,34);font-family:arial;font-size:small">./bin/autotest -H autoserv --verbose --user=beeps /usr/local/autotest/control.autoserv</span></p><p style="margin-top:0pt;margin-bottom:0pt"><span style="color:rgb(34,34,34);font-family:arial;font-size:small"><span>    </span></span><span style="font-family:Arial;font-size:15px;line-height:17px;white-space:pre-wrap">Actually that's a lie, it executes autotestd_monitor which executes autotestd which leads to that command, but that is irrelevant for this discussion.</span></p><p style="margin-top:0pt;margin-bottom:0pt"><span style="font-family:Arial;font-size:15px;line-height:17px;white-space:pre-wrap"><br /></span></p><p style="margin-top:0pt;margin-bottom:0pt"><span style="font-family:Arial;font-size:15px;line-height:17px;white-space:pre-wrap">2. Installing the test:</span></p><p style="margin-top:0pt;margin-bottom:0pt"><span style="font-family:Arial;font-size:15px;line-height:17px;white-space:pre-wrap"><span><span>    <span>    <span>    </span></span>a</span>. The control file </span></span><span style="font-family:Arial;font-size:15px;line-height:17px;white-space:pre-wrap">Invokes job.run_test with the test name, which leads to </span><font face="Arial" style="font-size:10pt"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">common_lib/test.runtest</span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><span style="font-family:Arial;font-size:15px;line-height:17px;white-space:pre-wrap"><span><span>    <span>    <span>    </span></span></span>b. </span></span><span style="font-family:Arial;font-size:15px;line-height:17px;white-space:pre-wrap">bin/job.install_pkg installs the test using</span><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial"> </span><font face="Arial" style="font-size:10pt"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">common_lib.packages.PackageManager leading to a line in the logs like (instead of the wget):</span></font></p></span><span><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><span>    <span>    <span>    <span>    </span></span></span></span>22:26:48 DEBUG| Successfully fetched test-login_LoginSuccess.tar.bz2 from http://devserver/static/archive/lumpy-release/R29-<span>    <span>   </span></span></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><span>    <span>    <span>    <span>    </span></span></span></span>4279.0.0/autotest/packages/test-login_LoginSuccess.tar.bz2</span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><span>    <span>    <span>    Again this installation happens through a process as described above.</span></span></span><br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><span><span><span><br /></span></span></span></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap">3. Installing deps, cros_ui_test:</span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><span><span><span><span>    <span>   <span>     </span></span></span>a. We then go on to executing the initialize function of the test via common_lib/test._cherry_pick_call</span></span></span><br /></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><span><span><span><span>    <span>    <span>    <span>    </span>-<span> </span>Until this point the infrastructure was totally oblivious that the test in question requires pyauto</span></span></span><br /></span></span></span></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><span><span><span><span><span><span><span>    <span>    <span>    b. Since pyauto tests inherit from cros_ui_test, we execute the initialize of cros_ui_test, which does things like</span></span></span><br /></span></span></span></span></span></span></span></font></p><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><span><span><span><span><span><span><span><span><span><span>    <span>    <span>    <span>    start an authserver, remove cryptohome valuts, restart cros_ui etc. </span></span></span></span></span></span></span></span></span></span></span></span></span></span></font><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial">PyAutoTest.initialize finally install deps through <span>    </span></span></p><p style="margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial"><span>    <span>    <span>    <span>    </span></span></span></span>cros/pyauto_test._install_deps and then proceeds to import pyauto.</span></p><p style="margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial"><span>    <span>    <span>    c. PyAutoTest passes in the install_dir (/usr/local/autotest/deps/pyauto_dep) and the package_dir (/usr/local/packages) which calls into bin/job</span></span></span><br /></span></p><p style="margin-top:0pt;margin-bottom:0pt"><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial">    </span><span style="font-size:15px;line-height:17px;white-space:pre-wrap;font-family:Arial">        </span></p></span><div><span><p style="margin-top:0pt;margin-bottom:0pt"><font face="Arial"><span style="font-size:15px;line-height:17px;white-space:pre-wrap"><br /></span></font></p><h2 dir="ltr" style="line-height:1.15;margin-top:10pt;margin-bottom:0pt"><a name="TOC-Relevant-links"></a><span style="font-size:17px;font-family:Trebuchet MS;background-color:transparent;vertical-align:baseline;white-space:pre-wrap">Relevant links</span></h2><br /><ul style="margin-top:0pt;margin-bottom:0pt"><li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline"><p style="line-height:1.15;margin-top:0pt;margin-bottom:0pt"><span style="background-color:transparent;vertical-align:baseline;white-space:pre-wrap">General autoserv documentation:<br /></span><a href="https://github.com/autotest/autotest/wiki/Autoserv" style="text-decoration:none"><span style="color:rgb(17,85,204);background-color:transparent;text-decoration:underline;vertical-align:baseline;white-space:pre-wrap">https://github.com/autotest/autotest/wiki/Autoserv</span></a></p></li><li style="list-style-type:disc;font-size:15px;font-family:Arial;background-color:transparent;vertical-align:baseline"><span style="background-color:transparent;white-space:pre-wrap;line-height:1.15">User-facing documentation about test dependencies:
</span><a href="http://www.chromium.org/chromium-os/testing/autotest-best-practices#TOC-Adding-test-deps" style="background-color:transparent;white-space:pre-wrap;line-height:1.15;text-decoration:none">http://www.chromium.org/chromium-os/testing/autotest-best-practices#TOC-Adding-test-deps</a></li></ul><p style="background-color:transparent;font-family:Arial;font-size:15px;line-height:1.15;margin-top:0pt;margin-bottom:0pt"><br /></p><p style="background-color:transparent;font-family:Arial;font-size:15px;line-height:1.15;margin-top:0pt;margin-bottom:0pt"><br /></p><p style="background-color:transparent;font-family:Arial;line-height:1.15;margin-top:0pt;margin-bottom:0pt"><font size="2"><i>Published May 13, 2013</i></font></p></span></div></div></td></tr></tbody></table>
</div> 
</div> 
<div id="sites-canvas-bottom-panel">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-subpages"> </div>
<div id="sites-attachments-container">
</div>
<a xmlns="http://www.w3.org/1999/xhtml" name="page-comments"></a>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_page-comments"><div class="sites-comment-docos-wrapper"><div class="sites-comment-docos"><div class="sites-comment-docos-background"></div><div class="sites-comment-docos-header"><div class="sites-comment-docos-header-title">Comments</div></div><div id="sites-comment-docos-pane" class="sites-comment-docos-pane"></div></div></div></div>
</div>
</div> 
</td> 
</tr>
</table> 
</div> 
</div> 
<div id="sites-chrome-footer-wrapper">
<div id="sites-chrome-footer-wrapper-inside">
<div id="sites-chrome-footer">
</div>
</div>
</div>
</div> 
</div> 
<div id="sites-chrome-adminfooter-container">
<div xmlns="http://www.w3.org/1999/xhtml" class="sites-adminfooter" role="navigation"><p><a class="sites-system-link" href="https://www.google.com/a/UniversalLogin?service=jotspot&amp;continue=https://sites.google.com/a/chromium.org/dev/chromium-os/testing/autoserv-packaging">Sign in</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/recentChanges">Recent Site Activity</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/reportAbuse" target="_blank">Report Abuse</a><span aria-hidden="true">|</span><a class="sites-system-link" href="javascript:;" onclick="window.open(webspace.printUrl)">Print Page</a><span aria-hidden="true">|</span><span class="sites-system-link">Powered By</span> <b class="powered-by"><a href="http://sites.google.com">Google Sites</a></b></p></div>
</div>
</div> 
</div> 
<div id="sites-chrome-onebar-footer">
</div>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('sjl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" src="https://ssl.gstatic.com/sites/p/56e332/system/js/jot_min_view__en.js"></script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('jl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml">
      
          sites.core.Analytics.createTracker();
          sites.core.Analytics.trackPageview();
        
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
                    sites.Searchbox.initialize(
                        'sites-searchbox-search-button',
                        {"object":[]}['object'],
                        'search-site',
                        {"label":"Configure search options...","url":"/system/app/pages/admin/settings"});
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
      gsites.HoverPopupMenu.createSiteDropdownMenus('sites-header-nav-dropdown', false);
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("7648876402527094", "Navigation", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_7648876402527094');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("14720868319272995", "Quick links", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_14720868319272995');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("19690813310444355", "Other sites", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_19690813310444355');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
              new sites.CommentPane('//docs.google.com/comments/d/AAHRpnXvrAwjAfmld0ObrebBiGRq9Htt1CTE41j-wH6OA93oS2eL-RzgsOjTU2PWhuaQegu_D4qpP3F_rqxxzphSdD57FTG2hc8fEagBtnozD_H8y_-OYxZ4zn47v-LUvXUXF3bJDOb6k/api/js?anon=true',
                  false, false);
            </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
  setTimeout(function() {
    var fingerprint = gsites.date.TimeZone.getFingerprint([]);
    gsites.Xhr.send('https://www.chromium.org/_/tz', null, null, 'GET', null, null, { afjstz: fingerprint });
  }, 500);
</script>
<script xmlns="http://www.w3.org/1999/xhtml">
                    window.onload = function() {
                      if (false) {
                        JOT_setMobilePreview();
                      }
                      var loadTimer = window.jstiming.load;
                      loadTimer.tick("ol");
                      loadTimer["name"] = "load," + webspace.page.type + ",user_page";
                      window.jstiming.report(loadTimer, {}, 'https://gg.google.com/csi');
                    }
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
        JOT_insertAnalyticsCode(false,
            false);
      </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    var maestroRunner = new gsites.pages.view.SitesMaestroRunner(
        webspace, "en");
    maestroRunner.initListeners();
    maestroRunner.installEditRender();
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
  //<![CDATA[
    // Decorate any fastUI buttons on the page with a class of 'goog-button'.
    if (webspace.user.hasWriteAccess) {
      JOT_decorateButtons();
    }

    // Fires delayed events.
    (function() {
      JOT_fullyLoaded = true;
      var delayedEvents = JOT_delayedEvents;
      for (var x = 0; x < delayedEvents.length; x++) {
        var event = delayedEvents[x];
        JOT_postEvent(event.eventName, event.eventSrc, event.payload);
      }
      JOT_delayedEvents = null;
      JOT_postEvent('pageLoaded');
    })();
  //]]>
</script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    JOT_postEvent('decorateGvizCharts');
  </script>
<script type="text/javascript">
          JOT_setupPostRenderingManager();
        </script>
<script type="text/javascript">
          JOT_postEvent('renderPlus', null, 'sites-chrome-main');
        </script>
<div id="server-timer-div" style="display:none"> </div>
<script type="text/javascript">
          window.jstiming.load.tick('render');
          JOT_postEvent('usercontentrendered', this);
        </script>
</body>
</html>
