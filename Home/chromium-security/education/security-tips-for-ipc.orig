<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" itemscope="" itemtype="http://schema.org/WebPage">
<head>
<meta http-equiv="X-UA-Compatible" content="chrome=1" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var e="wtsrt_",g="tbsd_",h="tbnd_",k="start",l="_wtsrt",m="_tbnd",n="CSI/";(function(){function f(a){this.t={};this.tick=function(a,c,b){this.t[a]=[void 0!=b?b:(new Date).getTime(),c];if(void 0==b)try{window.console.timeStamp(n+a)}catch(d){}};this.tick(k,null,a)}var a;window.performance&&(a=window.performance.timing);var p=a?new f(a.responseStart):new f;window.jstiming={Timer:f,load:p};if(a){var c=a.navigationStart,d=a.responseStart;0<c&&d>=c&&(window.jstiming.srt=d-c)}if(a){var b=window.jstiming.load;0<c&&d>=c&&(b.tick(l,void 0,c),b.tick(e,l,d),b.tick(g,e))}try{a=null,
window.chrome&&window.chrome.csi&&(a=Math.floor(window.chrome.csi().pageT),b&&0<c&&(b.tick(m,void 0,window.chrome.csi().startE),b.tick(h,m,c))),null==a&&window.gtbExternal&&(a=window.gtbExternal.pageT()),null==a&&window.external&&(a=window.external.pageT,b&&0<c&&(b.tick(m,void 0,window.external.startE),b.tick(h,m,c))),a&&(window.jstiming.pt=a)}catch(q){}})(); })()
</script>
<link rel="shortcut icon" href="/_/rsrc/1354323194313/favicon.ico" type="image/x-icon" />
<link rel="apple-touch-icon" href="https://ssl.gstatic.com/sites/p/56e332/system/app/images/apple-touch-icon.png" type="image/png" />
<script type="text/javascript">/* Copyright 2008 Google. */ (function() { var d="",g="__duration__",h="function";function k(c){return document.getElementById(c)}window.byId=k;function l(c){return c.replace(/^\s+|\s+$/g,d)}window.trim=l;var m=[],n=0;window.JOT_addListener=function(c,a,b){var e=new String(n++);c={eventName:c,handler:a,compId:b,key:e};m.push(c);return e};window.JOT_removeListenerByKey=function(c){for(var a=0;a<m.length;a++)if(m[a].key==c){m.splice(a,1);break}};
window.JOT_removeAllListenersForName=function(c){for(var a=0;a<m.length;a++)m[a].eventName==c&&m.splice(a,1)};window.JOT_postEvent=function(c,a,b){var e={eventName:c,eventSrc:a||{},payload:b||{}};if(window.JOT_fullyLoaded)for(a=m.length,b=0;b<a&&b<m.length;b++){var f=m[b];f&&f.eventName==c&&(e.listenerCompId=f.compId||d,(f=typeof f.handler==h?f.handler:window[f.handler])&&f(e))}else window.JOT_delayedEvents.push({eventName:c,eventSrc:a,payload:b})};window.JOT_delayedEvents=[];
window.JOT_fullyLoaded=!1;window.JOT_formatRelativeToNow=function(c,a){var b=((new Date).getTime()-c)/6E4;if(1440<=b||0>b)return null;var e=0;60<=b&&(b/=60,e=2);2<=b&&e++;return a?window.JOT_siteRelTimeStrs[e].replace(g,Math.floor(b)):window.JOT_userRelTimeStrs[e].replace(g,Math.floor(b))}; })()
</script>
<script>

  

  var breadcrumbs = [{"path":"/Home","deleted":false,"title":"Chromium","dir":"ltr"},{"path":"/Home/chromium-security","deleted":false,"title":"Chromium Security","dir":"ltr"},{"path":"/Home/chromium-security/education","deleted":false,"title":"Education","dir":"ltr"},{"path":"/Home/chromium-security/education/security-tips-for-ipc","deleted":false,"title":"Security Tips for IPC","dir":"ltr"}];
  var JOT_clearDotPath = 'https://ssl.gstatic.com/sites/p/56e332/system/app/images/cleardot.gif';

  
  var JOT_userRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

  
  

  

  var webspace = {"enableAnalytics":true,"pageSharingId":"jotspot_page","enableUniversalAnalytics":false,"sharingPolicy":"OPENED_WITH_INDICATOR","siteTitle":"The Chromium Projects","isStartPageEnabled":true,"adsensePublisherId":null,"features":{"languageSelectDefaultTextSetToDefault":true,"validateClientGvizDataSourceUrls":true,"moreMobileStyleImprovements":true,"newInsertMenuIcons":true,"accessibleSortingButtons":true,"domainAnalyticsInGAOnly":true,"noCaptcha":true,"fileCabinetScreenReaderFix":true,"updatedTosAndPrivacyLinks":null,"pageDrafts":false,"mobileOrientationFix":true,"plusBadge":false,"pdfEmbedSupport":false,"jsClickFix":true},"isPublic":true,"isConsumer":false,"serverFlags":{"cajaBaseUrl":"//www.gstatic.com/caja","cajaDebugMode":false},"onepickBaseUrl":"https://docs.google.com","domainAnalyticsAccountId":"","plusPageId":"","signInUrl":"https://www.google.com/a/SelectSession?continue\u003dhttps://sites.google.com/a/chromium.org/dev/Home/chromium-security/education/security-tips-for-ipc\u0026service\u003djotspot","analyticsAccountId":"UA-5484340-1","scottyUrl":"/_/upload","homePath":"/","siteNoticeUrlEnabled":null,"plusPageUrl":"","adsensePromoClickedOrSiteIneligible":true,"csiReportUri":"https://gg.google.com/csi","sharingId":"jotspot","termsUrl":"//www.google.com/intl/en/policies/terms/","gvizVersion":1,"editorResources":{"sitelayout":["https://ssl.gstatic.com/sites/p/56e332/system/app/css/sitelayouteditor.css"],"text":["https://ssl.gstatic.com/sites/p/56e332/system/js/codemirror.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codemirror_css.css","https://ssl.gstatic.com/sites/p/56e332/system/js/trog_edit__en.js","https://ssl.gstatic.com/sites/p/56e332/system/app/css/trogedit.css","/_/rsrc/1441580320000/system/app/css/editor.css","https://ssl.gstatic.com/sites/p/56e332/system/app/css/codeeditor.css","/_/rsrc/1441580320000/system/app/css/camelot/editor-jfk-wlb.css"]},"sharingUrlPrefix":"/_/sharing","isAdsenseEnabled":true,"domain":"chromium.org","baseUri":"","name":"dev","siteTemplateId":false,"siteNoticeRevision":null,"siteNoticeUrlAddress":null,"siteNoticeMessage":null,"page":{"isRtlLocale":false,"canDeleteWebspace":null,"isPageDraft":null,"parentPath":"/Home/chromium-security/education","parentWuid":"wuid:gx:4d05cf2cee92750","siteLocale":"en","timeZone":"America/Los_Angeles","type":"text","title":"Security Tips for IPC","locale":"en","wuid":"wuid:gx:1390ac5bb54e8041","revision":32,"path":"/Home/chromium-security/education/security-tips-for-ipc","isSiteRtlLocale":false,"pageInheritsPermissions":null,"name":"security-tips-for-ipc","canChangePath":true,"state":"","properties":{},"bidiEnabled":false,"currentTemplate":{"path":"/system/app/pagetemplates/text","title":"Web Page"}},"canPublishScriptToAnyone":true,"user":{"keyboardShortcuts":true,"sessionIndex":"","guest_":true,"displayNameOrEmail":"guest","userName":"guest","uid":"","renderMobile":false,"domain":"","namespace":"","hasWriteAccess":false,"namespaceUser":false,"primaryEmail":"guest","hasAdminAccess":false},"gadgets":{"baseUri":"/system/app/pages/gadgets"}};
  webspace.page.breadcrumbs = breadcrumbs;

  
  var JOT_siteRelTimeStrs = ["a minute ago","__duration__ minutes ago","an hour ago","__duration__ hours ago"];

</script>
<script type="text/javascript">
                window.jstiming.load.tick('scl');
              </script>
<meta name="title" content="Security Tips for IPC - The Chromium Projects" />
<meta itemprop="name" content="Security Tips for IPC - The Chromium Projects" />
<meta property="og:title" content="Security Tips for IPC - The Chromium Projects" />
<meta name="description" content="Home of the Chromium Open Source Project" />
<meta itemprop="description" content="Home of the Chromium Open Source Project" />
<meta id="meta-tag-description" property="og:description" content="Home of the Chromium Open Source Project" />
<style type="text/css">
</style>
<link rel="stylesheet" type="text/css" href="https://ssl.gstatic.com/sites/p/56e332/system/app/themes/beigeandblue/standard-css-beigeandblue-ltr-ltr.css" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/overlay.css?cb=beigeandblueundefineda100%25%25150goog-ws-leftthemedefaultstandard" />
<link rel="stylesheet" type="text/css" href="/_/rsrc/1441580320000/system/app/css/camelot/allthemes-view.css" />
<!--[if IE]>
          <link rel="stylesheet" type="text/css" href="/system/app/css/camelot/allthemes%2die.css" />
        <![endif]-->
<title>Security Tips for IPC - The Chromium Projects</title>
<meta itemprop="image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<meta property="og:image" content="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" />
<script type="text/javascript">
                window.jstiming.load.tick('cl');
              </script>
</head>
<body xmlns="http://www.google.com/ns/jotspot" id="body" class=" en            ">
<div id="sites-page-toolbar" class="sites-header-divider">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-status" class="sites-status" style="display:none;"><div id="sites-notice" class="sites-notice" role="status" aria-live="assertive"> </div></div>
</div>
<div id="sites-chrome-everything-scrollbar">
<div id="sites-chrome-everything" class="">
<div id="sites-chrome-page-wrapper" style="direction: ltr">
<div id="sites-chrome-page-wrapper-inside">
<div xmlns="http://www.w3.org/1999/xhtml" id="sites-chrome-header-wrapper" style="height:auto;">
<table id="sites-chrome-header" class="sites-layout-hbox" cellspacing="0" style="height:auto;">
<tr class="sites-header-primary-row" id="sites-chrome-userheader">
<td id="sites-header-title" class="" role="banner"><div class="sites-header-cell-buffer-wrapper"><a href="https://www.chromium.org/" id="sites-chrome-userheader-logo"><img id="logo-img-id" src="/_/rsrc/1438879449147/config/customLogo.gif?revision=3" alt="The Chromium Projects" class="sites-logo  " /></a><h2><a href="https://www.chromium.org/" dir="ltr" id="sites-chrome-userheader-title">The Chromium Projects</a></h2></div></td><td class="sites-layout-searchbox  "><div class="sites-header-cell-buffer-wrapper"><form id="sites-searchbox-form" action="/system/app/pages/search" role="search"><input type="hidden" id="sites-searchbox-scope" name="scope" value="search-site" /><input type="text" id="jot-ui-searchInput" name="q" size="20" value="" aria-label="Search this site" /><div id="sites-searchbox-button-set" class="goog-inline-block"><div role="button" id="sites-searchbox-search-button" class="goog-inline-block jfk-button jfk-button-standard" tabindex="0">Search this site</div></div></form></div></td>
</tr>
<tr class="sites-header-secondary-row" id="sites-chrome-horizontal-nav">
<td colspan="2" id="sites-chrome-header-horizontal-nav-container" role="navigation">
</td>
</tr>
</table>
</div>
<div id="sites-chrome-main-wrapper">
<div id="sites-chrome-main-wrapper-inside">
<table id="sites-chrome-main" class="sites-layout-hbox" cellspacing="0" cellpadding="{scmCellpadding}" border="0">
<tr>
<td id="sites-chrome-sidebar-left" class="sites-layout-sidebar-left initial" style="width:150px">
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_7648876402527094" class="sites-embed" role="navigation"><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-projects" jotId="wuid:gx:10ae433dadbbab13" class="sites-navigation-link">Home</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/Home" jotId="wuid:gx:43582b9d2029d3af" class="sites-navigation-link">Chromium</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/chromium-os" jotId="wuid:gx:83df2ab1f8880ba" class="sites-navigation-link">Chromium OS</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_14720868319272995" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Quick links</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/for-testers/bug-reporting-guidelines" class="sites-navigation-link">Report bugs</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://www.chromium.org/developers/discussion-groups" class="sites-navigation-link">Discuss</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="/system/app/pages/sitemap/hierarchy" jotId="wuid:gx:4b58a9a350ad12f" class="sites-navigation-link">网站地图</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19690813310444355" class="sites-embed" role="navigation"><h4 class="sites-embed-title">Other sites</h4><div class="sites-embed-content sites-sidebar-nav"><ul role="navigation" jotId="navList"><li class="nav-first "><div dir="ltr" style="padding-left: 5px;"><a href="http://blog.chromium.org/" class="sites-navigation-link">Chromium Blog</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="http://code.google.com/chrome/extensions/" class="sites-navigation-link">Google Chrome Extensions</a></div></li><li class=""><div dir="ltr" style="padding-left: 5px;"><a href="https://developers.google.com/chrome/chrome-frame/" class="sites-navigation-link">Google Chrome Frame</a></div></li></ul></div></div>
<div xmlns="http://www.w3.org/1999/xhtml" id="COMP_19695218559354544" class="sites-embed" role="complementary"><h4 class="sites-embed-title"></h4><div class="sites-embed-content sites-embed-content-sidebar-textbox"><div dir="ltr"><span style="font-size:x-small">Except as otherwise </span><a href="http://developers.google.com/site-policies.html#restrictions"><span style="font-size:x-small">noted</span></a><span style="font-size:x-small">, the content of this page is licensed under a </span><a href="http://creativecommons.org/licenses/by/2.5/"><span style="font-size:x-small">Creative Commons Attribution 2.5 license</span></a><span style="font-size:x-small">, and examples are licensed under the </span><a href="http://src.chromium.org/viewvc/chrome/trunk/src/LICENSE" target="_blank"><span style="font-size:x-small">BSD License</span></a><span style="font-size:x-small">.<br /></span></div></div></div>
</td>
<td id="sites-canvas-wrapper">
<div id="sites-canvas" role="main">
<div id="goog-ws-editor-toolbar-container"> </div>
<div xmlns="http://www.w3.org/1999/xhtml" id="title-crumbs" style="">
<A href="/Home" dir="ltr">Chromium</A>‎ &gt; ‎<A href="/Home/chromium-security" dir="ltr">Chromium Security</A>‎ &gt; ‎<A href="/Home/chromium-security/education" dir="ltr">Education</A>‎ &gt; ‎
  </div>
<h3 xmlns="http://www.w3.org/1999/xhtml" id="sites-page-title-header" style="" align="left">
<span id="sites-page-title" dir="ltr" tabindex="-1" style="outline: none">Security Tips for IPC</span>
</h3>
<div id="sites-canvas-main" class="sites-canvas-main">
<div id="sites-canvas-main-content">
<table xmlns="http://www.w3.org/1999/xhtml" cellspacing="0" class="sites-layout-name-one-column sites-layout-hbox"><tbody><tr><td class="sites-layout-tile sites-tile-name-content-1"><div dir="ltr"><div style="text-align:left;font-family:Verdana,Helvetica,Arial,sans-serif;line-height:16px"><font face="arial, sans-serif" size="2" style="font-size:10pt;line-height:normal"><span style="white-space:pre-wrap">Chrome's<b> </b></span></font><a href="http://www.chromium.org/developers/design-documents/inter-process-communication" style="font-size:10pt;font-family:Arial,Verdana,sans-serif;line-height:normal">inter-process communication (IPC)</a><span style="font-size:10pt;font-family:Arial,Verdana,sans-serif;line-height:normal"> layer is the communication channel supporting our </span><a href="http://www.chromium.org/developers/design-documents/multi-process-architecture" style="font-size:10pt;font-family:Arial,Verdana,sans-serif;line-height:normal">multi-process architecture</a><span style="font-size:10pt;font-family:Arial,Verdana,sans-serif;line-height:normal">. Security bugs in IPC can have </span><a href="http://blog.chromium.org/2012/05/tale-of-two-pwnies-part-1.html" style="font-size:10pt;font-family:Arial,Verdana,sans-serif;line-height:normal">nasty consequences</a><span style="font-size:10pt;font-family:Arial,Verdana,sans-serif;line-height:normal">, but sticking to these tips should help you avoid most pitfalls. Questions, feedback, or </span><span style="font-size:10pt;font-family:Arial,Verdana,sans-serif;line-height:normal">suggestions to security@chromium.org</span></div><div style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:16px"><b style="line-height:normal"><span style="vertical-align:baseline;white-space:pre-wrap"><font face="arial, sans-serif" size="2"><br /></font></span></b></div><div style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:16px"><b style="line-height:normal"><span style="vertical-align:baseline;white-space:pre-wrap"><font face="arial, sans-serif" size="2"><div><div class="sites-embed-align-left-wrapping-off"><div class="sites-embed-border-off sites-embed" style="width:250px;"><div class="sites-embed-content sites-embed-type-toc"><div class="goog-toc sites-embed-toc-maxdepth-6"><p>Contents</p><ol class="goog-toc"><li class="goog-toc"><a href="#TOC-Trust-only-the-browser-process."><strong>1 </strong>Trust only the browser process.</a></li><li class="goog-toc"><a href="#TOC-Do-not-trust-renderer-PPAPI-or-GPU-processes."><strong>2 </strong>Do not trust renderer, PPAPI, or GPU processes.</a></li><li class="goog-toc"><a href="#TOC-Sanitize-and-validate-untrustworthy-input."><strong>3 </strong>Sanitize and validate untrustworthy input.</a></li><li class="goog-toc"><a href="#TOC-Whitelisting-is-better-than-blacklisting."><strong>4 </strong>Whitelisting is better than blacklisting.</a></li><li class="goog-toc"><a href="#TOC-Safely-handle-known-bad-input."><strong>5 </strong>Safely handle known-bad input.</a></li><li class="goog-toc"><a href="#TOC-Use-and-validate-specific-constrained-types-let-the-compiler-work-for-you."><strong>6 </strong>Use and validate specific, constrained types; let the compiler work for you.</a></li><li class="goog-toc"><a href="#TOC-Keep-it-simple."><strong>7 </strong>Keep it simple.</a></li><li class="goog-toc"><a href="#TOC-Be-aware-of-the-subtleties-of-integer-types."><strong>8 </strong>Be aware of the subtleties of integer types.</a></li><li class="goog-toc"><a href="#TOC-Be-aware-of-the-subtleties-of-integer-types-across-C-and-Java-too."><strong>9 </strong>Be aware of the subtleties of integer types across C++ and Java, too.</a></li><li class="goog-toc"><a href="#TOC-Don-t-leak-information-don-t-pass-information-that-would-be-risky-to-use."><strong>10 </strong>Don't leak information, don't pass information that would be risky to use.</a></li><li class="goog-toc"><a href="#TOC-Avoid-Unsafe-Common-Coding-Patterns"><strong>11 </strong>Avoid Unsafe (Common) Coding Patterns</a></li><li class="goog-toc"><a href="#TOC-What-About-Mojo-"><strong>12 </strong>What About Mojo?</a></li></ol></div></div></div></div></div><br /></font></span></b></div><div style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:16px"><b style="line-height:normal"><span style="vertical-align:baseline;white-space:pre-wrap"><font face="arial, sans-serif" size="2"><br /></font></span></b></div><div><h2 style="line-height:normal;font-family:arial,sans-serif;font-weight:bold"><a name="TOC-Trust-only-the-browser-process."></a><font size="3">Trust only the browser process.</font></h2><div style="line-height:normal;font-family:arial,sans-serif"><b><span style="color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap"><font size="2"><span style="font-weight:normal">Generally, privileged processes must set all policy. In Chromium, this means the </span>browser<span style="font-weight:normal"> process. "Policy" means: sizes, addresses, object names, filesystem pathnames, permissions/ACLs, specific implementations of interfaces, etc. In practice, this is how it should work:</span></font></span></b></div><div><ol style="line-height:normal;font-family:arial,sans-serif;font-weight:bold"><li><b><div style="display:inline!important"><b><div style="display:inline!important"><b><span style="font-weight:normal;color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap"><font size="2">Unprivileged process asks for capability.</font></span></b></div></b></div></b></li><li><b><div style="display:inline!important"><b><div style="display:inline!important"><b><span style="font-weight:normal;color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap"><font size="2">Privileged process applies policy to find an implementation for the capability.</font></span></b></div></b></div></b></li><li><b><div style="display:inline!important"><b><div style="display:inline!important"><b><span style="font-weight:normal;color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap"><font size="2">Unprivileged process receives it and performs constrained operations on it.</font></span></b></div></b></div></b></li><li><b><div style="display:inline!important"><b><div style="display:inline!important"><b><span style="font-weight:normal;color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap"><font size="2">Privileged process owns the capability lifetime/lifecycle.</font></span></b></div></b></div></b></li></ol><font color="#222222" face="arial, sans-serif" size="2"><span style="white-space:pre-wrap"><br /></span></font><h2 style="line-height:normal;font-family:arial,sans-serif"><a name="TOC-Do-not-trust-renderer-PPAPI-or-GPU-processes."></a><font color="#222222" size="3"><span style="white-space:pre-wrap"><b>Do not trust renderer, PPAPI, or GPU processes.</b></span></font></h2><div style="line-height:normal;font-family:arial,sans-serif"><font color="#222222" size="2"><span style="white-space:pre-wrap">IPC messages from the renderers must be viewed with the same skepticism as one would apply to user input. These messages are untrustworthy input.</span></font></div><div style="line-height:normal;font-family:arial,sans-serif"><font color="#222222" size="2"><span style="white-space:pre-wrap"><br /></span></font></div><div style="line-height:normal"><h2 style="font-family:arial,sans-serif;font-weight:bold"><a name="TOC-Sanitize-and-validate-untrustworthy-input."></a><font size="3">Sanitize and validate untrustworthy input.</font></h2><div style="font-weight:bold"><font size="2" style="font-family:arial,sans-serif"><font color="#222222" style="font-family:Verdana,Helvetica,Arial,sans-serif;font-weight:normal"><span style="white-space:pre-wrap"><font style="font-family:arial,sans-serif">If you're handling filenames or paths derived from untrustworthy input, make sure to avoid </font><a href="http://en.wikipedia.org/wiki/Directory_traversal_attack" style="color:rgb(85,26,139);text-decoration:none;font-family:arial,sans-serif">directory traversal attacks</a><font face="arial, sans-serif"> by </font></span></font><span style="font-family:Verdana,Helvetica,Arial,sans-serif;font-weight:normal"><span style="vertical-align:baseline;white-space:pre-wrap"><font face="arial, sans-serif">sanitizing (e.g. by using a </font></span></span></font><span style="font-family:courier new,monospace;color:rgb(34,34,34);font-size:small;white-space:pre-wrap;background-color:transparent;font-weight:normal">FilePath</span><font style="font-family:arial,sans-serif;background-color:transparent;font-size:10pt"><span style="font-family:Verdana,Helvetica,Arial,sans-serif;font-weight:normal"><span style="vertical-align:baseline;white-space:pre-wrap"><font face="arial, sans-serif"> rather than a string, because </font></span></span></font><span style="font-family:courier new,monospace;color:rgb(34,34,34);font-size:small;white-space:pre-wrap;background-color:transparent;font-weight:normal">FilePath</span><font style="background-color:transparent;font-size:10pt"><span style="font-weight:normal"><span style="vertical-align:baseline;white-space:pre-wrap"><font face="arial, sans-serif" style="font-family:Verdana,Helvetica,Arial,sans-serif"> </font><font face="arial, sans-serif">implicitly checks for ".." traversal sequences and other unanticipated platform behavior<font color="#222222">) </font><font color="#222222">a</font></font></span></span></font><span style="background-color:transparent;font-size:small;white-space:pre-wrap;font-weight:normal"><font face="arial, sans-serif">nd ensuring the resulting path is within your base directory.</font></span></div><div style="font-weight:bold"><span style="font-weight:normal"><span style="vertical-align:baseline;white-space:pre-wrap"><font face="arial, sans-serif" size="2"><br /></font></span></span></div><div style="font-family:Verdana,Helvetica,Arial,sans-serif;font-weight:bold"><font size="2"><font face="arial, sans-serif" style="font-family:arial,sans-serif;font-weight:normal"><span style="white-space:pre-wrap">To construct a valid pathname, a</span>pply a function like </font></font><span style="color:rgb(34,34,34);font-family:arial,sans-serif;font-size:10pt;font-weight:normal">FilePath::BaseName()</span><font face="arial, sans-serif" style="font-size:small;font-weight:normal"> </font><font face="arial, sans-serif" style="font-size:small;font-family:arial,sans-serif;font-weight:normal">to the untrustworthy pathnames; now it's a basename for sure, and not a full pathname or a sneaky trick. Then prefix the basename with a static directory name. Also apply simple, "obviously-correct" lexical checks such as an RE match for</font><font style="font-size:small;font-family:arial,sans-serif;font-weight:normal"> /^\w{8,16}$/</font><font face="arial, sans-serif" style="font-size:small;font-family:arial,sans-serif;font-weight:normal">.</font></div><div style="font-family:Verdana,Helvetica,Arial,sans-serif;font-weight:bold"><font face="arial, sans-serif" style="font-size:small;font-family:arial,sans-serif;font-weight:normal"><br /></font></div><div><h2 style="font-family:Verdana,Helvetica,Arial,sans-serif"><a name="TOC-Whitelisting-is-better-than-blacklisting."></a><font face="arial, sans-serif" size="3" style="font-family:arial,sans-serif">Whitelisting is better than blacklisting.</font></h2><div><font face="arial, sans-serif" size="2" style="font-family:arial,sans-serif">If you know the full set of valid data, then compare against that rather than checking for occurrences of known-bad data..</font></div><div style="font-family:arial,sans-serif"><br /></div></div><h2 style="font-family:Verdana,Helvetica,Arial,sans-serif"><a name="TOC-Safely-handle-known-bad-input."></a><font face="arial, sans-serif" size="3" style="font-family:arial,sans-serif"><b>Safely handle known-bad input.</b></font></h2><div><font face="arial, sans-serif" size="2" style="font-family:arial,sans-serif">When validating untrustworthy input, don't simply use </font><font face="courier new, monospace" size="2">CHECK</font><font face="arial, sans-serif" size="2" style="font-family:arial,sans-serif">. We do not want the input validation mechanism to become an easy way for a malicious renderer to kill the browser process. It's usually better to ignore the bad input. </font><font face="courier new, monospace" size="2">DCHECK</font><font face="arial, sans-serif" size="2" style="font-family:arial,sans-serif"> is acceptable.</font></div><div style="font-family:arial,sans-serif"><br /></div></div></div></div><h2><a name="TOC-Use-and-validate-specific-constrained-types-let-the-compiler-work-for-you."></a><font face="arial, sans-serif" size="3"><b>Use and validate specific, constrained types; let the compiler work for you.</b></font></h2><div><font size="2" style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:16px"><span style="line-height:normal"><span style="color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap"><font face="arial, sans-serif">Use the most specific data type you can to enable the type system to do part of your data validation. In other words, do you really need to use a string?</font><font face="arial, sans-serif"> </font></span></span><span style="font-family:arial,sans-serif;color:rgb(34,34,34);line-height:normal">Using </span><font face="arial, sans-serif">more constrained types (e.g. primitives, </font><font face="courier new, monospace">enum</font><font face="arial, sans-serif">, </font><font face="courier new, monospace">GURL</font><font face="arial, sans-serif"> instead of </font><font face="courier new, monospace">std::string</font><font face="arial, sans-serif"> that is "supposed to be a URL", etc.) lets the compiler do the type checking for you and leads to faster, often smaller, and safer code that is easier for maintainers and reviewers to understand. The most common pattern we see violating this is unnecessary use of strings</font><font face="arial, sans-serif" style="line-height:normal;font-family:arial,sans-serif">, which are essentially "blob types" that are often slow (copying, lexing/parsing, used as keys in maps), and "vague" in API contracts. Th</font><font style="line-height:normal"><span style="font-family:arial,sans-serif;color:rgb(34,34,34)">e caller has to know how the callee is going to parse the </span><span style="font-family:arial,sans-serif;color:rgb(34,34,34)">string, and the callee has to parse and validate it correctly (see the next section).</span></font><br /></font><div><div style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:16px"><font face="arial, sans-serif" size="2"><br /></font></div><div><font face="arial, sans-serif" size="2" style="line-height:16px"><span style="line-height:20px">Some other specific tips:</span></font><div><ul><li style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:16px"><font size="2"><span style="color:rgb(34,34,34);line-height:normal"><font face="arial, sans-serif">Use integer types </font><font face="arial, sans-serif">for ids (e.g. audio device IDs: </font></span><a href="https://codereview.chromium.org/12440027" style="color:rgb(17,85,204);text-decoration:none;font-family:arial,sans-serif;line-height:normal" target="_blank">https://codereview.chromium.org/12440027</a>).</font></li><li style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:16px"><font size="2"><span style="color:rgb(34,34,34);font-family:arial,sans-serif;line-height:normal">Use pre-defined styles instead of allowing arbitrary CSS </span><span style="color:rgb(34,34,34);font-family:arial,sans-serif;line-height:normal">injection with strings, which could lead to XSS (e.g. </span><a href="https://codereview.chromium.org/11413018/diff/8041/chrome/browser/ui/browser_instant_controller.cc#newcode252" style="color:rgb(17,85,204);text-decoration:none;font-family:arial,sans-serif;line-height:normal" target="_blank">https://codereview.chromium.org/11413018/diff/8041/chrome/browser/ui/browser_instant_controller.cc#newcode252</a>).</font></li><li style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:16px"><font size="2"><font face="arial, sans-serif" style="color:rgb(34,34,34);line-height:normal;white-space:pre-wrap">If you must pass filesystem</font><font face="arial, sans-serif" style="color:rgb(34,34,34);line-height:normal;white-space:pre-wrap"> pathnames and path components over IPC, use </font><font face="courier new, monospace" style="color:rgb(34,34,34);line-height:normal;white-space:pre-wrap">FilePath</font><font face="arial, sans-serif" style="color:rgb(34,34,34);line-height:normal;white-space:pre-wrap"> and check for path traversal using </font><font face="courier new, monospace" style="color:rgb(34,34,34);line-height:normal;white-space:pre-wrap">FilePath::ReferencesParent</font><font face="arial, sans-serif" style="color:rgb(34,34,34);line-height:normal;white-space:pre-wrap">.</font></font></li><li><font color="#222222" face="arial, sans-serif" size="2"><span style="white-space:pre-wrap"><span style="font-size:13px;white-space:normal">IPC_ENUM_TRAITS() is deprecated (it generates unchecked enums). </span>IPC_ENUM_TRAITS_MAX_VALUE and friends in ipc/param_traits_macros.h can help you make a constrained enum. Keep in mind that it takes the range min..max <i>inclusive</i>.</span></font></li></ul><font color="#222222" size="2"><span style="white-space:pre-wrap"><div style="font-family:arial,sans-serif"><font color="#222222" face="arial, sans-serif" size="2"><span style="white-space:pre-wrap"><br /></span></font></div><font face="arial, sans-serif">More generally, don't implement your own serialization mechanism (</font><font face="courier new, monospace">std::vector&lt;char&gt;</font><font face="arial, sans-serif">, protobufs) on top of the Chrome IPC system. Break up your structs and use the primitives provided by Chrome IPC.</font></span></font></div><div><font color="#222222" face="arial, sans-serif" size="2"><span style="white-space:pre-wrap"><br /></span></font><div><div style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:16px"><h2 style="font-family:arial,sans-serif;line-height:normal;font-weight:bold"><a name="TOC-Keep-it-simple."></a><b style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:16px"><span style="vertical-align:baseline"><font face="arial, sans-serif" size="3">Keep it simple.</font></span></b></h2></div><div><b style="font-family:arial,sans-serif;font-size:small;background-color:transparent"><span style="font-weight:normal;color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap">Send limited capabilities (e.g. file descriptors -but not directory descriptors-), not open-ended, complex objects (e.g. pathnames). For example, to write a temporary file, the renderer should ask the browser for a FD; the browser should create one entirely according to its own policy; and then the browser should pass the FD to the </span></b><b style="font-family:arial,sans-serif;font-size:small;background-color:transparent"><span style="font-weight:normal;color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap">renderer.</span></b></div><div><font color="#222222" face="arial, sans-serif" size="2"><span style="white-space:pre-wrap"><br /></span></font><h2 style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:normal;font-weight:bold"><a name="TOC-Be-aware-of-the-subtleties-of-integer-types."></a><span style="font-family:arial,sans-serif"><font size="3">Be aware of the subtleties of integer types.</font></span></h2><div style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:normal"><span style="font-family:arial,sans-serif;font-size:small;background-color:transparent">First read about the scary security implications of</span><a href="http://en.wikipedia.org/wiki/Integer_overflow" style="font-family:arial,sans-serif;font-size:small;background-color:transparent;color:rgb(85,26,139);text-decoration:none" target="_blank"> integer arithmetic. </a><span style="font-family:arial,sans-serif;font-size:small;background-color:transparent">Adhere to these best practices:</span></div><div><ul><li style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:16px"><font face="arial, sans-serif" size="2"><span style="line-height:normal"><b><font color="#222222" style="font-weight:normal"><span style="white-space:pre-wrap">Use unsigned types for values that shouldn't be negative or where defined overflow behavior is required.</span></font><span style="font-weight:normal;color:rgb(34,34,34);white-space:pre-wrap"> </span></b></span></font></li><li><font color="#222222" face="arial, sans-serif" size="2"><span style="white-space:pre-wrap">Use explicitly sized integer types, such as int32, int64, or uint32, since sender and receiver could potentially use different interpretations of implicit types.</span></font></li><li style="font-family:arial,sans-serif;line-height:16px"><span style="line-height:normal;white-space:pre-wrap;color:rgb(34,34,34)"><font size="2">Use the integer templates and cast templates in <a href="https://code.google.com/p/chromium/codesearch#chromium/src/base/numerics/" target="_blank">base/numerics</a> to avoid overflows, <i>especially when calculating the size or offset of memory allocations.</i></font></span></li></ul><font color="#222222" face="arial, sans-serif" size="2"><span style="white-space:pre-wrap"><i><br /></i></span></font><h2><a name="TOC-Be-aware-of-the-subtleties-of-integer-types-across-C-and-Java-too."></a><font color="#222222" face="arial, sans-serif" size="3"><span style="white-space:pre-wrap"><b>Be aware of the subtleties of integer types across C++ and Java, too.</b></span></font></h2></div><div><font color="#222222" size="2"><span style="white-space:pre-wrap"><font face="arial, sans-serif">When writing code for Chromium on Android, you will often need to marshall arrays, and their sizes and indices, across the language barrier (and possibly also across the IPC barrier). The trouble here is that the Java integer types are well-defined, but the C++ integer types are whimsical. A Java </font><font face="courier new, monospace">int</font><font face="arial, sans-serif"> is a signed 32-bit integer with well-defined overflow semantics, and a Java </font><font face="courier new, monospace">long</font><font face="arial, sans-serif"> is a signed 64-bit integer with well-defined overflow semantics. in C++, only the explicitly-sized types (e.g. </font><font face="courier new, monospace">int32_t</font><font face="arial, sans-serif">) have guaranteed exact sizes, and only </font><font face="courier new, monospace">unsigned</font><font face="arial, sans-serif"> integers (of any size) have defined overflow semantics.</font></span></font></div><div><font color="#222222" size="2"><span style="white-space:pre-wrap"><font face="arial, sans-serif"><br /></font></span></font></div><div><font color="#222222" size="2"><span style="white-space:pre-wrap"><font face="arial, sans-serif">Essentially, Java integers <i>actually are</i> what people often (incorrectly) <i>assume</i> C++ integers are. Furthermore, Java </font><font face="courier new, monospace">Array</font><font face="arial, sans-serif">s are indexed with Java </font><font face="courier new, monospace">int</font><font face="arial, sans-serif">s, whereas C++ arrays are indexed with </font><font face="courier new, monospace">size_t</font><font face="arial, sans-serif"> (often implicitly cast, of course). Note that this also implies a 2 Gig limit on the number of elements in an array that is coming from or going to Java. That Should Be Enough For Anybody, but it's good to keep in mind.</font></span></font></div><div><font color="#222222" size="2"><span style="white-space:pre-wrap"><font face="arial, sans-serif"><br /></font></span></font></div><div><font color="#222222" size="2"><span style="white-space:pre-wrap"><font face="arial, sans-serif">You need to make sure that every integer value survives its journey across languages intact. That generally means explicit casts with range checks; the easiest way to do this is with the </font><font face="courier new, monospace">base::checked_cast</font><font face="arial, sans-serif"> </font></span></font><span style="background-color:transparent;font-size:small;color:rgb(34,34,34);font-family:arial,sans-serif;white-space:pre-wrap">cast or </span><font color="#222222" style="background-color:transparent;font-size:10pt"><span style="white-space:pre-wrap"><font face="courier new, monospace">base::saturated_cast</font><font face="arial, sans-serif"> </font></span></font><span style="background-color:transparent;font-size:small;color:rgb(34,34,34);font-family:arial,sans-serif;white-space:pre-wrap">templates in <a href="https://code.google.com/p/chromium/codesearch#chromium/src/base/numerics/safe_conversions.h" target="_blank">safe_conversions.h</a></span><font face="arial, sans-serif" style="background-color:transparent;font-size:small;white-space:pre-wrap;color:rgb(34,34,34)">. Depending on how the integer object is going to be used, and in which direction the value is flowing, it may make sense to cast the value to </font><font face="courier new, monospace" style="background-color:transparent;font-size:small;white-space:pre-wrap;color:rgb(34,34,34)">jint</font><font face="arial, sans-serif" style="background-color:transparent;font-size:small;white-space:pre-wrap;color:rgb(34,34,34)"> (an ID or regular integer), </font><font face="courier new, monospace" style="background-color:transparent;font-size:small;white-space:pre-wrap;color:rgb(34,34,34)">jlong</font><font face="arial, sans-serif" style="background-color:transparent;font-size:small;white-space:pre-wrap;color:rgb(34,34,34)"> (a regular long integer), </font><font face="courier new, monospace" style="background-color:transparent;font-size:small;white-space:pre-wrap;color:rgb(34,34,34)">size_t</font><font face="arial, sans-serif" style="background-color:transparent;font-size:small;white-space:pre-wrap;color:rgb(34,34,34)"> (a size or index), or one of the other more exotic C++ integer types like </font><font face="courier new, monospace" style="background-color:transparent;font-size:small;white-space:pre-wrap;color:rgb(34,34,34)">off_t</font><font face="arial, sans-serif" style="background-color:transparent;font-size:small;white-space:pre-wrap;color:rgb(34,34,34)">.</font></div><div><font color="#222222" face="arial, sans-serif" size="2"><span style="white-space:pre-wrap"><br /></span></font></div><div><h2 style="font-family:Verdana,Helvetica,Arial,sans-serif;font-weight:normal;line-height:16px"><a name="TOC-Don-t-leak-information-don-t-pass-information-that-would-be-risky-to-use."></a><b style="line-height:normal"><span style="vertical-align:baseline;white-space:pre-wrap"><font face="arial, sans-serif" size="3">Don't leak information, don't pass information that would be risky to use.</font></span></b></h2><div style="font-family:Verdana,Helvetica,Arial,sans-serif;font-weight:normal;line-height:16px"><b style="line-height:normal"><span style="color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap"><font face="arial, sans-serif" size="2"><span style="font-weight:normal">In particular, don't leak addresses/pointers over the IPC channel, either explicitly or accidentally. (Don't defeat our <a href="http://en.wikipedia.org/wiki/Address_space_layout_randomization" style="color:rgb(85,26,139);text-decoration:none">ASLR</a>!). Worse: sending pointers over the IPC is almost certainly a sign of something very wrong and could easily lead to memory corruption.</span></font></span></b></div><div style="font-family:Verdana,Helvetica,Arial,sans-serif;font-weight:normal;line-height:16px"><b style="line-height:normal"><span style="color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap"><font face="arial, sans-serif" size="2"><span style="font-weight:normal"><br /></span></font></span></b></div><div><span style="vertical-align:baseline;white-space:pre-wrap"><font color="#222222" face="arial, sans-serif" size="2">Do not pass |child_id|, that is <a href="https://code.google.com/p/chromium/codesearch#chromium/src/content/common/child_process_host_impl.h&amp;l=54">the ID of child processes as viewed by the browser</a> (which are not the same as the OS PIDs), from the browser via IPC. This construct is risky because it would be tempting to send back this ID to the browser and mistakenly use it as an authentication token, which it is not.</font></span></div><div style="font-family:arial,sans-serif;font-weight:bold;line-height:normal"><b style="line-height:normal"><span style="color:rgb(34,34,34);vertical-align:baseline;white-space:pre-wrap"><font face="arial, sans-serif" size="2"><span style="font-weight:normal"><br /></span></font></span></b></div></div><h2 style="font-family:arial,sans-serif;line-height:normal"><a name="TOC-Avoid-Unsafe-Common-Coding-Patterns"></a><font color="#222222" size="3"><span style="white-space:pre-wrap"><b>Avoid Unsafe (Common) Coding Patterns</b></span></font></h2><div><ul style="font-family:Verdana,Helvetica,Arial,sans-serif;line-height:16px"><li><span style="line-height:normal;white-space:pre-wrap;color:rgb(34,34,34)"><font size="2"><font face="arial, sans-serif">Avoid accessing underlying string or array data via std::string::c_str or std::vector::data. If you do, make sure to stay in bounds. Note that </font><font face="courier new, monospace">std::string::</font><span style="font-family:courier new,monospace">operator[]</span><font face="arial, sans-serif"> and </font><font face="courier new, monospace">std::vector::</font><span style="font-family:courier new,monospace">operator[]</span><font face="arial, sans-serif"> are not required to do bounds checking.</font></font></span></li><li style="font-family:arial,sans-serif"><span style="color:rgb(34,34,34);line-height:normal;white-space:pre-wrap"><font size="2">Databases: when storing together both user data and metadata, make sure that the renderer can't directly read/write metadata via some sort of corrupted access of user data.</font></span></li><li style="font-family:arial,sans-serif"><font color="#222222" size="2" style="line-height:normal"><span style="white-space:pre-wrap">Databases: assume that the database might be corrupted. Integers might have become large or negative, filesystem paths might have changed to "../../../../etc/passwd", etc. Do some validation.</span></font></li><li><font size="2"><font color="#222222"><span style="line-height:normal;white-space:pre-wrap"><font face="arial, sans-serif">Avoid browser side </font><font face="courier new, monospace">DCHECK</font><font face="arial, sans-serif">s and WebKit </font><font face="courier new, monospace">ASSERT</font><font face="arial, sans-serif">s that fail with invalid input from the renderer. </font></span></font><font color="#222222" style="font-family:arial,sans-serif;line-height:normal"><span style="white-space:pre-wrap">Such conditions should be explicitly checked instead. Otherwise the macros lead to false sense of security since they aren't compiled into release builds.</span></font></font></li><li><font color="#222222" size="2" style="line-height:normal"><span style="white-space:pre-wrap"><font face="arial, sans-serif">Be careful with shared memory mappings (specifically tracking their sizes on either side of the IPC channel). Do not store and trust sizes on one side of the channel. Avoid specifying the size when calling </font><font face="courier new, monospace">Map</font><font face="arial, sans-serif">.</font></span></font></li><li><font color="#222222" size="2" style="line-height:normal"><span style="white-space:pre-wrap"><font face="arial, sans-serif">Keep serializers/deserializers within </font><font face="courier new, monospace">ParamTraits</font><font face="arial, sans-serif"> </font><font face="courier new, monospace">Read</font><font face="arial, sans-serif"> and </font><font face="courier new, monospace">Write</font><font face="arial, sans-serif"> methods. </font></span></font></li><li><font color="#222222" size="2" style="line-height:normal"><span style="font-family:arial,sans-serif;white-space:pre-wrap">If your design requires you to serialize a structure into a string you are doing it wrong. Look at the</span><span style="white-space:pre-wrap"><font face="courier new, monospace"> IPC_STRUCT_</font></span><span style="font-family:arial,sans-serif;white-space:pre-wrap"> macros.</span></font></li><li><font color="#222222" size="2" style="line-height:normal"><span style="white-space:pre-wrap"><font face="arial, sans-serif">Use </font><font face="courier new, monospace">ReadLength</font><font face="arial, sans-serif"> wherever possible in deserializers instead of </font><font face="courier new, monospace">ReadInt</font><font face="arial, sans-serif">, et c.</font></span></font></li><li><font color="#222222" size="2" style="line-height:normal"><span style="white-space:pre-wrap"><font face="arial, sans-serif">Avoid using </font><font face="courier new, monospace">ReadData</font><font face="arial, sans-serif"> within deserializers. If your design requires this it is almost certainly wrong.</font></span></font></li><li style="font-family:arial,sans-serif"><font color="#222222" size="2" style="line-height:normal"><span style="white-space:pre-wrap">Remember that, when specifying an ID in a message, a compromised process on the less privileged end can can specify another valid ID. Code should not assume that objects looked up by ID match other local state. </span></font></li></ul><h2><a name="TOC-What-About-Mojo-"></a><font color="#222222" face="arial, sans-serif" size="2"><span style="white-space:pre-wrap">What About Mojo?</span></font></h2></div></div></div></div></div></div></div><div><font color="#222222" face="arial, sans-serif" size="2"><span style="white-space:pre-wrap">The underlying principles are exactly the same whether reviewing a Mojo-based CL vs. a Chromium IPC CL.  A short presentation can be found at </span></font><span style="background-color:transparent;white-space:pre-wrap"><font color="#222222" face="arial, sans-serif" size="2"><a href="https://docs.google.com/a/google.com/presentation/d/1uo8WAD6Hgq_gjlODb2ioUNGQs9RGlUYSQywxZOwCzcE/edit?usp=sharing">https://docs.google.com/a/google.com/presentation/d/1uo8WAD6Hgq_gjlODb2ioUNGQs9RGlUYSQywxZOwCzcE/edit?usp=sharing</a></font></span></div><div><font color="#222222" face="arial, sans-serif" size="2"><span style="white-space:pre-wrap"><br /></span></font></div></div></td></tr></tbody></table>
</div> 
</div> 
<div id="sites-canvas-bottom-panel">
<div id="sites-attachments-container">
</div>
</div>
</div> 
</td> 
</tr>
</table> 
</div> 
</div> 
<div id="sites-chrome-footer-wrapper">
<div id="sites-chrome-footer-wrapper-inside">
<div id="sites-chrome-footer">
</div>
</div>
</div>
</div> 
</div> 
<div id="sites-chrome-adminfooter-container">
<div xmlns="http://www.w3.org/1999/xhtml" class="sites-adminfooter" role="navigation"><p><a class="sites-system-link" href="https://www.google.com/a/UniversalLogin?service=jotspot&amp;continue=https://sites.google.com/a/chromium.org/dev/Home/chromium-security/education/security-tips-for-ipc">Sign in</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/recentChanges">Recent Site Activity</a><span aria-hidden="true">|</span><a class="sites-system-link" href="/system/app/pages/reportAbuse" target="_blank">Report Abuse</a><span aria-hidden="true">|</span><a class="sites-system-link" href="javascript:;" onclick="window.open(webspace.printUrl)">Print Page</a><span aria-hidden="true">|</span><span class="sites-system-link">Powered By</span> <b class="powered-by"><a href="http://sites.google.com">Google Sites</a></b></p></div>
</div>
</div> 
</div> 
<div id="sites-chrome-onebar-footer">
</div>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('sjl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" src="https://ssl.gstatic.com/sites/p/56e332/system/js/jot_min_view__en.js"></script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    window.jstiming.load.tick('jl');
  </script>
<script xmlns="http://www.w3.org/1999/xhtml">
      
          sites.core.Analytics.createTracker();
          sites.core.Analytics.trackPageview();
        
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
                    sites.Searchbox.initialize(
                        'sites-searchbox-search-button',
                        {"object":[]}['object'],
                        'search-site',
                        {"label":"Configure search options...","url":"/system/app/pages/admin/settings"});
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
      gsites.HoverPopupMenu.createSiteDropdownMenus('sites-header-nav-dropdown', false);
    </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("7648876402527094", "Navigation", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_7648876402527094');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("14720868319272995", "Quick links", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_14720868319272995');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
            JOT_setupNav("19690813310444355", "Other sites", false);
            JOT_addListener('titleChange', 'JOT_NAVIGATION_titleChange', 'COMP_19690813310444355');
          </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
  setTimeout(function() {
    var fingerprint = gsites.date.TimeZone.getFingerprint([]);
    gsites.Xhr.send('https://www.chromium.org/_/tz', null, null, 'GET', null, null, { afjstz: fingerprint });
  }, 500);
</script>
<script xmlns="http://www.w3.org/1999/xhtml">
                    window.onload = function() {
                      if (false) {
                        JOT_setMobilePreview();
                      }
                      var loadTimer = window.jstiming.load;
                      loadTimer.tick("ol");
                      loadTimer["name"] = "load," + webspace.page.type + ",user_page";
                      window.jstiming.report(loadTimer, {}, 'https://gg.google.com/csi');
                    }
                  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
        JOT_insertAnalyticsCode(false,
            false);
      </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    var maestroRunner = new gsites.pages.view.SitesMaestroRunner(
        webspace, "en");
    maestroRunner.initListeners();
    maestroRunner.installEditRender();
  </script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript" defer="true">
  //<![CDATA[
    // Decorate any fastUI buttons on the page with a class of 'goog-button'.
    if (webspace.user.hasWriteAccess) {
      JOT_decorateButtons();
    }

    // Fires delayed events.
    (function() {
      JOT_fullyLoaded = true;
      var delayedEvents = JOT_delayedEvents;
      for (var x = 0; x < delayedEvents.length; x++) {
        var event = delayedEvents[x];
        JOT_postEvent(event.eventName, event.eventSrc, event.payload);
      }
      JOT_delayedEvents = null;
      JOT_postEvent('pageLoaded');
    })();
  //]]>
</script>
<script xmlns="http://www.w3.org/1999/xhtml" type="text/javascript">
    JOT_postEvent('decorateGvizCharts');
  </script>
<script type="text/javascript">
          JOT_setupPostRenderingManager();
        </script>
<script type="text/javascript">
          JOT_postEvent('renderPlus', null, 'sites-chrome-main');
        </script>
<div id="server-timer-div" style="display:none"> </div>
<script type="text/javascript">
          window.jstiming.load.tick('render');
          JOT_postEvent('usercontentrendered', this);
        </script>
</body>
</html>
